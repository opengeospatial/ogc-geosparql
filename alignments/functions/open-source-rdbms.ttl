@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix gsrdb: <https://www.geospatial.io/rdb/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

gsrdb:001df68432ad4eccbad259e3ace7ae86 a fno:Function ;
    dcterms:description """Associates a Vector Style to a Vector Styled Layer.
coverage_name must identify an existing Vector Layer.
An already registered Style can be referenced either by its unique Stile ID or by its Name; anyway a reference by Name could eventually fail if the Name is ambiguous (duplicate).

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterVectorStyledLayer" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterVectorStyledLayer( coverage_name String , style_id Integer ) : Integer

SE_RegisterVectorStyledLayer( coverage_name String , style_name Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0036d89414e74f43ac5b3d4af0dd822b a fno:Function ;
    dcterms:description """returns the base-2 logarithm of x

Log2(x) is equivalent to Log(x) / Log(2)""" ;
    fno:name "Log2" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Log2( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:0083f3a0a2c447b380efbc8cfb9244b4 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOSTRUNK" ;
    fno:name "HasGeosTrunk" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeosTrunk( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:008507253bac4c1b9aa59466e4b62f3d a fno:Function ;
    dcterms:description """The first form simply is an alias name for MbrIntersects; the other form allows to define the second MBR by two extreme points [x1, y1] and [x2, y2].
The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments;

convenience predicate: TRUE if the intersection of both MBRs is not empty""" ;
    fno:name "EnvelopesIntersects" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax """ST_EnvIntersects( geom1 Geometry , geom2 Geometry ) : Integer

ST_EnvelopesIntersects( geom1 Geometry , geom2 Geometry ) : Integer

ST_EnvIntersects( geom1 Geometry , x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision ) : Integer

ST_EnvelopesIntersects( geom1 Geometry , x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:00c03f93c9b742d3a3f8fa2daa9b9aa1 a fno:Function ;
    dcterms:description "Compute the shadow footprint for a single geometry" ;
    fno:name "ST_GeometryShadow" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:00d88d08539745e19b6690c6417b7d41 a fno:Function ;
    dcterms:description "Return a Geometry with a normal form" ;
    fno:name "ST_Normalize" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:013aae3402fc429cb25fb0d8f81b9d65 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling VirtualKNN (KNN) support" ;
    fno:name "HasKNN" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasKNN( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:013dccc524424ee497a26de82afb23a6 a fno:Function ;
    dcterms:description """return a new Point projected from a start point using a bearing and distance.
start_point is expected to be simple long/lat Point.
distance is expected to be measured in meters; azimuth (aka bearing or heading) has the same identical meaning as in ST_Azimuth().
NULL is returned on failure or on invalid arguments.""" ;
    fno:name "Project" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """Project( start_point Geometry, distance Double precision, azimuth Double precision ) : Geometry

ST_Project( start_point Geometry, distance Double precision, azimuth Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:01a5c1817d354d85b792939ff7dc62bc a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_RotateY.htm> ;
    fno:name "ST_RotateY" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:01a7ff5e065e4330bad00d81414efda2 a fno:Function ;
    dcterms:description "returns the rectangle bounding g as a Polygon. The Polygon is defined by the corner points of the bounding box [(MINX, MINY),(MAXX, MINY), (MAXX, MAXY), (MINX, MAXY), (MINX, MINY)]." ;
    fno:name "Envelope" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """Envelope( geom Geometry ) : Geometry

ST_Envelope( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:01b21d25eec3419a86f1cabb518de27b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_EQ.htm> ;
    fno:name "=" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:01b988c4ace54f6586bc86e3d5693547 a fno:Function ;
    dcterms:description """Check if a Geometry corresponds to a valid Trajectory.
Return a POINT Geometry being interpolated along the Geometry (that is expected to be a valid Trajectory) accordingly to the given M-value.
The interpolated Point will have the same dimensions and SRID of the Trajectory.

NULL will be returned on invalid arguments.""" ;
    fno:name "TrajectoryInterpolatePoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Linear Referencing" ;
    gsrdb:hasSyntax "ST_TrajectoryInterpolatePoint( geom Geometry , m_value Double ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:01e42575b08d43d2975d40a6c5a38506 a fno:Function ;
    dcterms:description """Computes the minimum clearance of a geometry.
The minimum clearance is the smallest amount by which a vertex could be move to produce an invalid polygon, a non-simple linestring, or a multipoint with repeated points.
If the minimum clearance cannot be defined for a geometry (such as with a single point, or a multipoint whose points are identical, a value of Infinity will be calculated.
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumClearance" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumClearance( geom Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0202ede5e893465ab3915e752cf12689 a fno:Function ;
    dcterms:description "Just an alias-name for GEOSMinimumRotatedRectangle()." ;
    fno:name "OrientedEnvelope" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """OrientedEnvelope( geom Geometry ) : Geometry

ST_OrientedEnvelope( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:024057401c584e33a6469648e12321b9 a fno:Function ;
    dcterms:description """returns the dimension model used by the geometric object as:
'XY', 'XYZ', 'XYM' or 'XYZM'""" ;
    fno:name "CoordDimension" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "CoordDimension( geom Geometry ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:02678c23a8874493bf5a7f841de298f5 a fno:Function ;
    dcterms:description """db-prefix can be NULL, and in this case the "MAIN" database will be assumed.
obj-name must identify any valid DB-Object (Table. View, Trigger or Index).

Returns a short description about the intended scope of any valid DB-Object.
NULL on invalid DB-objects.""" ;
    fno:name "GetDbObjectScope" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "GetDbObjectScope( db-prefix Text , obj-name Text ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:0269fc96577b4b96bede2fa6d813a4be a fno:Function ;
    dcterms:description """Will return the most recent XPath error (if any).

NULL will be returned if there is no pending XPath error.""" ;
    fno:name "XB_GetLastXPathError" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetLastXPathError( void ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:02bd09139d66451fa63c40167fdac512 a fno:Function ;
    dcterms:description """Will return the WKT expression corresponding to a given Reference System; the definitions will be taken directly from the private PROJ's own database.
auth_name and auth_srid identify the requested Reference System.auth_name can be NULL, and in this case EPSG will be assumed.
the optional argument style determines which WKT format should be adopted, and must be one between GDAL, ESRI, ISO-2015 or ISO-2018 (this latter being the default setting).
the optional argument indented if set to TRUE will nicely format a multiline WKT expression, otherwise a single monolithic line lacking any white-space or new-line will be printed (the default is TRUE).
the optional argument indentation determines how many white-spaces are to be used for indenting (only meaningful if indented=TRUE; the default values is 4).

NULL will be returned on failure.
Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).""" ;
    fno:name "PROJ_AsWKT" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax """PROJ_AsWKT( auth_name String , auth_srid Integer ) : String

PROJ_AsWKT( auth_name String , auth_srid Integer , style String ) : String

PROJ_AsWKT( auth_name String , auth_srid Integer , style String , indented Boolean ) : String

PROJ_AsWKT( auth_name String , auth_srid Integer , style String , indented Boolean , indentation Integer ) : String""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:03429f0cdd9d43bb98ae08a9501c96aa a fno:Function ;
    dcterms:description """Will change the geometry of a Link without affecting Topology relationships.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "ChangeLinkGeom" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_ChangeLinkGeom( netname Text , link-id Integer , linestring Geometry ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:037b3430a58c4f1389efc78f52db8ea7 a fno:Function ;
    dcterms:description """Removes a geometry column from Spatial MetaData tables and drops any related trigger
the column itself still continues to exist untouched as an ordinary, unconstrained column

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "DiscardGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "DiscardGeometryColumn( table String , column String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:03890a51f53b4ee8a85d2e3ac94ca3d6 a fno:Function ;
    dcterms:description """Validates an existing ordinary column in order to possibly transform it in a real geometry column, thus updating the FDO/OGR Spatial Metadata tables

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "RecoverFDOGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax "RecoverFDOGeometryColumn( table String , column String , srid Integer , geom_type String , dimension Integer, geometry_format String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:03d8b55724494698b91cf153b7a749b9 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix by chaining a further 2D or 3D Translate to a previous transformation matrix.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_Translate" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_Translate( matrix AffineMatrix , tx Double precision , ty Double precision ] ) : AffineMatrix

ATM_CreateTranslate( matrix AffineMatrix , tx Double precision , ty Double precision , tz Double precision ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:05171a80aab64c7ebf8e06b801806538 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Transform.htm> ;
    fno:name "ST_Transform" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:053a93fe69e0495d870c32b7da7cd857 a fno:Function ;
    dcterms:description """Sets or updates the Title and Abstract for the WMS Layer identified by getmap_url and layer_name.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_SetGetMapInfos" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_SetGetMapInfos( getmap_url Text , layer_name Text , title Text , abstract Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:053c9a3799b24a6ca60731e5ac8a263a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomFromWKB.htm> ;
    fno:name "ST_GeomFromWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:055473052bbe4a528da2b4a1dc8e6d4b a fno:Function ;
    dcterms:description """Almost the same as CreateSpatialIndex(), but specifically intended to support Geometry columns created by AddTemporaryGeometryColumn()
db-prefix is the schema-name of some attached database
Such an Attached Database must necessarily be of the :memory: type being previously created by issuing an SQL statement like:ATTACH DATABASE ':memory:' AS prefix;
table and column must identify an already existing Temporary Geometry located on that Database.
If the above prerequisites are not fullfilled this function will always fail.""" ;
    fno:name "CreateTemporarySpatialIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CreateTemporarySpatialIndex( db-prefix String , table String , column String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0587d80600c1418cb9bfffa22a901d50 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Force_2D.htm> ;
    fno:name "ST_Force_2D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:058861d2acf84929b2549214851c9e52 a fno:Function ;
    dcterms:description """return a densified geometry using a given distance tolerance

Additional vertices will be added to every line segment that is greater this tolerance; these vertices will evenly subdivide that segment. Only linear components of input geometry are densified.
NULL is returned on failure.""" ;
    fno:name "GeosDensify" ;
    gsrdb:hasRequiredModule "GEOS-3100" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GeosDensify( geom Geometry , tolerance Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:058b17efc9374f85b659052ea4364bf1 a fno:Function ;
    dcterms:description "Return a Geometry's z-values by a factor" ;
    fno:name "ST_MultiplyZ" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:05927ee457e04bf48a6cc1684d004e8b a fno:Function ;
    dcterms:description "Remove repeated points from a Geometry" ;
    fno:name "ST_RemoveRepeatedPoints" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:05c6f736670841e1be1b5067b0e2b44d a fno:Function ;
    dcterms:description """Kind of lightweight/simplified ST_BuildArea: the first input Geometry is always expected to represent a closed LINESTRING assumed to identify the output polygon's Exterior Ring.
The second input Geometry (if any) is expected to be a LINESTRING or MULTILINESTRING identifying any polygon's Interior Ring (and all them are expected to be correctly closed).
Please note well: this function doesn't perform any internal topology check, so it could possibly return an invalid polygon on invalid input.

NULL will be returned if any error is encountered""" ;
    fno:name "MakePolygon" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """MakePolygon( geom1 Geometry [ , geom2 Geometry ] ) : Geometry

ST_MakePolygon( geom1 Geometry [ , geom2 Geometry ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:06073be275a64b33a3267eab17b05c45 a fno:Function ;
    dcterms:description "Split triangles into smaller triangles according to classes" ;
    fno:name "ST_TriangleContouring" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:0616ea5ec61e4792be58a07c4700805b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_DumpRings.htm> ;
    fno:name "ST_DumpRings" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:061960c135a7452b937067d15cacebd2 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LongestLine.htm> ;
    fno:name "ST_LongestLine" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:06cda49647934f81a1f3fd11686a6860 a fno:Function ;
    dcterms:description """return a geometric object representing the Delaunay Triangulation corresponding to the input Geometry

The input Geometry could have any arbitrary type; eventually all Linestring's / Polygon's vertices will be dissolved into Points, so to implicitly always get a MultiPoint.
The returned Geometry will usually be of the MultiPolygon type (a collection of Triangles), but will be a MultiLinestring if the optional edges_only argument is set to TRUE
The optional argument tolerance is intended to normalize the input Geometry, suppressing repeated (or too close) Points.
NULL is returned on failure.""" ;
    fno:name "DelaunayTriangulation" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """DelaunayTriangulation( geom Geometry [ , edges_only Boolean [ , tolerance Double precision ] ] ) : Geometry

ST_DelaunayTriangulation( geom Geometry [ , edges_only Boolean [ , tolerance Double precision ] ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:06ce0fcb5e1c4d62b2529655b611cc8d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ContainsProperly.htm> ;
    fno:name "ST_ContainsProperly" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:072a10cafba9437b91372d3d441a8a6e a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix.
the first form (no arguments) will return an Identity matrix.
the second and third forms will respectively return a fully initialized 2D or 3D Affine Transformation matrix.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_Create" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_Create( void ) : AffineMatrix

ATM_Create( a Integer , b Integer , d Integer , e Integer , xoff Integer , yoff Integer ] ) : AffineMatrix

ATM_Create( a Integer , b Integer , c Integer , d Integer , e Integer , f Integer , g Integer , h Integer , i Integer , xoff Integer , yoff Integer , zoff Integer ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:07347936330b447bab76b9bef460a8ba a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/Find_SRID.htm> ;
    fno:name "Find_SRID" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" .

gsrdb:07810ef4727f4900aba99eac3b8b042f a fno:Function ;
    dcterms:description """return the Hausdorff distance between geom1 and geom2
learn more

the optional argument densify_fract is the fraction (in the range 0.0 / 1.0) by which to densify each segment. Each segment will be split into a number of equal-lenght subsegments, whose fraction of the total length is closest to the given fraction.
The smaller densify_fract we specify, the more acurate Hausdorff distance we get. But, the computation time and the memory usage increase with the square of the number of subsegments.

The second form of this SQL function (supporting densify_fract) is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "HausdorffDistance" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """HausdorffDistance( geom1 Geometry , geom2 Geometry ) : Double precision

HausdorffDistance( geom1 Geometry , geom2 Geometry , densify_fract Double precision ) : Double precision

ST_HausdorffDistance( geom1 Geometry , geom2 Geometry ) : Double precision

ST_HausdorffDistance( geom1 Geometry , geom2 Geometry , densify_fract Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:07a237c2b4f941d49b073feb1544e22c a fno:Function ;
    dcterms:description """return the minimum Z-coordinate value for geom as a double precision number.
if the optional argument nodata-value is set, then any NODATA value eventually found will be ignored.

NULL will be returned if geom isn't a valid Geometry or if geom has no Z dimension.""" ;
    fno:name "MinZ" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """ST_MinZ( geom Geometry) : Double precision

ST_MinZ( geom Geometry , nodata-value Double ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:07a2d5f667314e5094ba386afb23050f a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments.

TRUE if the only Points in common between g1 and g2 lie in the union of the boundaries of g1 and g2""" ;
    fno:name "Touches" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Touches( geom1 Geometry , geom2 Geometry ) : Integer

ST_Touches( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:08285c3862d5429da192f6742d78d07d a fno:Function ;
    dcterms:description """Extracts a generic BLOB from an XmlBLOB object, exactly corresponding to the original XmlDocument and fully preserving the original character encoding.
If the optional argument indent is set to some positive value then the returned XmlDocument will be nicely formatted and properly indented by the required factor; ZERO will cause the whole XmlDocument to be returned as a single line. (default setting is negative indenting, i.e. not reformatting at all).

NULL will be returned for any invalid input (not a valid XmlBLOB object).""" ;
    fno:name "XB_GetPayload" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetPayload( xmlObject XmlBLOB [ , indent Integer ] ) : BLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:084bb138817d482e85d6f42fb782a2cd a fno:Function ;
    dcterms:description "Make a Geometry valid" ;
    fno:name "ST_MakeValid" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:094f5a017b484143ae2f83b5d19bcf8e a fno:Function ;
    dcterms:description """Will split an Edge by creating a new intermediate Node. The original Edge will be deleted and will be replaced by two new Edges.

Will return the ID of the inserted Node on success; an exception will be raised on failure.""" ;
    fno:name "NewEdgesSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_NewEdgesSplit( toponame Text , edge-id Integer , point Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:097e46317a794c88a6b8dd30df1b20c7 a fno:Function ;
    dcterms:description """Will return a Geometry of the MULTILINESTRING XYZM type by parsing an XmlBLOB corresponding to a GPX document.

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when a valid XmlBLOB does not contains a GPX document, or when a valid GPX does not contains any <trk> tag.""" ;
    fno:name "XB_MLineFromGPX" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_MLineFromGPX( xmlObject XmlBLOB ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0985e8c58f6540f0aa251a3f4e459f2f a fno:Function ;
    dcterms:description """returns the Curvosity Index of a generic simple Linestring:
the Index will range between 1.0 (in the case of a perfectly straight line) and 0.0 (in the case of a closed line with coincident start and end points).
if the optional argument extra-points is explicitly set, then the given number of equidistant points will be interpolated into the reference line used to calculate the Index.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "CurvosityIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """CurvosityIndex( line LineString ) : Double precision

CurvosityIndex( line LineString , extra-points Integer ) : Double precision

ST_CurvosityIndex( line LineString ) : Double precision

ST_CurvosityIndex( line LineString , extra-points Integer ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:099a4c4bdf92428bb5283450eb2f7fac a fno:Function ;
    dcterms:description "Return a  MULTIPOLYGON of buffers centered at a Geometry and of increasing buffer Size" ;
    fno:name "ST_RingBuffer" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:09a8bd44597946e6b968e2b30136ec26 a fno:Function ;
    dcterms:description """returns the File Name (excluding an eventual File Extension) from a relative or absolute Pathname.
Will return NULL for invalid input of for any path lacking a File Name.""" ;
    fno:name "FileNameFromPath" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "FileNameFromPath( TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:09f1b26d3f004d26a235901e94db3fa0 a fno:Function ;
    dcterms:description """Completely removes an already defined Vector Coverage this including any furher depency; the underlying Spatial Table will be absolutely unaffected.
coverage_name must identify an existing Vector Coverage.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterVectorCoverage" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_UnregisterVectorCoverage( coverage_name String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0a2d5b60407e4440a205f88722f16388 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_PointFromText.htm> ;
    fno:name "ST_PointFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:0a40449ee97e4821bdff7dc13b2a58ba a fno:Function ;
    dcterms:description "Geometry to Well Known Binary" ;
    fno:name "ST_AsBinary" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:0a72179478d54e44922c5867ad5e095f a fno:Function ;
    dcterms:description """This function will inspect the DB layout checking if it corresponds to the GPKG own style.
The optional db_prefix argument specifies which one of the ATTACHED databases is intended to be checked; if unspecified or NULL then the MAIN database will be assumed by default.

the return type is Integer, with a return value of 1 for TRUE, 0 for FALSE and -1 on invalid args or if no ATTACHED-DB identified by db_prefix exists.""" ;
    fno:name "CheckGeoPackageMetaData" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """CheckGeoPackageMetaData( void ) : Integer

CheckGeoPackageMetaData ( db_prefix String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0b0e170beba44a57b040b1197944e679 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Intersection.htm> ;
    fno:name "ST_Intersection" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeography "2" ;
    gsrdb:supportsGeometry "1" .

gsrdb:0b3aa370a42546b6ab671d225b7a6146 a fno:Function ;
    dcterms:description """Will attempt to export into an Output GeoTable all Geometries out from a Topology-Network matching (via Seed-based references) a given Reference-GeoTable containing information attributes.
db-prefix can be NULL, and in this case the reference GeoTable is expected to be located within the "MAIN" database.
ref-column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the reference GeoTable must be properly registered and must match both SRID and dimensions declared by the target Network.
this function accepts input Geometries of the following classes: Point, MultiPoint, Linestring, MultiLinestring, GeometryCollection and Geometry.All areal Geometries (Polygon, MultiPolygon) will be always ignored.
the output GeoTable will be always located on the "MAIN" DB and must not exists; it will be automatically created with the same identical attributes of the reference GeoTable.
all spatial features found into the reference GeoTable will be copied into the output GeoTable. All information attributes will be preserved exactly as they are, and the feature's Geometry will be built by aggregating all Topology objects matching the reference Geometry by Seed correspondences.If no matching Topology objectes are found the result will be a NULL output Geometry.
Please note: this function will automatically invoke TopoNet_UpdateSeeds() (incremental mode).

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_ToGeoTable" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax """TopoNet_ToGeoTable( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text ) : Integer

TopoNet_ToGeoTable( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text , with-spatial-index Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:0b7e18c4255046438589465b2aac8142 a fno:Function ;
    dcterms:description """This one simply is an utility function intended to create several ancillary metadata tables required by libspatialite v.5 and subsequent versions.
the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE

Note: will be automatically called by both InitSpatialMetaData() or InitSpatialMetaDataFull(), but could be usefull for recovering old databases created by earlier versions; it's absolutely harmless because any existing MetaTable will be left untouched.""" ;
    fno:name "InitAdvancedMetaData" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """InitAdvancedMetaData( void ) : Integer

InitAdvancedMetaData( transaction Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0b7e77a4578a4f67b0fd01510f543bf0 a fno:Function ;
    dcterms:description """return a grid of square cells (having the edge length of size) precisely covering the input Geometry.
The specific Type of returned Geometry is controlled by the mode attribute value:
any positive value will cause a MultiLinestring to be returned.
zero (default value) will cause a MultiPolygon to be returned.
any negative value will cause a MultiPoint to be returned.
If the optional origin argument (expected to be a Point) is not specified then the (0,0) grid origin will be assumed by default.

NULL will be returned if any error is encountered.""" ;
    fno:name "SquareGrid" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """SquareGrid( geom ArealGeometry , size Double precision [ , mode Integer , [ origin PointGeometry ] ] ) : Geometry

ST_SquareGrid( geom ArealGeometry , size Double precision [ , mode Integer , [ origin PointGeometry ] ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0bf6bc41a8a04a5abb2dda91852d8b04 a fno:Function ;
    dcterms:description """returns a new Geometry derived from the input Geometry; all Rings within the output Geometry are ensured to be correctly closed, i.e. will have exactly coincident start and end vertices.
This function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.

Will return NULL on invalid argument.""" ;
    fno:name "EnsureClosedRings" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions attempting to repair malformed Geometries" ;
    gsrdb:hasSyntax "EnsureClosedRings( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0c1531f3f058440f943ee0bbfa74cb6a a fno:Function ;
    dcterms:description "return the area of s" ;
    fno:name "Area" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Surface [Polygon or Ring]" ;
    gsrdb:hasSyntax """Area( s Surface ) : Double precision

ST_Area( s Surface ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:0c22ec02f3a54addb90e93daa55f6e4f a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_XMax.htm> ;
    fno:name "ST_XMax" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:0c34a709850c47689a5f2035e606b57f a fno:Function ;
    dcterms:description """return the x-coordinate for geom MBR's rightmost side as a double precision number.

NULL will be returned if geom isn't a valid Geometry.""" ;
    fno:name "MbrMaxX" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """MbrMaxX( geom Geometry) : Double precision

ST_MaxX( geom Geometry) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0c434297896a442d8df8a868c0db9a4a a fno:Function ;
    dcterms:description """Makes an alternative SRS to become the standard Reference System for the corresponding WMS Layer.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_DefaultRefSys" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_DefaultRefSys( getmap_url Text , layer_name Text , ref_sys Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:0c53dc5592bc40bb99a5cf1def46dec3 a fno:Function ;
    dcterms:description """returns the value of e (the base of natural logarithms) raised to the power of x

the inverse of this function is Log() (using a single argument only) or Ln()""" ;
    fno:name "Exp" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Exp( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:0d0031bce07e4efc975020f27e837f93 a fno:Function ;
    dcterms:description """return 1 if the BLOB argument really contains valid Polynomial coeffs, 0 if not.

will return -1 on invalid argument.""" ;
    fno:name "GCP_IsValid" ;
    gsrdb:hasRequiredModule """GrassGis code
GPLv2+""" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "GCP_IsValid( matrix PolynomialCoeffs ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0d2bdc82fb5b4a1aab80bdd71f10e7c9 a fno:Function ;
    dcterms:description """Updates Copyright and License infos associated to a Vector Coverage.
coverage_name must identify an existing Vector Coverage.
copyright identifies the Copyright holder; if NULL the current value will be preserved.
the optional argument license must reference one the Data Licenses registered into the data_licenses table, as e.g. CC0 1.0 or CC BY 4.0.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_SetVectorCoverageCopyright" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_SetVectorCoverageCopyright( coverage_name String , copyright String ) : Integer

SE_SetVectorCoverageCopyright( coverage_name String , copyright String , license String ): Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0de4b05d1bf24958b78bc0cc73ddd09f a fno:Function ;
    dcterms:description """return a geometric object obtained by reprojecting coordinates into the Reference System identified by newSRID

All the following optional arguments are available only when SpatiaLite is built on the top of PROJ.6 (or any later version):
area_of_use: the BBOX of this Geometry (always required to be in SRID=4326) will be possibly used by PROJ.6 in order to optimize the transformation as much as possible.may be eventually NULL (default setting).
proj_string_from: an user defined text string accepted by PROJ.6 identifying the origin CRS of the transformation.
proj_string_to: an user defined text string accepted by PROJ.6 identifying the destination CRS of the transformation.
Interpretation:
if both proj_string_from and proj_string_to are NULL (default setting) then PROJ.6 will be left free to choose the best possible transformation between the origin and the destination CRSes.
if both proj_string_from and proj_string_to are instead explicitly set then PROJ.6 will be constrained to identify the origin and destination CRSes accordingly to the received string values. Valid CRS strings accepted by PROJ.6 can be:
a proj-string as e.g. +proj=longlat +datum=WGS84 +no_defs
a WKT definition of the intended CRS.
a CRS name as e.g. WGS 84 or Monte Mario / Italy zone 1
a canonical CRS reference as e.g. EPSG:4326 or EPSG:3003
or in the alternative notation as e.g. urn:ogc:def:crs:EPSG::3003
Special case: if only proj_string_from is explicitly set whilst proj_string_to is NULL, then proj_string_from will be expected to contain an user defined transformation pipeline
Any other different combination of proj_string_from and proj_string_to will be consided invalid and will raise an exception.""" ;
    fno:name "Transform" ;
    gsrdb:hasRequiredModule "PROJ" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """Transform( geom Geometry , newSRID Integer ) : Geometry

ST_Transform( geom Geometry , newSRID Integer ) : Geometry

Transform( geom Geometry , newSRID Integer , area_of_use Geometry ) : Geometry

ST_Transform( geom Geometry , newSRID Integer , area_of_use Geometry ) : Geometry

Transform( geom Geometry , newSRID Integer , area_of_use Geometry , proj_string_from Text ) : Geometry

ST_Transform( geom Geometry , newSRID Integer , area_of_use Geometry , proj_string_from Text ) : Geometry

Transform( geom Geometry , newSRID Integer , area_of_use Geometry , proj_string_from Text , proj_string_to Text ) : Geometry

ST_Transform( geom Geometry , newSRID Integer , area_of_use Geometry , proj_string_from Text , proj_string_to Text ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0e699bd701434e7db2827de0c67987d7 a fno:Function ;
    dcterms:description """Returns a LINESTRING geometry which represents the minimum diameter of the geometry.
The minimum diameter is defined to be the width of the smallest band that contains the geometry, where a band is a strip of the plane defined by two parallel lines.
This can be thought of as the smallest hole that the geometry can be moved through, with a single rotation.
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumWidth" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumWidth( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0e7f09f0145b460e84b8bac86c40fdc4 a fno:Function ;
    dcterms:description """returns the KML [Keyhole Markup Language] representation
The first form will simply generate the geometry element: the second form will generate a complete KML entity""" ;
    fno:name "AsKml" ;
    gsrdb:hasRequiredModule "PROJ" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax """AsKml( geom Geometry [ , precision Integer ] ) : String
AsKml( name String, description String, geom Geometry [ , precision Integer ] ) : String""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0f7163ba99aa4310adc960868f5832ff a fno:Function ;
    dcterms:description "returns the rectangle bounding g as a Polygon. The bounding rectangle is expanded in all directions by an amount specified by the second argument." ;
    fno:name "Expand" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_Expand( geom Geometry , amount Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0fa30bd232c7476a9d2161754053a21e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NumGeometries.htm> ;
    fno:name "ST_NumGeometries" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:0fb0f7ff0e0b4ee384c5ae587c8c929f a fno:Function ;
    dcterms:description """This function will add a spatial reference system entry for the specified EPSG identifier; it is an error to try to add the entry if it already exists

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgInsertEpsgSRID" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgInsertEpsgSRID( srid Integer ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0fc1d780aa3c40b59c3f57d2c6647af4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_StartPoint.htm> ;
    fno:name "ST_StartPoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:0fc2d59c844947c3a513670b728d68a5 a fno:Function ;
    dcterms:description """(Re)Creates all Triggers supporting the raster_coverages table required by RasterLite-2

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure)""" ;
    fno:name "ReCreateRasterCoveragesTriggers" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "ReCreateRasterCoveragesTriggers( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:0fcdd96ba5684e8994d994f293cafc2d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NRings.htm> ;
    fno:name "ST_NRings" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:0ff3d132f3f04da89ba8f9d1e3018a33 a fno:Function ;
    dcterms:description """Change the coordinate precision of a geometry.
The output will be a valid Geometry.
NULL is returned on failure.""" ;
    fno:name "ReducePrecision" ;
    gsrdb:hasRequiredModule "GEOS-3100" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """ReducePrecision( geom Geometry , grid_size Double precision ) : Geometry

ST_ReducePrecision( geom Geometry , grid_size Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1040017d8243425fb1e26f521432f88d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_BuildArea.htm> ;
    fno:name "ST_BuildArea" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:1043583b925b42feac5146de4132c57f a fno:Function ;
    dcterms:description """Will return the FileIdentifier defined within the XmlBLOB (if any).

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when no FileIdentifier is defined.

Supported only on ISO Metadata XML Documents.""" ;
    fno:name "XB_GetFileId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetFileId( xmlObject XmlBLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1079080f6ce649bcb8873dfa743cdec9 a fno:Function ;
    dcterms:description "Returns TRUE if the Stored Procedures and Variables tables have been succesfully created or if they already exist, otherwise FALSE." ;
    fno:name "StoredProc_CreateTables" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredProc_CreateTables( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:10bf61a2f92d454d86ce42af7aa88599 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Force_3DZ.htm> ;
    fno:name "ST_Force_3DZ" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:11067145d571457e8d3939cd73ad02f3 a fno:Function ;
    dcterms:description "Calculate a regular grid of  POLYGON s based on a Geometry or a table of Geometries" ;
    fno:name "ST_MakeGrid" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:112b7ee0ad374c5685f52965c954e2e1 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Relate.htm> ;
    fno:name "ST_Relate" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:11557f194e6c41deb49737d3541512ea a fno:Function ;
    dcterms:description """returns the sample standard deviation of the input values
aggregate function""" ;
    fno:name "Stddev_samp" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Stddev_samp( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1168624246494acc9fd727739cd7fbc4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Reverse.htm> ;
    fno:name "ST_Reverse" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:11935715d646447fa9f59b8e585e58f0 a fno:Function ;
    dcterms:description "return a geometric object that is the set union of geom1 and geom2" ;
    fno:name "GUnion" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """GUnion( geom1 Geometry , geom2 Geometry ) : Geometry
OpenGis name for this function is Union(), but it conflicts with an SQLite reserved keyword

ST_Union( geom1 Geometry , geom2 Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:119a15ac15a14deeb3c57753d73b1cfb a fno:Function ;
    dcterms:description """Unregisters an alternative setting from the corresponding WMS Layer.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_UnRegisterSetting" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_UnRegisterSetting( getmap_url Text , layer_name Text , key Text , value Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:11e7181d020d420486ff06d33f2042e6 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Scale.htm> ;
    fno:name "ST_Scale" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:122289d582384ea9a30e367a04fefdb3 a fno:Function ;
    dcterms:description """return the Determinant from an Affine Transformation matrix.

will return 0.0 on invalid argument.""" ;
    fno:name "ATM_Determinant" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_Determinant( matrix AffineMatrix ] ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:12688b13bf764dbf8d9c766c6d98159b a fno:Function ;
    dcterms:description """a generic Geometry (possibly a GEOMETRYCOLLECTION) will be returned merging geom1 and geom2

NULL will be returned if any error is encountered""" ;
    fno:name "Collect" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Collect( geom1 Geometry , geom2 Geometry ) : Geometry

ST_Collect( geom1 Geometry , geom2 Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:12edb87d744e437f8295d58f93738261 a fno:Function ;
    dcterms:description """returns a new Linestring by removing the Point at position (zero-based index).
NULL will be returned if any error is encountered.""" ;
    fno:name "RemovePoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """RemovePoint( line LineString , position Integer ) : Linestring

ST_RemovePoint( line LineString , position Integer ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:13139fbb895d4591bf06557b29e9b6fa a fno:Function ;
    dcterms:description "Construct an ellipse" ;
    fno:name "ST_MakeEllipse" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:135767d89637440890af4e7919e8f9d4 a fno:Function ;
    dcterms:description """return a new Geometry corresponding to the input Geometry; as much Linestring / Ring vertices as required will be eventually interpolated so to ensure that no segment will be longer than dist.
NULL is returned on failure.""" ;
    fno:name "Segmentize" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """Segmentize( geom Geometry, dist Double precision ) : Geometry

ST_Segmentize( geom Geometry , dist Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:136bad03c08246a98b6d6504bbc841b7 a fno:Function ;
    dcterms:description "Retrieves from an MbrCache any entity whose MBR falls within the rectangle identified by extreme points x1 y1 and x2 y2" ;
    fno:name "FilterMbrWithin" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for MbrCache-based queries" ;
    gsrdb:hasSyntax "FilterMbrWithin( x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision )" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:139be7f3975a4454bbb605b962cd24e4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Union.htm> ;
    fno:name "ST_Union" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:13db91f8fc344751879948edb289ffd4 a fno:Function ;
    dcterms:description """Registers a permanent Stored Procedure:
name is expected to uniquely identify the Stored Procedure.
title is expected to specify a short description of the Stored Procedure intended scopes.
object is expected to be a valid BLOB of the SQL Procedure type created by SqlProc_FromText() or SqlProc_FromFile().

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredProc_Register" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredProc_Register( name String , title String , object BLOB ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:146b272f4342427784648a9efc531db4 a fno:Function ;
    dcterms:description """Creates a Vector Coverage based on an already existing Topology-Geometry.
coverage_name is the symbolic name uniquely identifying each Vector Coverage (Primary Key).
topogeo_name is expected to match the corresponding entries in the topologies table.
the optional arguments title and abstract could be eventually be specified for better human readability.
if both optional arguments is_queryable and is_editable are left unspecified the Vector Coverage will then be neither queryable nor editable.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterTopoGeoCoverage" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterTopoGeoCoverage( coverage_name String , topology_name String ) : Integer

SE_RegisterTopoGeoCoverage( coverage_name String , topology_name String , title String , abstract String ) : Integer

SE_RegisterTopoGeoCoverage( coverage_name String , topology_name String , title String , abstract String , is_queryable Boolen , is_editable Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:14b3fa7399054ac591290edb2e588f2f a fno:Function ;
    dcterms:description """Will remove an Edge. If the removed Edge separated two Faces the original Faces will be deleted and replaced by a new Face.

Will return the ID of the inserted Face on success; an exception will be raised on failure.""" ;
    fno:name "RemEdgeNewFace" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_RemEdgeNewFace( toponame Text , edge-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:162206a030e6430e83bd7a37836dfd99 a fno:Function ;
    dcterms:description """will return the DD coordinates from within a DMS expression, which must contain both the Latitude and Longitude (in that order)

NULL will be returned on invalid input.""" ;
    fno:name "DMS to DD" ;
    gsrdb:hasScope "SQL conversion functions from DD/DMS notations (longitude/latitude)" ;
    gsrdb:hasSyntax """LongitudeFromDMS( dms_expression String ) : Double precision

LatitudeFromDMS( dms_expression String ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1638431cd7a44f33b36c17c6efadc047 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_CurveToLine.htm> ;
    fno:name "ST_CurveToLine" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:166fb08323e64efa91cae080f244a7f7 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Perimeter.htm> ;
    fno:name "ST_Perimeter" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:16ff4616d62b4990ba7b6001dc76c3b1 a fno:Function ;
    dcterms:description """returns TRUE orFALSE depending on the actual behavior of current SQLite.
Note:SQLite can effectively enforce strict SQL quoting (single-quoted text constants and double-quoted table and column names) only since version 3.29.0, depending on build-time settings.""" ;
    fno:name "check_strict_sql_quoting" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "rcheck_strict_sql_quoting( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1716c9b13e25425590efe770d5771efc a fno:Function ;
    dcterms:description """Returns a space delimited list of all Variable symbolic names declared by the given SQL Procedure object.

An exception will be raised on failure or invalid argument.""" ;
    fno:name "SqlProc_AllVariables" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_AllVariables( object BLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1781e9dd2fc4421b99ff95ba60b69996 a fno:Function ;
    dcterms:description """return a geometric object representing the corresponding left- (or right-sided) single-sided buffer
NULL is returned whenever is not possible deriving a single-sided buffer from the original geometry
[a single not-closed LINESTRING is expected as input]""" ;
    fno:name "SingleSidedBuffer" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """SingleSidedBuffer( geom Curve , radius Double precision , left_or_right Integer ) : Curve

ST_SingleSidedBuffer( geom Curve , radius Double precision , left_or_right Integer ) : Curve""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:17925c2beadb4a0b956f264e0daa8519 a fno:Function ;
    dcterms:description "construct a MultiPoint" ;
    fno:name """MPointFromWKB
MultiPointFromWKB""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """MPointFromWKB( wkbMultiPoint Binary [ , SRID Integer] ) : MultiPoint

ST_MPointFromWKB( wkbMultiPoint Binary [ , SRID Integer] ) : MultiPoint

MultiPointFromWKB( wkbMultiPoint Binary [ , SRID Integer] ) : MultiPoint ST_MultiPointFromWKB( wkbMultiPoint Binary [ , SRID Integer] ) : MultiPoint""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:17b2089e9da14987b89218e1db1b6125 a fno:Function ;
    dcterms:description """Checks a TEXT string testing if it corresponds to an Integer Number.
The function returns 1 if TRUE and 0 if FALSE; -1 is returned when the argument is not a Text string.

Examples of valid Integer strings:
'1234'
'+5678'
'-4321'
'      +12345678'""" ;
    fno:name "IsInteger" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "IsInteger( value Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1861affd9980490cae0b61b5a0404f96 a fno:Function ;
    dcterms:description "Return the maximum x-value of a Geometry" ;
    fno:name "ST_XMax" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:18d0ba39ffcd4ba2bfc8dc01f2e4ca83 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NumInteriorRings.htm> ;
    fno:name "ST_NumInteriorRings" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:193ad0ee6cc74d6db463745d74f9e3c0 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Area.htm> ;
    fno:name "ST_Area" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:1952d93cdb19480a819b9690da582e93 a fno:Function ;
    dcterms:description """return a geometric object obtained by reflecting coordinates according to xAxis and yAxis switches

i.e. if xAxis is 0 (FALSE), then x-coordinates remains untouched; otherwise x-coordinates will be reflected""" ;
    fno:name """ReflectCoords
ReflectCoordinates""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """ReflectCoords( geom Geometry , xAxis Integer , yAxis Integer ) : Geometry

ReflectCoordinates( geom Geometry , xAxis Integer , yAxis Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:197eac55dc3f4ea791c50e11e72cc4c2 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ClosestPoint.htm> ;
    fno:name "ST_ClosestPoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:1994ed859d0f41b48b233851c617a15c a fno:Function ;
    dcterms:description """Will return the character encoding internally declared by the XmlDocument corresponding to the input XmlBLOB.

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when the XmlDocument doesn't explicitly declares any encoding.""" ;
    fno:name "XB_GetEncoding" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetEncoding( xmlObject XmlBLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:19a379a419d24048a4fed9eb6c338acb a fno:Function ;
    dcterms:description """Will return the most recent XML validating error (if any).

NULL will be returned if there is no pending validating error.""" ;
    fno:name "XB_GetLastValidateError" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetLastValidateError( void ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:19c3bc665ff04bcb9933e9f989005ed8 a fno:Function ;
    dcterms:description """Returns the shortest line between two geometries.
NULL is returned for invalid arguments (or if distance is ZERO)""" ;
    fno:name "ShortestLine" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """ShortestLine( geom1 Geometry , geom2 Geometry ) : Curve

ST_ShortestLine( geom1 Geometry , geom2 Geometry ) : Curve""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1a8a997f49064557925aca034133d9d8 a fno:Function ;
    dcterms:description """Given any arbitrary GEOMETRY will return a derived MULTIPOLYGON geometry. Sub-geometries not being of the POLYGON type will be ignored.
NULL will be returned if any error is encountered (or when no POLYGON is found).""" ;
    fno:name "ExtractMultiPolygon" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax "ExtractMultiPolygon( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1a8e56ca3dbb4a6abc42b08cc45dd77a a fno:Function ;
    dcterms:description "Returns TRUE if the TinyPoint BLOB encoding is currently enabled, otherwise FALSE" ;
    fno:name "IsTinyPointEnabled" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "IsTinyPointEnabled( void ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1aac32548bb44f1883b72e7c82789b38 a fno:Function ;
    dcterms:description "Well Known Text to  MULTILINESTRING" ;
    fno:name "ST_MLineFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:1aecc75288114924b9f9a1e650d4f247 a fno:Function ;
    dcterms:description "return a geometric object obtained by translating coordinates according to shiftX, shiftY and shiftZ values" ;
    fno:name "ST_Translate" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax "ST_Translate( geom Geometry , shiftX Double precision , shiftY Double precision , shiftZ Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1afeeabaf28f42649670e78be93df5c1 a fno:Function ;
    dcterms:description """a generic Geometry (possibly a GEOMETRYCOLLECTION) will be returned merging input Geometries all together
aggregate function

NULL will be returned if any error is encountered""" ;
    fno:name "Collect" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Collect( geom Geometry ) : Geometry

ST_Collect( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1b5be4ebcc7b4211a8b34c8dc382dc58 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid EXIF image
Please note: any valid EXIF image is also a valid JPEG""" ;
    fno:name "IsExifBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsExifBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1b8d019c447e4688b95db90f6cfddb20 a fno:Function ;
    dcterms:description """returns a POINT-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any Geometry containing only a single POINT and no other elementary sub-geometry""" ;
    fno:name "CastToPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToPoint( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1d29d3716aeb46dc82c6cf61ce3f5575 a fno:Function ;
    dcterms:description """Will import an external Shapfile from a Zipfile into an internal Table. This function is almost the same as ImportSHP(), except in that the Shapefile is expected to be stored within some Zipfile.
The only two arguments having a different meaning are:
zip_path: expected to be the full or relative pathname of some Zipfile.
basename base name of the Shapefile within the Zipfile (omitting any .shp, .shx or .dbf suffix).

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportZipSHP" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportZipSHP( zip_path Text , basename Text , table Text , charset Text ) : Integer

ImportZipSHP( zip_path Text , basename Text , table Text , charset Text [ , srid Integer [ , geom_column Text [ , pk_column Text [ , geometry_type Text [ , coerce2D Integer [ , compressed Integer [ , spatial_index Integer [ , text_dates Integer [ , colname_case Text [ , update_statistics Integer [ , verbose Integer ] ] ] ] ] ] ] ] ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1d2f327c6c5f4399a0bb92bf67261727 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments;

convenience predicate: TRUE if g2 MBR is completely contained in g1 MBR""" ;
    fno:name "MbrContains" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrContains( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1d4ab142cc804fd781029eb09b0649e1 a fno:Function ;
    dcterms:description "returns the Well-known Binary representation" ;
    fno:name "AsBinary" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for obtaining the Well-known Text / Well-known Binary Representation of a geometric object" ;
    gsrdb:hasSyntax """AsBinary( geom Geometry ) : Binary

ST_AsBinary( geom Geometry ) : Binary""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1d621468652145dda0a0a5f93a973888 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsGpx" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsGpx( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1d9cc2098c3e403d99b9573e971ae270 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsGeoJSON.htm> ;
    fno:name "ST_AsGeoJSON" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:1da13bbde07c466d8197eabdcd5ebd59 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix by chaining a further Rotate (along the X axis) to a previous transformation matrix.

will return NULL on invalid argument.""" ;
    fno:name "ATM_XRoll" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_XRoll( matrix AffineMatrix , angleInDegrees Double precision ] ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1db604b321cd40e5ad8768ab30a84d88 a fno:Function ;
    dcterms:description "Return true if Geometry A contains Geometry B" ;
    fno:name "ST_Contains" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:1e1373de13244d23901a0c2e92b3319b a fno:Function ;
    dcterms:description """Enables the Geopackage amphibious mode
All connections are initially started with a disabled amphibious mode, that must be explicitly enabled whenever required.
Note: GPKG mode and GPKG amphibious mode are mutually exclusive options.""" ;
    fno:name "EnableGpkgAmphibiousMode" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "EnableGpkgAmphibiousMode( void ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1e34005ea0c247aa842cf3c5df207812 a fno:Function ;
    dcterms:description """Will return the SRID value [if any] corresponding to a given WKT expression defining a CRS.

-1 will be returned if no CRS supported by PROJ.6 matches the WKT expression.
NULL will be returned on invalid argument.
Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).""" ;
    fno:name "PROJ_GuessSridFromWKT" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax "PROJ_GuessSridFromWKT( wkt String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1e50f36153ac49b6b3926290ffb7b65e a fno:Function ;
    dcterms:description "return the x-coordinate of Point p as a double precision number" ;
    fno:name "X" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Point" ;
    gsrdb:hasSyntax """X( pt Point ) : Double precision

ST_X( pt Point ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1e9389b9615545e3b865ccc87b6f6007 a fno:Function ;
    dcterms:description """Return a GeoHash representation (geohash.org) of the geometry.
A GeoHash encodes a point into a text form that is sortable and searchable based on prefixing.
If no precision is specficified ST_GeoHash returns a GeoHash based on full precision of the input geometry type.Points return a GeoHash with 20 characters of precision (about enough to hold the full double precision of the input).
Other types return a GeoHash with a variable amount of precision, based on the size of the feature. Larger features are represented with less precision, smaller features with more precision. The idea is that the box implied by the GeoHash will always contain the input feature.
When explicitly set the precision argument will determine how many characters should by used by the returned GeoHash.

ST_GeoHash will not work with geometries that are not in geographic (lon/lat) coordinates""" ;
    fno:name "GeoHash" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """GeoHash( geom Geometry [ , precision Integer ] ) : String

ST_GeoHash( geom Geometry [ , precision Integer ] ) : String""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1ee36b9dd7f74a4eb3871bd0db6a125d a fno:Function ;
    dcterms:description "Return the coordinate(s) of a Geometry closest to a  POINT" ;
    fno:name "ST_ClosestCoordinate" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:1f0976e949fb4f158fc4b64de879c964 a fno:Function ;
    dcterms:description "return a geometric object that is the closure of the set difference of geom1 and geom2" ;
    fno:name "Difference" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """Difference( geom1 Geometry , geom2 Geometry ) : Geometry

ST_Difference( geom1 Geometry , geom2 Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1f55f55dc0dc4fd9b2dc76b80aa9539f a fno:Function ;
    dcterms:description """returns the value most recently obtained by sequence_nextval() for the Sequence identified by seq_name
Will return NULL if the Sequence identified by seq_name has not yet been used.""" ;
    fno:name "sequence_currval" ;
    gsrdb:hasScope "SQL functions manipulating Sequences" ;
    gsrdb:hasSyntax "sequence_currval ( seq_name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:1f6e8eb1022943d8a485815c2a3e5b39 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix representing a 2D or 3D Scale transformation.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_CreateScale" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_CreateScale( sx Double precision , sy Double precision ] ) : AffineMatrix

ATM_CreateScale( sx Double precision , sy Double precision , sz Double precision ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:1f938205f6dd4a5b8135c9394860c17a a fno:Function ;
    dcterms:description """return a geometric object defined by buffering a distance around the geom, where dist is in the distance units for the Spatial Reference of geom.

the optional quadrantsegments argument specifies the number of segments used to approximate a quarter circle (default is 30).""" ;
    fno:name "Buffer" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """Buffer( geom Geometry , dist Double precision [ , quadrantsegments Integer ] ) : Geometry

ST_Buffer( geom Geometry , dist Double precision [ , quadrantsegments Integer ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2035e9d5ca61467c8a38319ab4ddedb6 a fno:Function ;
    dcterms:description """Adds an alternative SRID to an already defined Vector Coverage.
coverage_name must identify an existing Vector Coverage.
srid is expected to match the corresponding entries in the spatial_ref_sys table.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterVectorCoverageSrid" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_RegisterVectorCoverageSrid( coverage_name String , srid Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:208b4658015c4292a485828ab9d117ee a fno:Function ;
    dcterms:description "returns the Well-known Text representation" ;
    fno:name "AsText" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for obtaining the Well-known Text / Well-known Binary Representation of a geometric object" ;
    gsrdb:hasSyntax """AsText( geom Geometry ) : String

ST_AsText( geom Geometry ) : String""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:20ae8f40e31341c590a72f6fff0cd3be a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_SRID.htm> ;
    fno:name "ST_SRID" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:216d99226e554eb580a590957b3cf0be a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Force_Collection.htm> ;
    fno:name "ST_Force_Collection" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:217183165d6c4d288a33d46a18553c4c a fno:Function ;
    dcterms:description """return a new Geometry collecting all items resulting by splitting the input Geometry by the blade and falling on the right side.
NULL is returned on failure (or if the right side is empty).""" ;
    fno:name "SplitRight" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """SplitRight( geom Geometry, blade Geometry ) : Geometry

ST_SplitRight( geom Geometry , blade Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:2182dff9b5b94ad09fe7fb5ac803262c a fno:Function ;
    dcterms:description "Return the nth interior ring of a  POLYGON" ;
    fno:name "ST_InteriorRingN" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:22009ba6aede426fbde0919e650c7f20 a fno:Function ;
    dcterms:description "Well Known Text to  MULTIPOINT" ;
    fno:name "ST_MPointFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2297dcfdfe1843aebfe824ade4ecb890 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Within.htm> ;
    fno:name "ST_Within" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:22a0ed73cfe04cf29ecb4e606661f347 a fno:Function ;
    dcterms:description """return 1 if the Affine Transformation matrix can be inverted, 0 if not.

will return -1 on invalid argument.""" ;
    fno:name "ATM_IsInvertible" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_IsInvertible( matrix AffineMatrix ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:22b345d46e934686871dc16230a7f87b a fno:Function ;
    dcterms:description "Return the maximum y-value of a Geometry" ;
    fno:name "ST_YMax" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2336587f5cba430f8adc168b41bce4b4 a fno:Function ;
    dcterms:description "returns the current SpatiaLite version as a text string" ;
    fno:name "spatialite_version" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "spatialite_version( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:23b4d995980e4f64bbbc2aab8ae0739e a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a LINESTRING, MULTILINESTRING or GEOMETRYCOLLECTION) will be returned.
The input Geometry is arbitrary: any POINT will remain unaffected, but any LINESTRING or RING will be dissolved into elementary segments.

NULL will be returned if any error is encountered""" ;
    fno:name "DissolveSegments" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """DissolveSegments( geom Geometry ) : Geometry

ST_DissolveSegments( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:247c4382188944b4a1bd9169bd8245ac a fno:Function ;
    dcterms:description """Will create a DB-Table containing a validation report for the given TopoGeo: if the output table is empty and no exception was raised the Topology is assumed to be fully valid, otherwise a row will be inserted into the table for each detected Topology invalidity.
If the destination table already exists it will be dropped and created yet again.

Will return NULL on success; an exception will be raised on failure.""" ;
    fno:name "ValidateTopoGeo" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_ValidateTopoGeo( toponame Text ) : DB-table" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2585e6ff53c64838bfde7024e2992323 a fno:Function ;
    dcterms:description """Will return the proj-string expression corresponding to a given Reference System; the definitions will be taken directly from the private PROJ's own database.
auth_name and auth_srid identify the requested Reference System.auth_name can be NULL, and in this case EPSG will be assumed.

NULL will be returned on failure.
Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).""" ;
    fno:name "PROJ_AsProjString" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax "PROJ_AsProjString( auth_name String , auth_srid Integer ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:258b4364ca4d4e54b47af59f92837238 a fno:Function ;
    dcterms:description "Return the nth Geometry of a  GEOMETRYCOLLECTION" ;
    fno:name "ST_GeometryN" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2594fe50db74470ebf531b25fa0d1c1e a fno:Function ;
    dcterms:description "Create a  MULTIPOLYGON from edges of Geometries" ;
    fno:name "ST_Polygonize" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:25e64eafd3fa474caf8818121d94e69a a fno:Function ;
    dcterms:description """return the number of DBF files contained within the Zipfile identified by zip_path
NULL on invalid argument or if the Zipfile does not exist or is corrupted.""" ;
    fno:name "Zipfile_NumDBF" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "Zipfile_NumDBF( zip_path Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2609d0505c0a4e1e88be490d97b15fa7 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Overlap.htm> ;
    fno:name "&&" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2612cfc87d23441181cef71e2e942426 a fno:Function ;
    dcterms:description """Will import an external spreadsheet file (Microsoft Excel .xls or .xlsx formats or Libre/OpenOffice Calc .ods format) into an internal Table:
Mandatory arguments:
filename absolute or relative path leading to the spreadsheet file.
table name of the table to be created.
Optional arguments:
worksheet_index a positive integer selecting the target worksheet in the case of a multi-sheet: 0 by default..
first_line_titles boolean flag: the first line of the worksheet contains column names or not: 0 by default.

Will return the total number of imported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportXLS" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportXLS( filename Text , table Text ) : Integer

ImportXLS( filename Text , table Text [ , worksheet_index Integer [ , first_line_titles Integer ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2641639ff6964f7090d8fe014de85ad7 a fno:Function ;
    dcterms:description "Compute a single buffer on one side" ;
    fno:name "ST_SideBuffer" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:265525e1c151420b9fccc02bef9b4dbe a fno:Function ;
    dcterms:description """Will return the Schema URI internally declared by the input XmlDocument (xsi:noNamespeceSchemaLocation or xsi:schemaLocation).

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when the XmlDocument doesn't declares any Schema at all.""" ;
    fno:name "XB_GetInternalSchemaURI" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetInternalSchemaURI( xmlPayload BLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:26950ab73fd3430ba522cdf2e5d5cc13 a fno:Function ;
    dcterms:description """returns a comma-delimited list of integer or text values.
the optional argument delimiter can be used so to specify an alternative delimiter different from comma.
aggregate function

Will return NULL for invalid arguments.""" ;
    fno:name "MakeStringList" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax """MakeStringList( value ) : Text

MakeStringList( value , delimiter text) : Text""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:26bf2d9bb2c74d37b68c0f6888442fcb a fno:Function ;
    dcterms:description "construct a geometric object given its FGF binary Representation" ;
    fno:name "GeomFromFGF" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromFGF( fgfGeometry Binary [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:26e73e8f81a64050a44a67e9f10cc448 a fno:Function ;
    dcterms:description "Return the centroid of a Geometry" ;
    fno:name "ST_Centroid" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:26e8fce39af84f22a49375a6e0bb82b1 a fno:Function ;
    dcterms:description """returns a Geometry using the [XYM] space dimension.
If the input Geometry already supports M coordinates they'll be preserved as they are.
If the input Geometry does not support M coordinates they'll be set to no_data (defaulting to 0.0 if no_data is not specified).""" ;
    fno:name "CastToXYM" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Space-dimensions casting functions" ;
    gsrdb:hasSyntax """CastToXYM( geom Geometry ) : geom Geometry

CastToXYM( geom Geometry , no_data Double ) : geom Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:271324fb614b41e7a8a46a7e984c8979 a fno:Function ;
    dcterms:description "Simplify a Geometry" ;
    fno:name "ST_Simplify" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2716a1bc1eb2487d8f2e50d0412a303a a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsSldSeRasterStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsSldSeRasterStyle( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:27645712f5a54053a062fa974819e5de a fno:Function ;
    dcterms:description "meters / millimeters" ;
    fno:name "Millimeter" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToMm( x Double precision ) : Double precision

CvtFromMm( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:277b229ceb804517952a7bc9c15632c0 a fno:Function ;
    dcterms:description "Split Geometry A by Geometry B" ;
    fno:name "ST_Split" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:27ddbf01f2214d55a807e44173ec7c01 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Length.htm> ;
    fno:name "ST_Length" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2831637ece6742c7915fd95cd3b48d99 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_SetPoint.htm> ;
    fno:name "ST_SetPoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:28318bf3a4b2433a8a27293e0188d167 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix representing a 2D or 3D Translate transformation.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_CreateTranslate" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_CreateTranslate( tx Double precision , ty Double precision ] ) : AffineMatrix

ATM_CreateTranslate( tx Double precision , ty Double precision , tz Double precision ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:288af839a4a14017a9a12132e377feb6 a fno:Function ;
    dcterms:description """return TRUE (1) if the distance between geom1 and geom2 is within the given range.
Distances are always expressed in the length unit corresponding to the geoms own SRID

Note: When supported by GEOS3100 this function will be much more efficient""" ;
    fno:name "DistanceWithin" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for distance relationships" ;
    gsrdb:hasSyntax """DistanceWithin( geom1 Geometry , geom2 Geometry, range Double precision ] ) : Integer

ST_DistanceWithin( geom1 Geometry , geom2 Geometry, range Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:28a0250172ae460e8c5b9d2ed9db72c6 a fno:Function ;
    dcterms:description "Return the DE-9IM intersection matrix of the two Geometries or true if they are related by the given intersection matrix" ;
    fno:name "ST_Relate" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:28be18c9191a4ced896e960c3c9c5876 a fno:Function ;
    dcterms:description """Will return the pathname of the currently set SQL Logfile.

NULL will be returned if no SQL Logfile is currently set.""" ;
    fno:name "SqlProc_GetLogfile" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_GetLogfile( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:28fa029b8efe40cbb095f20c4862fc85 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_WKBToSQL.htm> ;
    fno:name "ST_WKBToSQL" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:292e81fe4b084c9d9ba0a20dae1e6def a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Affine.htm> ;
    fno:name "ST_Affine" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:292e87feda28448e9966cfc497d69a13 a fno:Function ;
    dcterms:description """Will return the most recent error message emitted by CreateRouting() or CreateRoutingNodes().
NULL will be returned if no such error message currently exists.""" ;
    fno:name "CreateRouting_GetLastError" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "CreateRouting_GetLastError( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:299eec5b4b324fd7ab657798704b8daf a fno:Function ;
    dcterms:description "Create a rectangular Polygon" ;
    fno:name "ST_MakeEnvelope" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2a60970b488f4e90bcc45fe7cf0c185b a fno:Function ;
    dcterms:description "Reverse the vertex order of a Geometry" ;
    fno:name "ST_Reverse" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2a6b6787b0d6428ca7ef906697a2c42d a fno:Function ;
    dcterms:description "Will return the most recent exception raised by this Topo-Net, or NULL if no exception is currently pending." ;
    fno:name "GetLastNetworkException" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "GetLastNetworkException( netname Text ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "" .

gsrdb:2a8dbfb5d7134a939cda80b6b29b09e1 a fno:Function ;
    dcterms:description """Will return a Point Geometry uniquely identifying an Edge (i.e. spatially intersecting the Edge).

Will return a Point on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_GetEdgeSeed" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_GetEdgeSeed( toponame Text , edge-id Integer ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2addd5b1538549ac96fd629ddfd05783 a fno:Function ;
    dcterms:description "Well Known Text to  POINT" ;
    fno:name "ST_PointFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2aea0109794a4be7850c3e1052754f7d a fno:Function ;
    dcterms:description "Compute the maximum distance between two geometries" ;
    fno:name "ST_MaxDistance" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2b189cea6e75464ab681b36b36896941 a fno:Function ;
    dcterms:description """Will remove all existing Faces from a Topology and then rebuild them from scratch.
If the Topology already is in a fully consistent state (i.e. all Edges are found to be assigned to their corresponding Faces) the function will immediately return whithout any further action.
If the Topology is in an inconsistent state (i.e. some Edges are found missing their corresponding Faces (preasumably due to previous calls of TopoGeo_AddLinesStringNoFace, TopoGeo_FromGeoTableNoFace and/or TopoGeo_FromGeoTableNoFaceExt) the function will effectively rebuild all Faces from scratch.
If the optional argument force_rebuild is set to TRUE (not 0) all Faces will be unconditionally rebuilt.
Caveat: for efficiency/speed reasons this function requires a substantial amount of available RAM: any attempt to process a very huge Topology on a platform supporting a very limited amount of RAM will probably fail due to insufficient memory errors.

Will return NULL on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_Polygonize" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_Polygonize( toponame Text )

TopoGeo_Polygonize( toponame Text , force_rebuild Boolean )""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:2b1dc336bf3c41a2a419176d805ccc3a a fno:Function ;
    dcterms:description """Will attempt to import all Geometries from an input GeoTable identified by db-prefix, table-name and column-name into an existing Topology-Geometry created with CreateTopology().
db-prefix can be NULL. In such a case the input GeoTable is expected to be located within the "MAIN" database, otherwise in the given db-prefix database.
column-name too can be NULL. In such a case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or contains more than one, an exception will be raised.Otherwise the given column name in "db-prefix"."column-name" will be used if it exists.
the input GeoTable must be properly registered and must match both the SRID and dimensions declared in the target Topology.
this function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.
The optional arguments line_max_points and line_max_length will be interpreted in the same way as used in TopoGeo_SubdivideLines() (default for both: NULL [ignore]).
The optional argument tolerance, when omitted, will assume the corresponding value used with CreateTopology().
This function will end after the first encountered Topology exception.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_FromGeoTable" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_FromGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text ) : Integer

TopoGeo_FromGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text , line_max_points Integer ) : Integer

TopoGeo_FromGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text , line_max_points Integer , line_max_length Double precision ) : Integer

TopoGeo_FromGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text , line_max_points Integer , line_max_length Double precision , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:2b37e9d7262649f4a3d3c0b5e5d1d55d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Disjoint.htm> ;
    fno:name "ST_Disjoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2bd236e9713e4a21889bcd11929686a8 a fno:Function ;
    dcterms:description """Removes a VirtualShape or VirtualGeoJSONtable from the Spatial MetaData tables, dropping the VirtualTable table as well.

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "DropVirtualGeometry" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "DropVirtualGeometry( table String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:2c2622c6d3fc41bcbd3766396e278f21 a fno:Function ;
    dcterms:description "Return true if Geometry A overlaps Geometry B" ;
    fno:name "ST_Overlaps" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2c3106d78c984cdea1258dba700feab4 a fno:Function ;
    dcterms:description """Inserts a new Raster Style definition.
style is expected to be an XmlBLOB containing a valid SLD/SE Style of the Raster type.If CreateStylingTables() was invoked without specifying the relaxed option this XmlBLOB is expected to have successfully passed a formal XML Schema Validation.The registered Style will be identified either by its unique Style ID or by its Style Name automatically retrieved from SLD/SE XML.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterRasterStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_RegisterRasterStyle( style BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:2c477d995be24186902905da59a155bd a fno:Function ;
    dcterms:description "meters / indian feet" ;
    fno:name "Indian Foot" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToIndFt( x Double precision ) : Double precision

CvtFromIndFt( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2c4c6c3279844051b6a9b6684a5d319f a fno:Function ;
    dcterms:description """Creates a Vector Coverage based on an already existing Topology-Network.
coverage_name is the symbolic name uniquely identifying each Vector Coverage (Primary Key).
toponet_name is expected to match the corresponding entries in the networks table.
the optional arguments title and abstract could be eventually be specified for better human readability.
if both optional arguments is_queryable and is_editable are left unspecified the Vector Coverage will then be neither queryable nor editable.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterTopoNetCoverage" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterTopoNetCoverage( coverage_name String , network_name String ) : Integer

SE_RegisterTopoNetCoverage( coverage_name String , network_name String , title String , abstract String ) : Integer

SE_RegisterTopoNetCoverage( coverage_name String , network_name String , title String , abstract String , is_queryable Boolen , is_editable Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:2c5f2d40b9a04f9892194495765111f6 a fno:Function ;
    dcterms:description """Will create a Spatial Topology-Network from an existing Topology-Geometry.
The destination TopoNet is expected to exist and to be completely empty.

Will return 1 on success; an exception will be raised on failure.
Calling this function on behalf of some Network of the Logical type will raise an exception; both the TopoNet and the TopoGeo are expected to declared the same identical SRID and dimensions (2D or 3D), otherwise an exception will be raised.""" ;
    fno:name "SpatNetFromTGeo" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_SpatNetFromTGeo( netname Text , toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2c60638467964d0fb95d2f780815f6a2 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsText.htm> ;
    fno:name "ST_AsText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2c64037dccdd47c994bdd38eff539a6d a fno:Function ;
    dcterms:description """Will export an internal Table as an external GeoJSON file:
Mandatory aguments:
table name of the table to be exported.
geom_column name of the Geometry column.
filename absolute or relative path leading to the GeoJSON file.
Optional aguments:
format specifies one of the several alternative GeoJSON formats; allowed values are none, MBR, withShortCRS, MBRwithShortCRS, withLongCRS or MBRwithLongCRS.
precision number of decimal digits to be exported; 8 by default.

Will return the total number of exported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name """ExportGeoJSON


Obsolete and deprecated !!!
Please, use ExportGeoJSON2() instead.""" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ExportGeoJSON( table Text , geo_column Text , filename Text ) : Integer

ExportGeoJSON( table Text , geo_column Text , filename Text [ , format Text [ , precision Integer ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2c9f324b4fb041d2b63ff9e09694a564 a fno:Function ;
    dcterms:description "Flip the  X and  Y coordinates of a Geometry" ;
    fno:name "ST_FlipCoordinates" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2cf39a1a59be499bae66514fc8aabca0 a fno:Function ;
    dcterms:description """Will attempt to snap (i.e. renode) the input Geometry (any type) against the Topology identified by toponame.
the arguments iterate is intended to be Boolean (0 = FALSE, any other value = TRUE); when set to TRUE the input Geometry will be iteratively processed until no more snaps are found.
The optional argument tolerance_snap if omitted will assume the corresponding value declared when creating the target Topology.
The optional argument tolerance_removal if omitted (or set to NULL) will suppress the removal phase.

Will return a snapped Geometry on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_TopoSnap" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_TopoSnap( toponame Text , input Geometry , iterate Integer ) : Geometry

TopoGeo_TopoSnap( toponame Text , input Geometry , tolerance_snap Double precision , tolerance_removal Double precision , iterate Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:2d639982aec4403f8bb9b52d0d5544e7 a fno:Function ;
    dcterms:description """Creates a WMS GetMap request URL for the WMS Layer identified by getmap_url and layer_name by applying the currently set options.
width and height: horizontal and vertical dimensions (expressed in pixels) of the returned map image.
minx, miny, maxx and maxy: the Bounding Box coverred by the returned map image.

Will return a request URL on success; NULL on failure or on invalid arguments.""" ;
    fno:name "WMS_GetMapRequestURL" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_GetMapRequestURL( getmap_url Text , layer_name Text , width Integer , height Integer , minx Double , miny Double , maxx Double , maxy Double ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2d953ea6459f4e5cb2291e37584f5aae a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Contains.htm> ;
    fno:name "ST_Contains" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2dc9e8138d3c449187f36c1e87121f24 a fno:Function ;
    dcterms:description "Return the aspect of a triangle" ;
    fno:name "ST_TriangleAspect" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:2e1317a62ee344b7b661258981912349 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOS" ;
    fno:name "HasGeos" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeos( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2e813d3ea9364655b77cf3766ec40f15 a fno:Function ;
    dcterms:description """This function will inspect the DB layout, then automatically creating/refreshing a VirtualGPKG wrapper for each GPKG geometry table

the return type is Integer [how many VirtualGPKG tables have been created]

The optional db_prefix argument specifies which one of the ATTACHED databases is intended to be targeted; if unspecified or NULL then the MAIN database will be assumed by default.""" ;
    fno:name "AutoGPKGStart" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """AutoGPKGStart( void ) : Integer

AutoGPKGStart( db_prefix String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:2ef02c84cc9b4a3fab28d9d0ec0b67bc a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_IsRing.htm> ;
    fno:name "ST_IsRing" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2f6a1b509bc4434db914333352507773 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Distance.htm> ;
    fno:name "ST_Distance" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:2f8c1c9f361d4321957da1d42f84973c a fno:Function ;
    dcterms:description """Will return the abstract of the registered RL2 Map Configuration object corresponding to the index (1-based).

NULL will be returned on invalid argument or on error.""" ;
    fno:name "RL2_MapConfigurationAbstractN" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "RL2_MapConfigurationAbstractN( index Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:2f96c4a419f8476989201e75a27a1d41 a fno:Function ;
    dcterms:description "Geometry's coordinates to  MULTILINESTRING" ;
    fno:name "ST_ToMultiLine" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:2fad4db76e884f048ffe497f7d1dbfcb a fno:Function ;
    dcterms:description """Will return a SQL Procedure BLOB object from a Stored Procedure. NULL will be returned if the Stored Procedure does not exists.

An exception will be raised on invalid arguments.""" ;
    fno:name "StoredProc_Get" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredProc_Get( name String ) : BLOB" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:2fb252c9c6f048e1a0e0ec70d0bb8d6c a fno:Function ;
    dcterms:description """Will clone (i.e. create+copy) an origin table into a destination table: the origin could be eventually located into some attached DB, but the destination is always assumed to be located in the primary DB.
Mandatory arguments:
db-prefix corresponding to the origin; the primary DB always using the main prefix.Can be legitimately set to NULL, and in this case MAIN will be implicitly assumed.
input_table name of the origin table
output_table name of the destination table inside the primary DB.
transaction a boolean values stating if the whole operation has to be atomically confined within a monolithic SQL transaction
Optional arguments: a maximum of 10 further options could be eventually be specified. Valid options are:
::with-foreign-keys::
::with-triggers::
::resequence::
::append::
::ignore::column_name
::cast2multi::geometry_column

Will return 0 (i.e. FALSE) on failure, any other value (i.e. TRUE) on success. NULL will be returned on invalid arguments.""" ;
    fno:name "CloneTable" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """CloneTable( db-prefix Text , input_table Text , output_table Text , transaction Integer ) : Integer

CloneTable( db-prefix Text , input_table Text , output_table Text , transaction Integer , option_1 Text [ , ... , option_10 Text ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:30085cc5288340c9940734b4832db4ad a fno:Function ;
    dcterms:description """Returns a POINT Geometry corresponding to the Center of the Minimum Bounding Circle for a generic geometry.
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumBoundingCenter" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumBoundingCenter( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:303ce2c6c1dd4f7cbeeabf6ecf2e5fb0 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Extent.htm> ;
    fno:name "ST_Extent" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:30445ad3e5044c17a9d0d655ea98fdf1 a fno:Function ;
    dcterms:description """Will return the name of the currently set Join Style.
NULL on failure.""" ;
    fno:name "BufferOptions_GetJoinStyle" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_GetJoinStyle( void ) : string" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3073d96b4f5244808f432f940868492b a fno:Function ;
    dcterms:description """Will attempt to find the ID of a NetNode located at Point.
The optional argument tolerance if omitted will imply an exact coincidence (0.0 by default).

Will return the ID of the NetNode on success; an exception will be raised on failure.
Note: this function cannot be applied to a Logical Network""" ;
    fno:name "GetNetNodeByPoint" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax """GetNetNodeByPoint( netname Text , point Geometry ) : Integer

GetNetNodeByPoint( netname Text , point Geometry , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:308a501687d24923a0a0dd3896c2aaf8 a fno:Function ;
    dcterms:description """return a number (between 0.0 and 1.0) representing the location of the closest point on LineString to the given Point, as a fraction of total 2d line length.
NULL is returned for invalid arguments""" ;
    fno:name "Line_Locate_Point" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Line_Locate_Point( line Curve , point Point ) : Double precision

ST_Line_Locate_Point( line Curve , point Point ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:309186aa322541c7b50c5b4b2fd8f58d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Perimeter2D.htm> ;
    fno:name "ST_Perimeter2D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:30a672a0318d49ef8db8895752028e94 a fno:Function ;
    dcterms:description """Will return the most recent error message returned by SQL Procedures and friends (if any).

NULL will be returned if there is no pending SQL Procedures error.""" ;
    fno:name "SqlProc_GetLastError" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_GetLastError( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:30c0ccb2d594430883ee34baee28c0f2 a fno:Function ;
    dcterms:description "Alias for  ST_NumInteriorRings" ;
    fno:name "ST_NumInteriorRing" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:30f2f0543bef451795cc390c9486cb35 a fno:Function ;
    dcterms:description "Return the minimum x-value of a Geometry" ;
    fno:name "ST_XMin" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:30ff314c3b1449e9994ed770a94045f6 a fno:Function ;
    dcterms:description """return the perimeter of s (measured in meters).
If the use_ellipsoid argument is set to TRUE the precise (but slower) perimeter will be computed on the Ellipsoid, otherwise will be computed on the Great Circle (approximative, but faster).

This function only supports Long/Lat coordinates, and will return NULL for any planar CRS

Starting since v.4.0.0 this function will simply consider Polygons and MultiPolygons, ignoring any Linestring or MultiLinestring""" ;
    fno:name "" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """Perimeter( s Surface , use_ellipsoid Boolean ) : Double precision

ST_Perimeter( s Surface , use_ellipsoid Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3108b58b7c834d49a9eb748f8616ac50 a fno:Function ;
    dcterms:description """Will delete a Stored Variable.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredVar_Delete" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredVar_Delete( name String ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:31719bafb99045bd88fcad5511d6e7f8 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ExteriorRing.htm> ;
    fno:name "ST_ExteriorRing" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:317340e5d0e1418597d06d9fc6b36486 a fno:Function ;
    dcterms:description """Will attempt to find the ID of an Edge intersecting the given Point.
The optional argument tolerance if omitted will assume the corresponding value declared when creating the target Topology.

Will return the ID of the Edge on success; an exception will be raised on failure.""" ;
    fno:name "GetEdgeByPoint" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """GetEdgeByPoint( toponame Text , point Geometry ) : Integer

GetEdgeByPoint( toponame Text , point Geometry , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:3188d6cbae3a4ebe94a9a5001dd1db9e a fno:Function ;
    dcterms:description """geom is expected to represent a POINT (longitude and latitude coordinates); the corresponding GARS area designation code will be returned.

NULL will be returned if any error is encountered.""" ;
    fno:name "ToGARS" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "ToGARS( geom Geometry ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:31b7910e198e4299a222bc9f5247d0cd a fno:Function ;
    dcterms:description "Return the distance between two Geometries" ;
    fno:name "ST_Distance" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:325dfb3494b64b76bef0c7c7be8393c8 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid TIFF image""" ;
    fno:name "IsTiffBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsTiffBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:32dfe9b7436b4d47a0d5ea4d2122abc0 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments;
convenience predicate: TRUE if the intersection of g1 and g2 is not empty""" ;
    fno:name "Intersects" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Intersects( geom1 Geometry , geom2 Geometry ) : Integer

ST_Intersects( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3313910ad41a4f79b35e0d7a911b31ba a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsSldSeVectorStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsSldSeVectorStyle( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:33300ef665a14c8cbbb0693b69533e1e a fno:Function ;
    dcterms:description """Registers an alternative style available for the WMS Layer identified by getmap_url and layer_name.
style_name: Name of the supported Style.
style_title: Title of the supported Style.
style_abstract: Abstract of the supported Style. Can legitimately be NULL if undefined.
is_default (optional arg): if the corresponding value will become the standard Style for the corresponding WMS Layer (FALSE if undefined).

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_RegisterStyle" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_RegisterStyle( getmap_url Text , layer_name Text , style_name Text , style_title Text , style_abstract Text ) : Integer

WMS_RegisterStyle( getmap_url Text , layer_name Text , style_name Text , style_title Text , style_abstract Text , is_default Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:33984d5842b3453cb26c87568db650b1 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix representing the result of multiplying matrixA by matrixB.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_Multiply" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_Multiply( matrixA AffineMatrix , matrixB AffineMatrix ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:339e1f55953d4ca3af88848f2d64e6e2 a fno:Function ;
    dcterms:description """return a geometric object representing the corresponding left-sided (positive radius) or right-sided (negative radius) offset curve
NULL is returned whenever is not possible deriving an offset curve from the original geometry
[a single not-closed LINESTRING is expected as input]""" ;
    fno:name "OffestCurve" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """OffsetCurve( geom Curve , radius Double precision ) : Curve

ST_OffsetCurve( geom Curve , radius Double precision ) : Curve""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:33cb5ca559574d3789e170c2d918d45c a fno:Function ;
    dcterms:description """Removes an already registered RL2 Map Configuration definition.
The Map Configuration to be removed could be referenced either by its unique Config Id or by its Config Name.Any attempt to remove a Map Configuration identified by its Name will be rejected if the if two (or more) Configurations share the same Name thus causing ambiguity.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "RL2_UnregisterMapConfiguration" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """RL2_UnregisterMapConfiguration( config_id Integer ) : Integer

RL2_UnregisterMapConfiguration( config_name Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:340fb0033a0142ac8a014366c4e3f376 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Difference.htm> ;
    fno:name "ST_Difference" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:3440cb9534f2490cabc48f853f190412 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling VirtualRouting support" ;
    fno:name "HasRouting" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasRouting( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:34961f030d9241efa387499f6e860e49 a fno:Function ;
    dcterms:description """Will return the total number of registered RL2 Map Configuration objects.

The return type is Integer; 0 will be returned if no registered Map Configuration exists, -1 will be returned on error.""" ;
    fno:name "RL2_NumMapConfigurations" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "RL2_NumMapConfigurations() : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:34d166c2868d432ea5e28965bee2006a a fno:Function ;
    dcterms:description """Will return the title of the registered RL2 Map Configuration object corresponding to the index (1-based).

NULL will be returned on invalid argument or on error.""" ;
    fno:name "RL2_MapConfigurationTitleN" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "RL2_MapConfigurationTitleN( index Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:34d91728161349ecac67e4741a50bd93 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_CoveredBy.htm> ;
    fno:name "ST_CoveredBy" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:34e5d6d9a1c247909d3f952627a236dc a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid WebP image""" ;
    fno:name "IsWebpBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsWebpBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:34f4294644214f27994d5f7e453ca70b a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments;

convenience predicate: TRUE if g1 is completely covered by g2""" ;
    fno:name "CoveredBy" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """CoveredBy( geom1 Geometry , geom2 Geometry ) : Integer

ST_CoveredBy( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:356b116be996467d8171ff22f21b4760 a fno:Function ;
    dcterms:description """Very similar to TopoGeo_AddLinestring except for a very critical difference. This function is strongly optimized for maximum speed, and will just update Nodes and Edges purposely ignoring Faces.
Consequently it will always leave the target Topology in an inconsistent state; only after executing TopoGeo_Polygonize() all Faces will be properly restored and the target Topology will finally resume a consistent state.
The optional argument tolerance if omitted will assume the corresponding value declared when creating the target Topology.

Will return a comma separated list of all IDs of the corresponding Edges on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_AddLineStringNoFace" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_AddLineStringNoFace( toponame Text , linestring Geometry ) : Integer

TopoGeo_AddLineStringNoFace( toponame Text , linestring Geometry , tolerance Double precision ) : Text""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:359eb28333f24aa2ac9866d86a1fb4bc a fno:Function ;
    dcterms:description """Return a derived Geometry with M-values linearly interpolated between the start and end points.
NULL will be returned if any error is encountered.
Please note: NULL will be returned if geom is not of the Linestring or MultiLinestring type.""" ;
    fno:name "AddMeasure" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Linear Referencing" ;
    gsrdb:hasSyntax "ST_AddMeasure( geom Geometry , m_start Double precision , m_end Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:35c3310a4d4b4493b37c4a7ce18b3104 a fno:Function ;
    dcterms:description "Construct a  POINT from two or three coordinates" ;
    fno:name "ST_MakePoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:366406638a124fd68131d701d7594340 a fno:Function ;
    dcterms:description """Will possibly return a new Linestring precisely snapped to the nearset Edge TopoSeed within the given distance; if no such TopoSeed exists NULL will be returned.
An exception will be raised on invalid arguments.""" ;
    fno:name "TopoGeo_SnapLineToSeed" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_SnapLineToSeed( line Geometry , toponame Text , distance Double ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:36d2ddd07bc84b13bb18813f1056c60b a fno:Function ;
    dcterms:description "returns the principal value of the arc tangent of y/x in radians, using the signs of the two arguments to determine the quadrant of the result. The return value is in the range[-pi, pi]." ;
    fno:name "Atan2" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Atan2( y Double precision , x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:370df74d73f84368969db3cc60a4b126 a fno:Function ;
    dcterms:description """Returns the raw SQL Body declared by the given SQL Procedure object.

An exception will be raised on failure or invalid argument.""" ;
    fno:name "SqlProc_RawSQL" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_RawSQL( object BLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:373ad949f9864d19b1ad33ab6b9893c3 a fno:Function ;
    dcterms:description """returns TRUE (1) if all Polygons into the Geometry are oriented accordingly to Counter-Clockwise Rule (all Exterior Ring must be counter-clockwise oriented, and all Interior Rings must be clockwise oriented).
returns FALSE (0) if not: returns -1 on invalid Geometries.

Note: a Geometry containing no Polygons will always return TRUE.""" ;
    fno:name "IsPolygonCCW" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_IsPolygonCCW( geom Geometry ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:376e6cbe77d64660a375b7841576c916 a fno:Function ;
    dcterms:description """This SQL function is almost exactly the same of StoredProc_Execute(), with just an outstanding differece:
the cooked SQL Body will be iteratively executed, as if it was declared within a while (true) { ... } never ending loop.
the execution loop will break only when StoredProc_Return() will set a negative or zero return value of the Integer type.
Warning: a badly implemented call to StoredProc_ExecuteLoop() may easily cause a nastry endless loop

Returns TRUE on success.
An exception will be raised on failure or invalid arguments.""" ;
    fno:name "StoredProc_ExecuteLoop" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """StoredProc_ExecuteLoop( name String ) : Integer

StoredProc_ExecuteLoop( name String , vararg String ) : Integer

StoredProc_ExecuteLoop( name String , vararg1 String [ , ... ] , varargN String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:379725d68ad548ccb698bf6456087d40 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_CoordDim.htm> ;
    fno:name "ST_CoordDim" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:37d5a2303a004ae3bb33efcdf8c8241b a fno:Function ;
    dcterms:description "Geometry to OSM map link" ;
    fno:name "ST_OSMMapLink" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:37e4c1fa96b848b9ac955c8b0a03cfd8 a fno:Function ;
    dcterms:description """Inserts (or updates) an External Graphic Resource.
xlink_href uniquely identifies each Resource (Primary Key).
resource is expected to be a BLOB containing an image/gif, image/png, image/jpeg or image/svg+xml payload.
the optional arguments title, abstract and file_name could be eventually be specified for better human readability.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterExternalGraphic" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterExternalGraphic( xlink_href String , resource BLOB ) : Integer

SE_RegisterExternalGraphic( xlink_href String , resource BLOB , title String , abstract String , file_name String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:382802b0cb0544969a957e1ac6871c08 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Contained.htm> ;
    fno:name "@" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:3831ce98e5484b5f9f19bc7ba5bb5903 a fno:Function ;
    dcterms:description """returns the GML [Geography Markup Language] representation
If version = 3 than GML 3.x is generated, otherwise the output format will be GML 2.x""" ;
    fno:name "AsGml" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax """AsGml( geom Geometry [ , precision Integer ] ) : String
AsGml( version Integer, geom Geometry [ , precision Integer ] ) : String""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3881f7f845e748f5bc74fef90f8e6ac0 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_HausdorffDistance.htm> ;
    fno:name "ST_HausdorffDistance" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:38a50c26ae7e4f19924ceefcd53695c8 a fno:Function ;
    dcterms:description """Will attempt to export into an output Table all relationships between the Links of some Topology-Network and Linestrings/Multilinestrings found within a given Reference-GeoTable.
db-prefix can be NULL, and in this case the reference GeoTable is expected to be located within the "MAIN" database.
ref-column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the reference GeoTable must be properly registered and must match both SRID and dimensions declared by the target Network.
this function accepts input Geometries only of the Linestring or MultiLinestring types.
the output Table will be always located on the "MAIN" DB and must not exists; it will be automatically created.

Will return 1 on success; an exception will be raised on failure.

Warning: if the Geometry column identified by ref-column-name is not supported by a Spatial Index this function will run in a painfully slow mode.""" ;
    fno:name "TopoNet_LineLinksList" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "TopoNet_LineLinksList( netname Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:38f6c445a1bf469dbf1cba19a965082b a fno:Function ;
    dcterms:description """return the maximum Z-coordinate value for geom as a double precision number.
if the optional argument nodata-value is set, then any NODATA value eventually found will be ignored.

NULL will be returned if geom isn't a valid Geometry or if geom has no Z dimension.""" ;
    fno:name "MaxZ" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """ST_MaxZ( geom Geometry) : Double precision

ST_MaxZ( geom Geometry , nodata-value Double ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:390305b5a73c479dba7f51a8af1ad09b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_IsClosed.htm> ;
    fno:name "ST_IsClosed" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:391a8f2904a54ae2ae076bdf87a67bb0 a fno:Function ;
    dcterms:description """Registers a Data License.
license_name is expected to be a text string uniquely identifying a license/version.Note: the following licenses are always self-defined when creating a new DB:
Undefined
Proprietary - Non Free
PD - Public Domain
CC0 1.0
CC BY 3.0
CC BY 4.0
CC BY-SA 3.0
CC BY-SA 4.0
CC BY-SA-NC 3.0
CC BY-SA-NC 4.0
the optional argument url may eventually contain an URL pointing to the license's legal terms and conditions.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "RegisterDataLicense" ;
    gsrdb:hasScope "SQL functions supporting Data Licenses" ;
    gsrdb:hasSyntax """RegisterDataLicense( license_name Text ) : Integer

RegisterDataLicense( license_name Text , url Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3975c776d9e04f11acb9ae5298176d0d a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling PROJ" ;
    fno:name "HasProj" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasProj( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:39a7135646014742b1501e44693a2567 a fno:Function ;
    dcterms:description "returns the arc tangent of x, that is, the value whose tangent is x" ;
    fno:name "Atan" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Atan( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3a419269d09e48728f787957d11513fd a fno:Function ;
    dcterms:description "Return the minimum diameter of a Geometry" ;
    fno:name "ST_MinimumDiameter" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:3ac2cdc7f71b401296dbe2eacea2c0ed a fno:Function ;
    dcterms:description """Registers a WMS layer.
getcapabilities_url: URL referencing the parent WMS GetCapabilities request (must be already registered).
getmap_url: base URL corresponding to the WMS GetMap request.
layer_name name of the WMS Layer.
title (optional arg): Title of the WMS Service.
abstract (optional arg): Abstract of the WMS Service.
version: version of the WMS protocol to be used for GetMap requests (e.g. '1.1.1' or '1.3.0').
ref_sys: reference system to be used for GetMap requests (e.g. 'EPSG:4326' or 'EPSG:32632').
image_format: MIME type of the image returned by a WMS GetMap request (e.g. 'image/png' or 'image/jpeg').
style: name of the style to be applied to the WMS Layer (could be 'default').
is_transparent: if the image returned by a WMS GetMap request should be opaque or transparent.
flip_axes: if a WMS GetMap request requires flipping the horizontal and vertical axes.
is_tiled (optional arg): if WMS GetMap requests should be handled by tiles or not.
is_cached (optional arg): if WMS GetMap results should be cached or not (applies only to tiled requests).
tile_width (optional arg): tile width expressed in pixels (applies only to tiled requests).
tile_height (optional arg): tile height expressed in pixels (applies only to tiled requests).
bgcolor (optional arg): image background color (Hex RGB color as e.g. 'ff8000' or 'A8A8A8').
is_queriable (optional arg): if the WMS Layer supports or not GetFeatureInfo requests.
getfeatureinfo_url (optional arg): base URL corresponding to a WMS GetFeatureInfo request.
cascaded (optional arg): number of cascaded WMS servers. Can be legitimately set to NULL, thus intending Unknown/Undefined.
minScaleDenominator and maxScaleDenominator (optional args) are intended to set the lower and upper limits of the Visibility Scale Range. Both can be legitimately set to NULL, thus intending that the corresponding limit is intentionally left undefined.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_RegisterGetMap" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_RegisterGetMap( getcapabilitites_url Text , getmap_url Text , layer_name Text , version Text, ref_sys Text , image_format Text , style Text , is_transparent Boolean , flip_axes Boolean ) : Integer

WMS_RegisterGetMap( getcapabilitites_url Text , getmap_url Text , layer_name Text , version Text, ref_sys Text , image_format Text , style Text , is_transparent Boolean , flip_axes Boolean , is_tiled Boolean , is_cached Boolean , tile_width Integer , tile_height Integer ) : Integer

WMS_RegisterGetMap( getcapabilitites_url Text , getmap_url Text , layer_name Text , title Text , abstract Text , version Text, ref_sys Text , image_format Text , style Text , is_transparent Boolean , flip_axes Boolean , is_tiled Boolean , is_cached Boolean , tile_width Integer , tile_height Integer , bgcolor Text , is_queryable Boolean , getfeatureinfo_url Text ) : Integer

WMS_RegisterGetMap( getcapabilitites_url Text , getmap_url Text , layer_name Text , title Text , abstract Text , version Text, ref_sys Text , image_format Text , style Text , is_transparent Boolean , flip_axes Boolean , is_tiled Boolean , is_cached Boolean , tile_width Integer , tile_height Integer , bgcolor Text , is_queryable Boolean , getfeatureinfo_url Text , cascaded Integer , minScaleDenominato Double , maxScaleDenominator Double ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3b4af4d7114d4fa099f556208b7950a4 a fno:Function ;
    dcterms:description """Returns the Radius of the Minimum Bounding Circle for a generic geometry.
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumBoundingRadius" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumBoundingRadius( geom Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3b94a11be5914314b725687bb1b6d3aa a fno:Function ;
    dcterms:description """Removes an already defined alternative SRID from a Raster Coverage.
coverage_name and srid must identify some previously defined alternative SRID.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterRasterCoverageSrid" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_UnregisterRasterCoverageSrid( coverage_name String , srid Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3b9824d738c84a0098c6243e35e60d4e a fno:Function ;
    dcterms:description """Construct a Polygon given an arbitrary collection of closed linestrings as a MultiLineString binary representation.

see also: BuildArea(), Polygonize()""" ;
    fno:name "BdPolyFromWKB" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """BdPolyFromWKB( wkbMultilinestring Binary [ , SRID Integer] ) : Polygon

ST_BdPolyFromWKB( wkbMultilinestring Binary [ , SRID Integer] ) : Polygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3bad708ced624737a683d82d48965637 a fno:Function ;
    dcterms:description "Well Known Text to  MULTIPOLYGON" ;
    fno:name "ST_MPolyFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:3bcdd0ebd7ef4aafa2fd362b7708ff89 a fno:Function ;
    dcterms:description """return the number of Shapefiles contained within the Zipfile identified by zip_path
NULL on invalid argument or if the Zipfile does not exist or is corrupted.""" ;
    fno:name "Zipfile_NumSHP" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "Zipfile_NumSHP( zip_path Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3be1065ff31a419a9ac93df471bcf9e9 a fno:Function ;
    dcterms:description "returns an uncompressed Geometry [if a valid Geometry was supplied], or NULL in any other case" ;
    fno:name "UncompressGeometry" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-compression functions" ;
    gsrdb:hasSyntax "UncompressGeometry( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3c01df06ede24566af1750fc43dc8382 a fno:Function ;
    dcterms:description """Exactly the same as TopoGeo_ToGeoTable() except in that all exported geometries will be simplified / generalized still maintaining full topological consistency.
tolerance represents the approximation radius required by the Douglas-Peuker simplification algorithm.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_ToGeoTableGeneralize" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_ToGeoTableGeneralize( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text , tolerance Double precision ) : Integer

TopoGeo_ToGeoTableGeneralize( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text , tolerance Double precision , with-spatial-index Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:3c46e18e40c04ca1ab39b869eb6144e4 a fno:Function ;
    dcterms:description """Will return the Abstract defined within the XmlBLOB (if any).

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when no Abstract is defined.

Supported only on ISO Metadata and SLD/SE Styles.""" ;
    fno:name "XB_GetAbstract" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetAbstract( xmlObject XmlBLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3ca768c5a94a483abf322605494ebe92 a fno:Function ;
    dcterms:description """Will set the current EndCap Style. Accepted styles (case insensitive) are: ROUND, FLAT, SQUARE
Returns TRUE on success, FALSE on failure.""" ;
    fno:name "BufferOptions_SetEndCapStyle" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_SetEndCapStyle( style Text ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3d03dedc24a3454295ca66c47101d6ab a fno:Function ;
    dcterms:description "Construct a  POINT from two or three coordinates" ;
    fno:name "ST_Point" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:3d091b15d82840839c482e8c9cf07baa a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Force_4D.htm> ;
    fno:name "ST_Force_4D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:3d562cd3dd7a438682f43d41026d46c5 a fno:Function ;
    dcterms:description "construct a MultiPolygon" ;
    fno:name """MPolyFromWKB
MultiPolygonFromWKB""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """MPolyFromWKB( wkbMultiPolygon Binary [ , SRID Integer] ) : MultiPolygon

ST_MPolyFromWKB( wkbMultiPolygon Binary [ , SRID Integer] ) : MultiPolygon

MultiPolygonFromWKB( wkbMultiPolygon Binary [ , SRID Integer] ) : MultiPolygon

ST_MultiPolygonFromWKB( wkbMultiPolygon Binary [ , SRID Integer] ) : MultiPolygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3d714963081d4c6282f71dc3489dd422 a fno:Function ;
    dcterms:description "return the nth (1-based) interiorRing. The order of Rings is not geometrically significant." ;
    fno:name "InteriorRingN" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Polygon" ;
    gsrdb:hasSyntax """InteriorRingN( polyg Polygon , n Integer ) : LineString

ST_InteriorRingN( polyg Polygon , n Integer ) : LineString""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3dde962abc1049f1b293feada572943f a fno:Function ;
    dcterms:description """Will attempt to export into an output Table all relationships between the Faces of some Topology-Geometry and Polygons/Multipolygons found within a given Reference-GeoTable.
db-prefix can be NULL, and in this case the reference GeoTable is expected to be located within the "MAIN" database.
ref-column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the reference GeoTable must be properly registered and must match both SRID and dimensions declared by the target Topology.
this function accepts input Geometries only of the Polygon or MultiPolygon types.
the output Table will be always located on the "MAIN" DB and must not exists; it will be automatically created.

Will return 1 on success; an exception will be raised on failure.

Warning: if the Geometry column identified by ref-column-name is not supported by a Spatial Index this function will run in a painfully slow mode.""" ;
    fno:name "TopoGeo_PolyFacesList" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_PolyFacesList( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:3de491c33c034b2daf26a837c547c423 a fno:Function ;
    dcterms:description "Translate a Geometry" ;
    fno:name "ST_Translate" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:3dfcca7ed12848a9a79c8c4a2b54ac84 a fno:Function ;
    dcterms:description """Will return the name of the registered RL2 Map Configuration object corresponding to the index (1-based).

NULL will be returned on invalid argument or on error.""" ;
    fno:name "RL2_MapConfigurationNameN" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "RL2_MapConfigurationNameN( index Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3e1990b1759d49e092168a0493eb7aef a fno:Function ;
    dcterms:description """Will return the most recent diagnostic message emitted by ST_Cutter().
NULL will be returned if no such message currently exists.""" ;
    fno:name "GetCutterMessage" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "GetCutterMessage( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3e634673aacd4910a57fccaf1ff99a7e a fno:Function ;
    dcterms:description """Check if geom has the M dimension.
The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and -1 for UNKNOWN when called with invalid arguments.""" ;
    fno:name "IsMeasured" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_IsMeasured( geom Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:3eaa0eecd56b417faa987034308b42b8 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if the BLOB argument is a valid BLOB-TinyPoint.""" ;
    fno:name "IsTinyPointBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsTinyPointBlob( content BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:3eea3191719142b7b518d60ee42682a6 a fno:Function ;
    dcterms:description """Inserts a new Vector Style definition.
style is expected to be an XmlBLOB containing a valid SLD/SE Style of the Vector type.If CreateStylingTables() was invoked without specifying the relaxed option this XmlBLOB is expected to have successfully passed a formal XML Schema Validation.The registered Style will be identified either by its unique Style ID or by its Style Name automatically retrieved from SLD/SE XML.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterVectorStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_RegisterVectorStyle( style BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:40339d99bae64c7990bba3ca465ee09d a fno:Function ;
    dcterms:description """Will heal two Edges by deleting the Node connecting them. Both the original Edges will be deleted and will be replaced by a new Edge preserving the same orientation of the first Edge provided.

Will return the ID of the removed Node on success; an exception will be raised on failure.""" ;
    fno:name "NewEdgeHeal" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_NewEdgeHeal( toponame Text , edge1-id Integer , edge2-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:406bf2702a984152af64146dc6be35e8 a fno:Function ;
    dcterms:description """Permanently sets the most recent error message raised by PostgreSQL.
Returns 1 on success and 0 on failure; -1 if the argument is not a Text string.

Only intended for internal usage by the VirtualPostgres extension module.""" ;
    fno:name "PostgreSQL_SetLastError" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "PostgreSQL_SetLastError( TEXT ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4091ddef76da409eb95a94fcc8657576 a fno:Function ;
    dcterms:description "returns the value of PI" ;
    fno:name "PI" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "PI( void ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:409ca4f53e414217a321f76f0a51bedb a fno:Function ;
    dcterms:description """will return a LINESTRING approximating the Circular Arc defined by cx, cy and radius; the arc's extremities will be defined by start, stop angles expressed in degrees.
The optional argument step if specified defines how many points will be interpolated on the circumference; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeArc" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeArc( cx Double precision , cy Double precision , radius Double precision , start Double precision , stop Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:40bd90509813466db79f172d1eb5ea8e a fno:Function ;
    dcterms:description """Will safely remove a Geometry Table (or Spatial View), including any SpatialIndex, triggers, metadata, statistics tables.
Will also work on ordinary (non-Spatial) Tables and Views, RasterLite2 raster_coverage, GeoPackage (Vector/Raster) and OGR/FDO Geometries.
db-prefix can be NULL, where the Table or View to be dropped is expected to be located within the "MAIN" database.
The optional argument permissive determines if a retcode will be returned in the case of failure.The default setting, when not explicitly overridden, is FALSE, where an exception will then be raised.

Will return 1 (i.e. TRUE) on success, 0 (i.e. FALSE) on failure based on the permissive setting.
An exception will be always raised on invalid arguments and on failure, except when permissive has been explicitly set.
In this case any generic failure (as e.g. attempting to drop a non existing table) will simply return an error code without raising any exception; said in other words, enabling permissive is more or less equivalent to declare an IF EXISTS SQL clause and allows for a relaxed (non blocking) failure handling.""" ;
    fno:name "DropTable" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """DropTable( db-prefix Text , table Text ) : Integer

DropTable( db-prefix Text , table Text , permissive Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:412767b7df90495484e14743f9192eec a fno:Function ;
    dcterms:description """This function will add Geopackage tile table triggers for the named table.

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgAddTileTriggers" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgAddTileTriggers( tile_table_name String ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:412927c69150423b99aadb78970d8176 a fno:Function ;
    dcterms:description "Add nodes on a geometry for each intersection" ;
    fno:name "ST_Node" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:415133712e8c4f5ea5899231d46e2364 a fno:Function ;
    dcterms:description "return a Point containing the last Point of c" ;
    fno:name "EndPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """EndPoint( c Curve ) : Point

ST_EndPoint( c Curve ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:416dfea7cda0407a8e1c4891efaca6d2 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_RemovePoint.htm> ;
    fno:name "ST_RemovePoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:4172d1980c39457d80f0aebb84e90d92 a fno:Function ;
    dcterms:description """Registers a VirtualShape or VirtualGeoJSON table into the Spatial MetaData tables; the VirtualShape table should be previously created by invoking CREATE VIRTUAL TABLE ... USING VirtualShape(...)

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "RegisterVirtualGeometry" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "RegisterVirtualGeometry( table String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:418fab85b7ec44dfb6d2f2b0340c4fd7 a fno:Function ;
    dcterms:description """a POINT Geometry will be returned representing the GPS long/lat contained within EXIF-GPS metadata for the BLOB image

NULL will be returned if for any reason it's not possible to create such a POINT""" ;
    fno:name "GeomFromExifGpsBlob" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "GeomFromExifGpsBlob( image BLOB ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:41a31bbde3de44b2b69b5186d1d8a7fc a fno:Function ;
    dcterms:description "Split an input  LINESTRING with another geometry" ;
    fno:name "ST_LineIntersector" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:41cfe9ea91494f5284bc9ccee5170366 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling EPSG" ;
    fno:name "HasEpsg" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasEpsg( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4201c4bdf3ec43ed96eca5a3b858c8a4 a fno:Function ;
    dcterms:description "Compute the visibility from a point" ;
    fno:name "ST_ISOVist" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:424609c6ed224e419fc3fa08c74233f9 a fno:Function ;
    dcterms:description "Return the last coordinate of a  LINESTRING" ;
    fno:name "ST_EndPoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:42a96003b9ff4977ab5f4d58934f3736 a fno:Function ;
    dcterms:description """Will populate a full Topology by importing a collection of arbitrary Geometries.
The destination Topology must already exists and must be empty; both SRID and dimensions of input Geometries must match SRID and dimensions declared by Topology.

Will return NULL on success; an exception will be raised on failure.""" ;
    fno:name "CreateTopoGeo" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_CreateTopoGeo( toponame Text , geometry BLOB )" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:42e2ef335b014db4934ef023ac33d56e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MPointFromText.htm> ;
    fno:name "ST_MPointFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:431651f1140248d295b989972f353f58 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling Ground Control Points support (GGP)" ;
    fno:name "HasGCP" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax """HasGCP( void ) : Boolean

HasGroundControlPoints ( void ) : Boolean""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4326e640f06b4386a40eb853cb4af122 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Rotate.htm> ;
    fno:name "ST_Rotate" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:43a0b4b38eec4aeb86ec78a0f942278d a fno:Function ;
    dcterms:description """A new compressed XmlBLOB object will be returned.
If the input XmlBLOB is already compressed this one is a harmless no-op.

NULL will be returned for any invalid input (not a valid XmlBLOB object).""" ;
    fno:name "XB_Compress" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_Compress( xmlObject XmlBLOB ) : XmlBLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:43b8409264634abd8b9d6aea58e20f30 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOCALLBACKS" ;
    fno:name "HasGeoCallbacks" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeoCallbacks( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:43c6e64b4d86470495dd87836baee28c a fno:Function ;
    dcterms:description "meters / U.S. yards" ;
    fno:name "U.S. Yard" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToUsYd( x Double precision ) : Double precision

CvtFromUsYd( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:43cbb4b6af59475084527a9ce5dc092d a fno:Function ;
    dcterms:description "construct a geometric object given its GeoJSON Representation" ;
    fno:name "GeomFromGeoJSON" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromGeoJSON( geoJSONGeometry String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:448abf9bc61f4163b080e3fc7d2bb851 a fno:Function ;
    dcterms:description """Will safely rename a Geometry Table, including any SpatialIndex, triggers, metadata, statistics tables.
Will also work on ordinary (non-Spatial) Tables, RasterLite2 raster_coverage, GeoPackage (Vector/Raster) and OGR/FDO Geometries.
db-prefix can be NULL, where the Table to be renamed is expected to be located within the "MAIN" database.
The optional argument permissive determines if a retcode will be returned in the case of failure.The default setting, when not explicitly overridden, is FALSE, where an exception will then be raised.
Will not work on Virtual Tables or Views; Spatial Tables can be renamed only if they are located in the MAIN database.
Any Views using a renamed Table will be adapted with the renamed Table-Name

Will return 1 (i.e. TRUE) on success.
An exception will be raised on invalid arguments or on failure, except when permissive has been explicitly set.
In this case any generic failure (as e.g. attempting to rename a non existing table) will simply return an error code without raising any exception; said in other words, enabling permissive is more or less equivalent to declare an IF EXISTS SQL clause and allows for a relaxed (non blocking) failure handling. When used with a SQLite version < than 3.25 this function will raise an exception.""" ;
    fno:name "RenameTable" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """RenameTable( db-prefix Text , old_name Text , new_name Text ) : Integer

RenameTable( db-prefix Text , old_name Text , new_name Text , permissive Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4519d8a86cec42bb960e5587f28a408c a fno:Function ;
    dcterms:description """return a grid of triangular cells (having the edge length of size) precisely covering the input Geometry.
The specific Type of returned Geometry is controlled by the mode attribute value:
any positive value will cause a MultiLinestring to be returned.
zero (default value) will cause a MultiPolygon to be returned.
any negative value will cause a MultiPoint to be returned.
If the optional origin argument (expected to be a Point) is not specified then the (0,0) grid origin will be assumed by default.

NULL will be returned if any error is encountered.""" ;
    fno:name "TriangularGrid" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """TriangularGrid( geom ArealGeometry , size Double precision [ , mode Integer , [ origin PointGeometry ] ] ) : Geometry

ST_TriangularGrid( geom ArealGeometry , size Double precision [ , mode Integer , [ origin PointGeometry ] ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4528132aa5df42dc8e3fa6901dfc86df a fno:Function ;
    dcterms:description "meters / indian chains" ;
    fno:name "Indian Chain" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToIndCh( x Double precision ) : Double precision

CvtFromIndCh( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:453bf749e9a440f28a57d8f4fc5cbc83 a fno:Function ;
    dcterms:description """return the y-coordinate for geom MBR's lowermost side as a double precision number.

NULL will be returned if geom isn't a valid Geometry.""" ;
    fno:name "MbrMinY" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """MbrMinY( geom Geometry) : Double precision

ST_MinY( geom Geometry) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4599c643dc9846adb7bcfd9f39239f04 a fno:Function ;
    dcterms:description """Sets or updates the URL corresponding to a Data License.
license_name is expected to match an already registered license/version.
url is expected to be an URL pointing to the license's legal terms and conditions.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "SetDataLicenseUrl" ;
    gsrdb:hasScope "SQL functions supporting Data Licenses" ;
    gsrdb:hasSyntax "SetDataLicenseURL( license_name Text , url Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:45e3fcd12352476d896422a527ade482 a fno:Function ;
    dcterms:description """Will return the Title defined within the XmlBLOB (if any).

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when no Title is defined.

Supported only on ISO Metadata and SLD/SE Styles.""" ;
    fno:name "XB_GetTitle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetTitle( xmlObject XmlBLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:468375cc24d64b228b7172d5bf976187 a fno:Function ;
    dcterms:description """This SQL function checks if the currently connected DB contains any potentially malicious Triggers; carefully checking this conditions is a minimal precaution expected to be always verified before eventually activating the SPATIALITE_SECURITY=relaxed mode.

The return type is Integer (total count of suspected Triggers); 0 means that the currently connected DB should be considered absolutely safe.""" ;
    fno:name "CountUnsafeTriggers" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "CountUnsafeTriggers( ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4695b254b5a049818f9c31d779b8bb3d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Y.htm> ;
    fno:name "ST_Y" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:46c380bd68fa4d75b4d07de26f9b14a2 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeometryType.htm> ;
    fno:name "ST_GeometryType" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:46d8626c14d4431781aed81caa8dfb51 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/Box3D.htm> ;
    fno:name "Box3D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:46f42bbeffd44c2492bc5c3463e2b4ee a fno:Function ;
    dcterms:description """returns a compressed Geometry [if a valid Geometry was supplied], or NULL in any other case

Please note: geometry compression only affects LINESTRINGs and POLYGONs, not POINTs""" ;
    fno:name "CompressGeometry" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-compression functions" ;
    gsrdb:hasSyntax "CompressGeometry( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4779702a759e420784feff91c24ecdf6 a fno:Function ;
    dcterms:description """Registers an alternative setting for the WMS Layer identified by getmap_url and layer_name.
key: identifies a specific multi-value setting, and should be either version or format.
value: an alternative setting value. Examples:
key = 'version' , value = ''1.0.0'
key = 'version' , value = ''1.1.0'
key = 'version' , value = ''1.1.1'
key = 'version' , value = ''1.3.0'
is_default (optional arg): if the corresponding value will become the standard setting for the corresponding WMS Layer (FALSE if undefined).

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_RegisterSetting" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_RegisterSetting( getmap_url Text , layer_name Text , key Text , value Text ) : Integer

WMS_RegisterSetting( getmap_url Text , layer_name Text , key Text , value Text , is_default Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:48098763aae84d168cb2f619d1a646a5 a fno:Function ;
    dcterms:description """Very similar to TopoGeo_FromGeoTableExt except for a very critical difference. This function is strongly optimized for maximum speed, and will only update/create Nodes and Edges, without update/creation of Faces.
Consequently it will always leave the target Topology in an inconsistent state. All Faces will be properly updated/created using TopoGeo_Polygonize(), afterwich the target Topology will return to a consistent state.

Will return 0 on full success or a positive integer corresponding to the total count of failing features referenced by the dustbin table.
An exception will be raised for any invalid argument.""" ;
    fno:name "TopoGeo_FromGeoTableNoFaceExt" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_FromGeoTableNoFaceExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text ) : Integer

TopoGeo_FromGeoTableNoFaceExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text , line_max_points Integer ) : Integer

TopoGeo_FromGeoTableNoFaceExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text , line_max_points Integer , line_max_length Double precision ) : Integer

TopoGeo_FromGeoTableNoFaceExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text , line_max_points Integer , line_max_length Double precision , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:4809d9c2f33b4c26bfa83c1921d99fdb a fno:Function ;
    dcterms:description """Will remove an Edge. If the removed Edge separated two Faces one of then will be modified and the other deleted.

Will return the ID of the surviving Face on success; an exception will be raised on failure.""" ;
    fno:name "RemEdgeModFace" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_RemEdgeModFace( toponame Text , edge-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4817963f2d894da8aac6bc941f477c36 a fno:Function ;
    dcterms:description "Add a value to the z-coordinate of a Geometry" ;
    fno:name "ST_AddZ" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:487f39d846674a0181fec3f56c070398 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AddPoint.htm> ;
    fno:name "ST_AddPoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:48899b7dd53041138e83b627d74de935 a fno:Function ;
    dcterms:description """Will export an internal Table as an external DBF file:
table name of the table to be exported.
filename absolute or relative path leading to the DBF (including the .dbf suffix).
charset the character encoding adopted by the DBF, as e.g. UTF-8 or CP1252
colname_case (optional argument) can be one between:
LOWER or LOWERCASE: all column names will be converted to lowercase (default option).
UPPER or UPPERCASE: all column names will be converted to uppercase.
SAME or SAMECASE: all column names will be left as they are.

Will return the total number of exported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ExportDBF" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "ExportDBF( table Text , filename Text , charset Text [ , colname_case Text ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:489fcbba239e44e0948845ad58a1f3dc a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GeoPackage support (GPKG)" ;
    fno:name "HasGeoPackage" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeoPackage( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:48dfb1825bfc4e55b48e2841d07ffb9f a fno:Function ;
    dcterms:description """a Linestring Geometry will be returned connecting all the input Points (accordingly to input sequence)
aggregate function

NULL will be returned if any error is encountered""" ;
    fno:name "MakeLine" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeLine( geom PointGeometry ) : LinestringGeometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:48e3d8fc06be4993a79e70873b440550 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOSREENTRANT" ;
    fno:name "HasGeosReentrant" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeosReentrant( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:494012172b6546769a04aef89076f11e a fno:Function ;
    dcterms:description """Removes an already defined alternative SRID from a Vector Coverage.
coverage_name and srid must identify some previously defined alternative SRID.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterVectorCoverageSrid" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_UnregisterVectorCoverageSrid( coverage_name String , srid Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:496540867d9b4667b49334ca3a8ee232 a fno:Function ;
    dcterms:description """Will precisely cut in a topological consistent way a whole Input dataset using a Blade dataset (i.e. an arbitrary polygonal dataset).
All cut fragments will be stored into a further Output dataset, and all mother-child relationships will be fully preserved by saving the Primary Key values allowing to trace back Input and Blade pairs giving birth to each single fragment.
Any cut fragment stored into the Output dataset eventually falling outside any Blade will reference a conventional NULL Blade.
The Input dataset is always expected to declare a Primary Key and must declare a POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING or MULTIPOLYGON Geometry type.It can be located either in the MAIN database or in any other attached DB, and must be fully identified by the input-db-prefix, input-table and input-geometry arguments.
The Blade dataset is always expected to be a POLYGON or MULTIPOLYGON, with a defined Primary Key.It can be located either in the MAIN database or in any other attached DB, and is fully identified by the blade-db-prefix, blade-table and blade-geometry arguments.Note: both the Input and Blade Geometries must have the same identical SRID value.
The Output dataset will be always created in the MAIN database.The Output Geometry will have the same name and SRID as the input-geom: the Geometry type will always be one of POINT, LINESTRING or POLYGON (all cut fragments will be stored as simple features on distinct rows).
Both the input-db-prefix and blade-db-prefix arguments could be set as NULL, where the MAIN database will then always be assumed.
also the input-geom and blade-geom arguments can be set as NULL.In such a case the appropriate Geometry column name will be chosen when only one Geometry column is defined, otherwise an exception will be raised.
The optional argument transaction determines if an internal SQL Transaction should be automatically started or not (the default setting, if not explicitly overridden, is FALSE).
The optional argument ram-tmp-storage determines if the intermediate temporary tables internally used by this function should be created in RAM or not (the default setting if not explicitly overridden is FALSE).
Will return -1 on invalid arguments, 0 on failure, 1 on full success and 2 on partial success (i.e.when the output table contains one or more invalid geometries).""" ;
    fno:name "ST_Cutter" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "ST_Cutter( input-db-prefix String , input-table String , input-geometry String , blade-db-prefix String , blade-table String , blade-geom String , output-table String [ , transaction Boolean [ , ram-temp-storage Boolean ] ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:497caff0b51d4981800d17162362005d a fno:Function ;
    dcterms:description """Will remove from the given Topology all dangling Edges.

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_RemoveDanglingEdges" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_RemoveDanglingEdges( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:499f74b1b54e404aa97932583dfc5604 a fno:Function ;
    dcterms:description """returns the intput value possibly casted to the BLOB data-type: if the optional argument hex_input is set to TRUE the input value will be expected to correspond to an HexaDecimal string, e.g. 01ab89EF; if this conversion fails then NULL will be returned.

returns NULL if no conversion is possible.""" ;
    fno:name "CastToBlob" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax """CastToBlob( value Generic ) : Blob

CastToBlob( value Generic , hex_input Boolean ) : Blob""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:49eeb8b5b7d14b8994517c4b50f08b8b a fno:Function ;
    dcterms:description "Return true if Geometry A intersects Geometry B" ;
    fno:name "ST_Intersects" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:49f2d31f527b4d90ad10523d66018912 a fno:Function ;
    dcterms:description """For more informations about patternMatrix interpretation please read: DE-9IM

The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments;

returns TRUE if the spatial relationship specified by the patternMatrix holds.""" ;
    fno:name "Relate" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """OGC canonical signature
Relate( geom1 Geometry , geom2 Geometry , patternMatrix String ) : Integer

ST_Relate( geom1 Geometry , geom2 Geometry , patternMatrix Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:49f8d61aced14d34a425ca7deb150141 a fno:Function ;
    dcterms:description """Return a derived geometry collection value with elements that match the specified measure.
NULL will be returned if any error is encountered (or when no element corresponding to the given measure is found).
Please note: NULL will be returned if geom doesn't contain M-dimension, or if geom contains a Polygon, or if geom is a GeometryCollection.""" ;
    fno:name "LocateAlongMeasure" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Linear Referencing" ;
    gsrdb:hasSyntax """ST_Locate_Along_Measure( geom Geometry , m_value Double precision ) : Geometry

ST_LocateAlong( geom Geometry , m_value Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:49fa08ea137841ab94d65d949e22ea5b a fno:Function ;
    dcterms:description """Will attempt to export into an Output GeoTable all Geometries out from a Topology-Geometry matching (via Seed-based references) a given Reference-GeoTable containing information attributes.
db-prefix can be NULL, and in this case the reference GeoTable is expected to be located within the "MAIN" database.
ref-column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the reference GeoTable must be properly registered and must match both SRID and dimensions declared by the target Topology.
this function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.
the output GeoTable will be always located on the "MAIN" DB and must not exists; it will be automatically created with the same identical attributes of the reference GeoTable.
all spatial features found into the reference GeoTable will be copied into the output GeoTable. All information attributes will be preserved exactly as they are, and the feature's Geometry will be built by aggregating all Topology objects matching the reference Geometry by Seed correspondences.If no matching Topology objectes are found the result will be a NULL output Geometry.
Please note: this function will automatically invoke TopoGeo_UpdateSeeds() (incremental mode).

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_ToGeoTable" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_ToGeoTable( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text ) : Integer

TopoGeo_ToGeoTable( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text , with-spatial-index Boolenan ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:4a0cece938084c8db038ed2f712983d6 a fno:Function ;
    dcterms:description """Will attempt to export into an output Table all relationships between the Edges of some Topology-Geometry and Linestrings/Multilinestrings found within a given Reference-GeoTable.
db-prefix can be NULL, and in this case the reference GeoTable is expected to be located within the "MAIN" database.
ref-column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the reference GeoTable must be properly registered and must match both SRID and dimensions declared by the target Topology.
this function accepts input Geometries only of the Linestring or MultiLinestring types.
the output Table will be always located on the "MAIN" DB and must not exists; it will be automatically created.

Will return 1 on success; an exception will be raised on failure.

Warning: if the Geometry column identified by ref-column-name is not supported by a Spatial Index this function will run in a painfully slow mode.""" ;
    fno:name "TopoGeo_LineEdgesList" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_LineEdgesList( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:4a171fe234304ef197a12c277783b16f a fno:Function ;
    dcterms:description "return a geometric object that is the intersection of geometric objects geom1 and geom2" ;
    fno:name "Intersection" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """Intersection( geom1 Geometry , geom2 Geometry ) : Geometry

ST_Intersection( geom1 Geometry , geom2 Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4a1bb4a2ad364df09f38e258db46691d a fno:Function ;
    dcterms:description "returns a Geometry using the [XY] space dimension" ;
    fno:name "CastToXY" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Space-dimensions casting functions" ;
    gsrdb:hasSyntax "CastToXY( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4aa3261bb9c747bcb1d81cb894dd6a01 a fno:Function ;
    dcterms:description """Unregisters a WMS Layer (and all related children).

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_UnRegisterGetMap" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_UnRegisterGetMap( getmap_url Text , layer_name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4ab50cf3b33a4b98a9c82f7d13a69141 a fno:Function ;
    dcterms:description "Alias for  ST_AsWKT" ;
    fno:name "ST_AsText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:4ab58cd8a6834da59cb8bc0b2396a758 a fno:Function ;
    dcterms:description "Calculate a regular grid of  POINT s based on a Geometry or a table of Geometries" ;
    fno:name "ST_MakeGridPoints" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:4b32b654ca7b4edc8bdbd78f2fa4183d a fno:Function ;
    dcterms:description """return a geometric object (of the MULTILINESTRING type) representing any common lines shared by both geometries
NULL is returned is no common line exists""" ;
    fno:name "SharedPaths" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """SharedPaths( geom1 Geometry , geom2 Geomety ) : Geometry

ST_SharedPaths( geom1 Geometry , geom2 Geomety ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4b46dbd55126412daaa990a657917315 a fno:Function ;
    dcterms:description "Retrieves from an MbrCache any entity whose MBR intersects the rectangle identified by extreme points x1 y1 and x2 y2" ;
    fno:name "FilterMbrIntersects" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for MbrCache-based queries" ;
    gsrdb:hasSyntax "FilterMbrIntersects( x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision )" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4b7b4af0112a4abf970cdaf0930e98ec a fno:Function ;
    dcterms:description """Associates a Raster Style to a Raster Styled Layer.
coverage_name must identify an existing Raster Layer.
An already registered Style can be referenced either by its unique Stile ID or by its Name; anyway a reference by Name could eventually fail if the Name is ambiguous (duplicate).

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterRasterStyledLayer" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterRasterStyledLayer( coverage_name String , style_id Integer ) : Integer

SE_RegisterRasterStyledLayer( coverage_name String , style_name Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4b89ea7fa0f24c45a35b47e7636e1b82 a fno:Function ;
    dcterms:description """Will heal two Links by deleting the NetNode connecting them. The first Link provided will be modified and the second deleted.

Will return the ID of the removed NetNode on success; an exception will be raised on failure.""" ;
    fno:name "ModLinkHeal" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_ModLinkHeal( netname Text , link1-id Integer , link2-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4c09694e2ca74ed6b765bb4f5818dcf5 a fno:Function ;
    dcterms:description "Return true if a Geometry is a closed  LINESTRING or  MULTILINESTRING" ;
    fno:name "ST_IsClosed" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:4ca9ef739db242b3bf6eddb3adb27d8a a fno:Function ;
    dcterms:description "meters / U.S. feet" ;
    fno:name "U.S. Foot" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToUsFt( x Double precision ) : Double precision

CvtFromUsFt( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4cf3f65e9e83412385cb7406abb5044f a fno:Function ;
    dcterms:description """This function will inspect the Spatial Metadata, then automatically creating/refreshing a VirtualFDO wrapper for each FDO/OGR geometry table

the return type is Integer [how many VirtualFDO tables have been created]

The optional db_prefix argument specifies which one of the ATTACHED databases is intended to be targeted; if unspecified or NULL then the MAIN database will be assumed by default.""" ;
    fno:name "AutoFDOStart" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax """AutoFDOStart( void ) : Integer

AutoFDOStart( db_prefix String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4d409d2428b246b2aa6fb9d87186fa24 a fno:Function ;
    dcterms:description "construct a geometric object given its EWKB Representation" ;
    fno:name "GeomFromEWKB" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromEWKB( ewkbGeometry String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4d808ef529f3465caf4a8e519e6f8b6d a fno:Function ;
    dcterms:description """This SQL function is almost exactly the same of SqlProc_Execute(), with just an outstanding differece:
the cooked SQL Body will be iteratively executed, as if it was declared within a while (true) { ... } never ending loop.
the execution loop will break only when SqlProc_Return() will set a negative or zero return value of the Integer type.
Warning: a badly implemented call to SqlProc_ExecuteLoop() may easily cause a nastry endless loop

Returns TRUE on success.
An exception will be raised on failure or invalid arguments.""" ;
    fno:name "SqlProc_ExecuteLoop" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_ExecuteLoop( object BLOB ) : Integer

SqlProc_ExecuteLoop( object BLOB , vararg String ) : Integer

SqlProc_ExecuteLoop( object BLOB , vararg1 String [ , ... ] , varargN String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4dbab62ba00246ddb263aad7c6321b8b a fno:Function ;
    dcterms:description "construct a MultiLinestring" ;
    fno:name """MLineFromText
MultiLineStringFromText""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """MLineFromText( wktMultiLineString String [ , SRID Integer] ) : MultiLinestring

ST_MLineFromText( wktMultiLineString String [ , SRID Integer] ) : MultiLinestring

MultiLineStringFromText( wktMultiLineString String [ , SRID Integer] ) : MultiLinestring

ST_MultiLineStringFromText( wktMultiLineString String [ , SRID Integer] ) : MultiLinestring""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4ddc38f8ede648de8e3de7709a42da73 a fno:Function ;
    dcterms:description """Evaluate the SQL text in X. Return the results, using string Y as the separator.
If Y is omitted, use a single space character.

Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "eval" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "eval( X TEXT [ , Y TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4e1952aa80434dd7802d444445cba5e4 a fno:Function ;
    dcterms:description """Fully nodes a set of linestrings using the least possible number of nodes while preserving all of the input ones.
NULL will be returned if the input Geometry isn't a set of linestrings or if any other error occurs.""" ;
    fno:name "ST_Node" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax "ST_Node( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4e28369364064e9bbd29f1dedc995fa1 a fno:Function ;
    dcterms:description """return a geometric object obtained by rotating coordinates according to angleInDegrees value.

Positive angle = clockwise rotation.
Negative angle = counterclockwise rotation.""" ;
    fno:name """RotateCoords
RotateCoordinates""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """RotateCoords( geom Geometry , angleInDegrees Double precision ) : Geometry

RotateCoordinates( geom Geometry , angleInDegrees Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4e6e9e6bee7d4a11ae29ad78ec6ccc35 a fno:Function ;
    dcterms:description "Return true if a Geometry is simple" ;
    fno:name "ST_IsSimple" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:4ef50468e85e4ca1b6736e444cef78ab a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid JP2 [Jpeg2000] image""" ;
    fno:name "IsJP2Blob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsJP2Blob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:4fa1ef72fdf14adba87f3742da377891 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LinestringFromWKB.htm> ;
    fno:name "ST_LinestringFromWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:4fbe230def654d179cce81f46e0996c7 a fno:Function ;
    dcterms:description """Given any arbitrary GEOMETRY will return a derived MULTILINESTRING geometry. Sub-geometries not being of the LINESTRING type will be ignored.
NULL will be returned if any error is encountered (or when no LINESTRING is found).""" ;
    fno:name "ExtractMultiLinestring" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax "ExtractMultiLinestring( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:4fcfde64aeaa4d57aa53b918e3c2863b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Equals.htm> ;
    fno:name "ST_Equals" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:4ffa4a8a40c940079ecc3fd09512dbdf a fno:Function ;
    dcterms:description """returns the Full File Name (including an eventual File Extension) from a relative or absolute Pathname.
Will return NULL for invalid input of for any path lacking a File Name.""" ;
    fno:name "FullFileNameFromPath" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "FullFileNameFromPath( TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:50328eb7f9c542c59c9da26605859274 a fno:Function ;
    dcterms:description """returns the arc cosine of x, that is, the value whose cosine is x
returns NULL if x is not within the range -1 to 1""" ;
    fno:name "Acos" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Acos( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:504c549acd884a3692188a95aabf2aa3 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Distance_Sphere.htm> ;
    fno:name "ST_Distance_Sphere" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:50a70b05438c49498a3d7834aeaf9125 a fno:Function ;
    dcterms:description """returns the most recent error message raised by PostgreSQL.
NULL if there is no pending error message available.""" ;
    fno:name "PostgreSQL_GetLastError" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "PostgreSQL_GetLastError() : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:51222e07616a4d44ba4a1439cd82df39 a fno:Function ;
    dcterms:description "returns the dimension of the geometric object, which is less than or equal to the dimension of the coordinate space" ;
    fno:name "Dimension" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """Dimension( geom Geometry ) : Integer

ST_Dimension( geom Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5123808e00af442894ad48f4d52a157a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_SimplifyPreserveTopology.htm> ;
    fno:name "ST_SimplifyPreserveTopology" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:51360af1e0f142fabfc9a6e19c8c263a a fno:Function ;
    dcterms:description """return a geometric object obtained by scaling coordinates according to scaleX and scaleY values

if only one scale factor is specified, then an isotropic scaling occurs [i.e. the same scale factor is applied to both axis]
otherwise an anisotropic scaling occurs [i.e. each axis is scaled according to its own scale factor]""" ;
    fno:name """ScaleCoords
ScaleCoordinates""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """ScaleCoords( geom Geometry , scaleX Double precision [ , scaleY Double precision ] ) : Geometry

ScaleCoordinates( geom Geometry , scaleX Double precision [ , scaleY Double precision ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5143b998bebe452fbbd68dda1d395a8e a fno:Function ;
    dcterms:description """Ensures that all Links on a Topology-Network will have not less than three vertices.
all Links found already definining three or more vertices will be left untouched as they are.
all Links found simply being a two-points segment will be changed by interpolating a third intermediate vertex.
this function is harmless (doesn't substantially alters the Network in any way) and ensures that all Seeds will certainly be not ambiguous.
Will return the total number of changed Links on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_DisambiguateSegmentLinks" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "TopoNet_DisambiguateSegmentLinks( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:517501fdbd2f4da994fcd131a041eace a fno:Function ;
    dcterms:description "returns the cosine of x, where x is given in radians" ;
    fno:name "Cos" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Cos( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5176972812234f7b96f630f63d033a77 a fno:Function ;
    dcterms:description """Exactly the same as ST_BuildArea, but implemented as an aggregate function.

NULL will be returned if any error is encountered""" ;
    fno:name "Polygonize" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Polygonize( geom Geometry ) : Geometry

ST_Polygonize( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5182280ae6744988bf433653b58a8ce6 a fno:Function ;
    dcterms:description """Will attempt to split a Linestring (or even a MultiLinestring) into a collection of shorter LineStrings fully respecting Topology consistency.
if argument line_max_points is set to a positive value (>= 2) then all input Linestrings will be split into many shorter lines having no more than the required number of points.
if argument line_max_length is set to a positive value, in units of the SRID, then a separate output line will be split every time that it becomes longer than the allowed limit.
either line_max_point and line_max_length can assume a NULL value, this intending ignore.
if both line_max_point and line_max_length are active at the same time then the first limit encountered will apply.
in any other case all input Linestrings will be simply copied into the output collection exactly as they are.

Will return a MultiLinestring Geometry on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_SubdivideLines" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_SubdivideLines( input Geometry , line_max_points Integer ) : MultiLinestring

TopoGeo_SubdivideLines( input Geometry , line_max_points Integer , line_max_length Double precision ) : MultiLinestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:519b3f4bf7b04d8a9c0309aceb4c763c a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsKML.htm> ;
    fno:name "ST_AsKML" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:51cef90debe445e1ba4c4417266274ae a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_M.htm> ;
    fno:name "ST_M" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:51ee8ea908bf420c84591b401bc57025 a fno:Function ;
    dcterms:description """Very similar to TopoGeo_FromGeoTable except for a very critical difference. This function is strongly optimized for maximum speed, and will only update/create Nodes and Edges, without update/creation of Faces.
Consequently it will always leave the target Topology in an inconsistent state. All Faces will be properly updated/created using TopoGeo_Polygonize(), afterwich the target Topology will return to a consistent state.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_FromGeoTableNoFace" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_FromGeoTableNoFace( toponame Text , db-prefix Text , table-name Text , column-name Text ) : Integer

TopoGeo_FromGeoTableNoFace( toponame Text , db-prefix Text , table-name Text , column-name Text , line_max_points Integer ) : Integer

TopoGeo_FromGeoTableNoFace( toponame Text , db-prefix Text , table-name Text , column-name Text , line_max_points Integer , line_max_length Double precision ) : Integer

TopoGeo_FromGeoTableNoFace( toponame Text , db-prefix Text , table-name Text , column-name Text , line_max_points Integer , line_max_length Double precision , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:52045401cab3499bae0e7ff845641c7c a fno:Function ;
    dcterms:description """Will return the undecorated Value string from a Stored Variable. NULL will be returned if the Stored Variable does not exists.

An exception will be raised on invalid arguments.""" ;
    fno:name "StoredVar_GetValue" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredVar_GetValue( name String ) : BLOB" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:52dd16fedaa44e51897734bf49c5bf02 a fno:Function ;
    dcterms:description "Compute the direction of steepest ascent of a triangle" ;
    fno:name "ST_TriangleDirection" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:53ff19be1666410f9f5db100dd2626d1 a fno:Function ;
    dcterms:description """Completely removes a Topo-Net (and all data it contains) from the DBMS: to be invoked very cautiously and only if you are absolutely sure of what you are doing.

Will return 1 on success) or 0 on failure: -1 will be returned on invalid arguments.""" ;
    fno:name "DropNetwork" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "DropNetwork( netname Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:54308be9f738470cae97b2c895efe1b7 a fno:Function ;
    dcterms:description """Checks if some table has a physical column named "rowid" (caseless) shadowing the real ROWID.

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE
NULL will be returned if the requested table doesn't exist.""" ;
    fno:name "CheckShadowedRowid" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CheckShadowedRowid( table String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5431535d05b14ee8934c2563906b40c8 a fno:Function ;
    dcterms:description "a Geometry will be returned representing the POINT ZM defined by [x y z m] coordinates" ;
    fno:name "MakePointZM" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakePointZM( x Double precision , y Double precision , z Double precision , m Double precision [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:54457327b6f94456be50078a5e6fcbe8 a fno:Function ;
    dcterms:description "Return true if the envelope of Geometry A intersects the envelope of Geometry B" ;
    fno:name "ST_EnvelopesIntersect" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:54e3a6d3a26c4c82b20438856868ab02 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments.

TRUE if the intersection of g1 and g2 results in a value whose dimension is less than the maximum dimension of g1 and g2 and the intersection value includes Points interior to both g1 and g2, and the intersection value is not equal to either g1 or g2""" ;
    fno:name "Crosses" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Crosses( geom1 Geometry , geom2 Geometry ) : Integer

ST_Crosses( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:550ad2bac8cd4788ae98e93850245400 a fno:Function ;
    dcterms:description "construct a Point" ;
    fno:name "PointFromText" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """PointFromText( wktPoint String [ , SRID Integer] ) : Point

ST_PointFromText( wktPoint String [ , SRID Integer] ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:557b6e343f4c48aaaff549d87a2d12e3 a fno:Function ;
    dcterms:description "returns the square root of a non-negative number x" ;
    fno:name "Sqrt" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Sqrt( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:564688f626664aa2afbe0e77eda14f36 a fno:Function ;
    dcterms:description "Return true if the Geometries are within the specified distance of one another" ;
    fno:name "ST_DWithin" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:565e16b41bd34e85872ccccfce3bf43e a fno:Function ;
    dcterms:description """If the input argument corresponds to a valid BLOB-TinyPoint the corresponding BLOB-GEOMETRY will be returned.

In any other case the input argument will be retuned.""" ;
    fno:name "GeometryPointEncode" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "GeometryPointEncode( content BLOB-TinyPoint ) : BLOB-GEOMETRY" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5663a367d9944d219ce4f132eb1b2802 a fno:Function ;
    dcterms:description "returns the largest integer value not greater than x" ;
    fno:name "Floor" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Floor( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:567ee0aa6bf34c6fa0ae35faabbfeb3f a fno:Function ;
    dcterms:description "Compute a constrained Delaunay triangulation based on a geometry" ;
    fno:name "ST_ConstrainedDelaunay" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:5685158931ef4ee8a4be4a28bf3551d9 a fno:Function ;
    dcterms:description """Will return the SRID value [if any] corresponding to the CRS defined by the .PRJ member of a zipped Shapefile.
This function is almost the same as PROJ_GuessSridFromSHP(), except in that the Shapefile is expected to be stored within some Zipfile.
The following arguments are required:
zip_path: expected to be the full or relative pathname of some Zipfile.
filename base name of the Shapefile within the Zipfile (omitting any .shp, .shx or .dbf suffix).

Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "PROJ_GuessSridFromZipSHP" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax "PROJ_GuessSridFromZipSHP( zip_path String , filename String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:57662a7af51a41fab7a8bbb1b22f5508 a fno:Function ;
    dcterms:description "Returns TRUE if the Geopackage mode is currently enabled, otherwise FALSE" ;
    fno:name "GetGpkgMode" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "GetGpkgMode( void ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:57a8c1817c0847e18febb1d5a2b4dfbd a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Segmentize.htm> ;
    fno:name "ST_Segmentize" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:5811b786fbb84e07861923b3eefc68f2 a fno:Function ;
    dcterms:description "returns a Version 4 (random) UUID (Universally unique identifier)." ;
    fno:name "CreateUUID" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "CreateUUID( void ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:584b5b4068f64743a1c96c903776b84e a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument.
If the ESRI_flag argument is set to 1 (TRUE), then all ESRI-like internal holes (violating the standard OGC model) will be considered valid.

TRUE if this geometric object does not contains any topological error""" ;
    fno:name "IsValid" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """IsValid( geom Geometry [ , esri_flag Boolean ] ) : Integer

ST_IsValid( geom Geometry [ , esri_flag Boolean ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:58608c4191eb4023b15689eeadb957d1 a fno:Function ;
    dcterms:description "returns the EWKT [Extended Well Known Text] representation (PostGIS compatibility)" ;
    fno:name "AsEWKT" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "AsEWKT( geom Geometry ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:58655563e6bc4d3f92f4b4b1c85e21eb a fno:Function ;
    dcterms:description """Inserts (or updates) an ISO Metadata definition.
scope can be one of undefined, fieldSession, collectionSession, series, dataset, featureType, feature, attributeType, attribute, tile, model, catalogue, schema, taxonomy, software, service, collectionHardware, nonGeographicDataset, dimensionGroup.
metadata is expected to be a valid XmlBLOB storing some IsoMetadata payload.
the first form (two arguments only) always performs an INSERT; if one the optional arguments id or fileIdentifier an UPDATE could be eventually performed if a corresponding metadata row is already defined.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "RegisterIsoMetadata" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting ISO Metadata" ;
    gsrdb:hasSyntax """RegisterIsoMetadata( scope String , metadata BLOB ) : Integer

RegisterIsoMetadata( scope String , metadata BLOB , id Integer ) : Integer

RegisterIsoMetadata( scope String , metadata BLOB , fileIdentifier String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5866613d70a2425fa0bf93a1397d0aa9 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_DWithin.htm> ;
    fno:name "ST_DWithin" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:589feb267cbf4c7da1ca43cc965d40c0 a fno:Function ;
    dcterms:description """returns the MD5 checksum corresponding to the input value.
Will return NULL for non-BLOB or non-TEXT input.""" ;
    fno:name "MD5Checksum" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "MD5Checksum( BLOB | TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5a961170116c4a7d8f04e92e92b9bace a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeometryN.htm> ;
    fno:name "ST_GeometryN" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:5b3bd9c97e2d4b67be30f2e966e25620 a fno:Function ;
    dcterms:description """return the filename of the nth (1-based) DBF file contained within the Zipfile identified by zip_path
NULL on invalid arguments or if the Zipfile does not exist or is corrupted.""" ;
    fno:name "Zipfile_DbfN" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "Zipfile_DbfN( zip_path Text , idx Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5b440053232e44bfa235d5d4606c2375 a fno:Function ;
    dcterms:description """This function will create base tables for an "empty" GeoPackage

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgCreateBaseTables" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgCreateBaseTables( void ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5b5f6394f4144d998e87ab2d0a570523 a fno:Function ;
    dcterms:description "Disables the Geopackage amphibious mode" ;
    fno:name "DisableGpkgAmphibiousMode" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "DisableGpkgAmphibiousMode( void ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5b68ce8e74a84d06b593cac8bfa1d693 a fno:Function ;
    dcterms:description """Creates both splite_metacatalog and splite_metacatalog_statistics tables; splite_metacatalog will be populated so to describe every table/column currently defined within the DB.
if the first argument transaction is set to TRUE the whole operation will be handled as a single Transaction (faster): the default setting is transaction=FALSE (slower, but safer).
the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "CreateMetaCatalogTables" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting the MetaCatalog and related Statistics" ;
    gsrdb:hasSyntax "CreateMetaCatalogTables( transaction Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5c03ed85a4a1452ba6f322f6aca506e0 a fno:Function ;
    dcterms:description """Will populate a full Network by importing a collection of arbitrary Geometries.
The destination Network must already exists and must be empty; both SRID and dimensions of input Geometries must match SRID and dimensions declared by Network.
Calling this function on behalf of some Network of the Logical type will raise an exception

Will return NULL on success; an exception will be raised on failure.""" ;
    fno:name "SpatNetFromGeom" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_SpatNetFromGeom( netname Text , geometry BLOB )" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5c0bc57322c54b8ab659232fd8004e3e a fno:Function ;
    dcterms:description """Will split a Link (of the Spatial type) by creating a new intermediate NetNode. The original Link will be deleted and will be replaced by two new Links.

Will return the ID of the inserted NetNode on success; an exception will be raised on failure.""" ;
    fno:name "NewGeoLinkSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_NewGeoLinkSplit( netame Text , link-id Integer , point Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5c3deb2c4e2e4e518ed7ef7d6a123fe3 a fno:Function ;
    dcterms:description """Constructs the Maximum Inscribed Circle for a polygonal geometry, up to a specified tolerance.
The Maximum Inscribed Circle is determined by a point in the interior of the area which has the farthest distance from the area boundary, along with a boundary point at that distance.
A cartographic use case is to determine a suitable point * to place a map label within a polygon.
The radius length of the Maximum Inscribed Circle is a measure of how "narrow" a polygon is. It is the distance at which the negative buffer becomes empty.
The function supports polygons with holes and multipolygons.
The implementation uses a successive-approximation technique over a grid of square cells covering the area geometry. The grid is refined using a branch-and-bound algorithm. Point containment and distance are computed in a performant way by using spatial indexes.

Returns a two-point linestring, with one point at the center of the inscribed circle and the other on the boundary of the inscribed circle..
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMaximumInscribedCircle" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMaximumInscribedCircle( geom Geometry , tolerance Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5c6f9abdb6784607b2e56faa05b36929 a fno:Function ;
    dcterms:description """This function will convert a GeoPackage format geometry blob into a SpatiaLite geometry blob.

Will return NULL if any error is encountered""" ;
    fno:name "GeomFromGPB" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "GeomFromGPB( geom GPKG Blob Geometry ) : BLOB encoded geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5c6fd67f648a4f79a75b2ef5e0238fb3 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Above.htm> ;
    fno:name "|>>" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:5cba841b15364f8893ffba8c866d520d a fno:Function ;
    dcterms:description """Will create both topologies and networks meta-tables.

Will return 1 on success) or 0 on failure (including already existing tables).""" ;
    fno:name "CreateTopoTables" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "CreateTopoTables( ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:5d446691f17a4c6c96cf6e475fa34f32 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Crosses.htm> ;
    fno:name "ST_Crosses" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:5d94b488b7ec458c8690c82b1e4ef62d a fno:Function ;
    dcterms:description "Return the minimum rectangle enclosing a Geometry" ;
    fno:name "ST_MinimumRectangle" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:5e42be72663047f0954247032625e4cf a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid PNG image""" ;
    fno:name "IsPngBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsPngBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5e56a75ef3d54610be953a6682b2dd33 a fno:Function ;
    dcterms:description """Will export an internal Table as an external GeoJSON file that is conformant to the RFC 7946 specifications:
Mandatory aguments:
table name of the table to be exported.
geom_column name of the Geometry column.
filename absolute or relative path leading to the GeoJSON file.
Optional aguments:
precision number of decimal digits to be exported; 8 by default.
lon_lat if TRUE all coordinates are assumed to be expressed as WGS84 longitudes and latitudes (as required by RFC 7946), and ST_Transform will be automatically called if and when required.If FALSE all coordinates are assumed to be expressed in any other (undefined) CRS.
M_coords if TRUE eventual M-values will be exported as extra coordinates.If FALSE strict RFC 7946 conformance will be applied (no M-Values will be exported)
indented if TRUE the GeoJSON file will be properly indented for enhanced human readibilityIf FALSE the whole GeoJSON file will be in a single monolithic line without blank spaces.
colcase_name one between LOWER | LOWERCASE, UPPER | UPPERCASE or SAME | SAMECASE (same meaning as in ExportSHP).

Will return the total number of exported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ExportGeoJSON2" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ExportGeoJSON2( table Text , geo_column Text , filename Text ) : Integer

ExportGeoJSON2( table Text , geo_column Text , filename Text [ , precision Integer [ , lon_lat Boolen [ , M_coords Boolean [ , indented Boolean [ , colname_case Text ] ] ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5f788992d1b74f66a0149953967d02b1 a fno:Function ;
    dcterms:description """Will import all DXF files found within a given Directory.
dir_path absolute or relative path leading to a directory containing all the *.dxf files to be imported.
srid EPSG SRID value; -1 by default.
append boolean flag: enabling or not append mode: 0 by default.
dimensions one between AUTO, 2D or 3D.
mode one between DISTINCT or MIXED.
special_rings one between NONE, LINKED or UNLINKED.
table_prefix: a prefix for table names; NULL if no prefix is required.
layer_name: name of a single DXF layer to be imported: NULL will import all layers found.
Will return 0 (i.e. FALSE) on failure, any other value (i.e. TRUE) on success.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportDXFfromDir" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportDXFfromDir( dir_path String ) : Integer

ImportDXFfromDir( dir_path String [ , srid Integer, append Integer, dimensions Text, mode Text , special_rings Text , table_prefix Text , layer_name Text ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:5f98dd78cafe405ab3106c99bda51f5d a fno:Function ;
    dcterms:description """Attempts to make an invalid geometry valid (the GEOS way).
If the optional argument keep_collapsed is TRUE all collapsed items (i.e. linestrings reduced to points or polygons reduced to linestrings) will be preserved into the output geometry, otherwise they'll be suppressed (default is TRUE)
NULL is returned on failure.

Note: this function is similar to ST_MakeValid() but is based on a completely different algorithm, so results could be very different.""" ;
    fno:name "GeosMakeValid" ;
    gsrdb:hasRequiredModule "GEOS-3100" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GeosMakeValid( geom Geometry [ , keep_collapsed boolean] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5fbf40658ce74afca98b86e124449a85 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Point_Inside_Circle.htm> ;
    fno:name "ST_Point_Inside_Circle" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:5fd622b615a9445a81fa5958cb4bb4e1 a fno:Function ;
    dcterms:description "return the max distance between geom1 and geom2" ;
    fno:name "MaxDistance" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """MaxDistance( geom1 Geometry , geom2 Geometry ) : Double precision

ST_MaxDistance( geom1 Geometry , geom2 Geometry ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:5fd7d9dbcad944969897df5230996a84 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument.

TRUE if this geometric object corresponds to the empty set""" ;
    fno:name "IsEmpty" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """IsEmpty( geom Geometry ) : Integer

ST_IsEmpty( geom Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:60629f8ba1c54b1582f330f766376766 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Overbelow.htm> ;
    fno:name "&<|" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6090da317ede4b33b6b4a19deffab8b2 a fno:Function ;
    dcterms:description "returns the Spatial Reference System ID for this geometric object" ;
    fno:name "SRID" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """SRID( geom Geometry ) : Integer

ST_SRID( geom Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6092e80738294256ad150d2b500333b5 a fno:Function ;
    dcterms:description """a Linestring Geometry will be returned representing the segment connecting pt1 to pt2

NULL will be returned if any error is encountered""" ;
    fno:name "MakeLine" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeLine( pt1 PointGeometry , pt2 PointGeometry ) : LinestringGeometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:60dac95d2a8544fb9bdfd301885f7340 a fno:Function ;
    dcterms:description "Return a Geometry with vertices less" ;
    fno:name "ST_RemovePoints" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:60fab2f9be66424fb32cb0c014b23067 a fno:Function ;
    dcterms:description """Will return the ParentIdentifier defined within the XmlBLOB (if any).

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when no ParentIdentifier is defined.

Supported only on ISO Metadata XML Documents.""" ;
    fno:name "XB_GetParentId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetParentId( xmlObject XmlBLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:612a049d82284ca7b1a6ad718952247f a fno:Function ;
    dcterms:description "3D Geometry to 2D Geometry" ;
    fno:name "ST_Force2D" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:613319fa9b804ed9b313c04bd0e3ce28 a fno:Function ;
    dcterms:description """return the y-coordinate for geom MBR's uppermost side as a double precision number.

NULL will be returned if geom isn't a valid Geometry.""" ;
    fno:name "MbrMaxY" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """MbrMaxY( geom Geometry) : Double precision

ST_MaxY( geom Geometry) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:613770d2fc4d49c08051fcb35dfeb6c1 a fno:Function ;
    dcterms:description "Return the number of points in a Geometry" ;
    fno:name "ST_NPoints" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:6138a79bf88c4c38a1663d1158c5a849 a fno:Function ;
    dcterms:description """Creates a WMS GetFeatureInfo request URL for the WMS Layer identified by getmap_url and layer_name by applying the currently set options.
width and height: horizontal and vertical dimensions (expressed in pixels) of the map image.
x and y: position of a Point on the map image to be queried: the map image coordidate origin (0, 0) is located on the upper left corner, the X axis increases going towards the right, the Y axis increases going towards the bottom.
minx, miny, maxx and maxy: the Bounding Box coverred by the map image.
feature_count (optional arg): maximum number of features allowed (1 if unspecified).

Will return a request URL on success; NULL on failure or on invalid arguments.""" ;
    fno:name "WMS_GetFeatureInfoRequestURL" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_GetFeatureInfoRequestURL( getmap_url Text , layer_name Text , width Integer , height Integer , x Integer, y Integer , minx Double , miny Double , maxx Double , maxy Double ) : Text

WMS_GetFeatureInfoRequestURL( getmap_url Text , layer_name Text , width Integer , height Integer , x Integer, y Integer , minx Double , miny Double , maxx Double , maxy Double , feature_count Integer ) : Text""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:61416c4a8dcb447a9d845b5621de857e a fno:Function ;
    dcterms:description "meters / U.S. statute miles" ;
    fno:name "U.S. Statute Mile" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToUsMi( x Double precision ) : Double precision

CvtFromUsMi( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:616a6322d5604379bf93ba6306bf8418 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling MINIZIP" ;
    fno:name "HasMiniZip" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasMiniZip( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:61c457ddac24488aaa7b3b5c4522c4fa a fno:Function ;
    dcterms:description """returns a plain URL from its corresponding percent encoding.
Will return NULL for invalid input.
the output URL will be always returned as an UTF-8 string.
the input URL will be converted from the charset encoding specified by the charset argument.if not specified UTF-8 will be assumed by default.""" ;
    fno:name "DecodeURL" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax """DecodeURL( url Text ) : Text

DecodeURL( url Text, charset Text ) : Text""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:61e0957cd8a64656b297e58e9dfe74c2 a fno:Function ;
    dcterms:description "Will test if Pause() is currently enabled (TRUE) or not (FALSE)." ;
    fno:name "IsPauseEnabled" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "IsPauseEnabled( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:628f01bc9e704f48a39cc191e8bb2b5c a fno:Function ;
    dcterms:description """Will attempt to create a VirtualRouting Table (and the corresponding Routing Binary Data Table) starting from a topologically correct Road Network.
routing_data_table: name of the Routing Binary Data Table to be created.
virtual_routing_table: name of the VirtualRouting Table to be created.
input_table: name of the input Table containing the Road Network.
from_column: name of the input Table column containing FromNode values.
to_column: name of the input Table column containing ToNode values.
geom_column: name of the input Table column containing Geometries.Could be eventually NULL for Networks just describing relations but lacking any Spatial representation.
cost_column: name of the input Table column containing Cost values.Could be eventually NULL and in this case ST_Length(geom_column) will be assumed to be the Cost: in the case of Networks based on some Geographic Reference System (long/lat, as e.g. SRID=4326) a precise measure of lengths expressed in meters will be computed by using geodesic formulas.
road_name_column: name of the input Table column containing Road Name values. Could be eventually NULL.
a_star_enabled: if the A* algorithm should be enabled or not (default: 1).
bidirectional: if arcs/links should be considered uni- or bi-directionals (default: 0).
oneway_from: name of the input Table column containing OneWay flags in the From-To direction. Could be eventually NULL.
oneway_to: name of the input Table column containing OneWay flags in the To-From direction. Could be eventually NULL.
overwrite: if set to TRUE already existing Routing Binary Data and/or VirtualRouting Tables will be silently overwritten (default: 0).

1 (aka TRUE) will be returned on success, an exception will be raised on failure.""" ;
    fno:name "CreateRouting" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """CreateRouting( routing_data_table String , virtual_routing_table String , input_table String , from_column String , to_column String , geom_column String , cost_column String ) : Boolean

CreateRouting( routing_data_table String , virtual_routing_table String , input_table String , from_column String , to_column String , geom_column String , cost_column String , road_name_column String , a_star_enabled Boolean , bidirectional Boolean ) : Boolean

CreateRouting( routing_data_table String , virtual_routing_table String , input_table String , from_column String , to_column String , geom_column String , cost_column String , road_name_column String , a_star_enabled Boolean , bidirectional Boolean , oneway_from String , oneway_to String ) : Boolean

CreateRouting( routing_data_table String , virtual_routing_table String , input_table String , from_column String , to_column String , geom_column String , cost_column String , road_name_column String , a_star_enabled Boolean , bidirectional Boolean , oneway_from String , oneway_to String , overwrite Boolean ) : Boolean""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6296a45b97184745ae43e48bfa463124 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomFromText.htm> ;
    fno:name "ST_GeomFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:62b3aa82dd1d449b98fd8304f0296bef a fno:Function ;
    dcterms:description "returns the cotangent of x, where x is given in radians" ;
    fno:name "Cot" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Cot( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:62ba2cdbd8df4ec882443b17146a33c0 a fno:Function ;
    dcterms:description """return a geometric object obtained by applying a Transformation based on Polynomial coefficients of the 1st, 2nd or 3rd order; if the optional arg newSRID is defined then the returned Geometry will assume the corresponding Reference System, otherwise it will preserve the same Reference System of the input Geometry.

will return NULL on invalid arguments.""" ;
    fno:name "GCP_Transform" ;
    gsrdb:hasRequiredModule """GrassGis code
GPLv2+""" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "GCP_Transform( geom Geometry , coeffs PolynomialCoeffs [ , newSRID Integer ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:6314312b38494e6ea10c02ced9ad534f a fno:Function ;
    dcterms:description """Will reset all BufferOptions to their initial default settings.
Returns TRUE on success, FALSE on failure.""" ;
    fno:name "BufferOptions_Reset" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_Reset( void ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6370d671a5dc4957ab26a83234ce0480 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid EXIF-GPS image
Please note: any valid EXIF-GPS image is a valid EXIF and JPEG as well""" ;
    fno:name "IsExifGpsBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsExifGpsBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:63f4626e6f3e49c9ba0bf583d8d220df a fno:Function ;
    dcterms:description """directly sets the Spatial Reference System ID for this geometric object [no reprojection is applied]

Will return a new Geometry BLOB object, or NULL on invalid arguments or errors.""" ;
    fno:name "SetSRID" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "SetSRID( geom Geometry , SRID Integer ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:641146d53783459fb71cf0408a6cc634 a fno:Function ;
    dcterms:description "return the total number of Rings (this including both Exterior and Interior Rings)." ;
    fno:name "NRings" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_NRings( geom Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:641e2576fa3042f1a5a4464a1b496616 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix by chaining a further Rotate (along the Z axis) to a previous transformation matrix.

will return NULL on invalid argument.""" ;
    fno:name "ATM_Rotate" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_Rotate( matrix AffineMatrix , angleInDegrees Double precision ] ) : AffineMatrix

ATM_ZRoll( matrix AffineMatrix , angleInDegrees Double precision ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:64768ac18178417d86186608e1075658 a fno:Function ;
    dcterms:description """returns the logarithm of x to the base b
If x is less than or equal to 0, or if b is less than or equal to 1, then NULL is returned

Log(x, b) is equivalent to Log(x) / Log(b)""" ;
    fno:name "Log" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Log( x Double precision , b Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:64b59df58c4746ea999c290b719867e8 a fno:Function ;
    dcterms:description """Will add a new isolated Node; face-id is expected to exactly match the ID of the Face containing point; by passing a NULL face-id the function itself will take care to identify the appropriate Face.

Will return the ID of the inserted Node on success; an exception will be raised on failure.""" ;
    fno:name "AddIsoNode" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_AddIsoNode( toponame Text , face-id Integer , point Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6515cf5181874cdfb1e9104c611e977d a fno:Function ;
    dcterms:description """Will notify a pending EXIT request to SqlProc_Execute(), SqlProc_ExecuteLoop(), StoredProc_Execute() or StoredProc_ExecuteLoop(); the internal execution loop will immediately stop and exit after completing the current SQL statement from the SQL Body.
The current call to SqlProc_Execute(), SqlProc_ExecuteLoop(), StoredProc_Execute() or StoredProc_ExecuteLoop() will then return to its caller the Return Value specified by SqlProc_Return() or StoredProc_Return().
Any SQL Body terminating without explicitly calling SqlProc_Return() or StoredProc_Return() will always behave as if SqlProc_Return(NULL) was implicitly called.

Notes:
These functions are completely effectless outside the specific execution context of SqlProc_Execute(), SqlProc_ExecuteLoop(), StoredProc_Execute() or StoredProc_ExecuteLoop().
SqlProc_Return() and StoredProc_Return() are just alias names.
Will return 1 on success, an exception will be raised on failure.""" ;
    fno:name "SqlProc_Return" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_Return( NULL ) : Integer
StoredProc_Return( NULL ) : Integer

SqlProc_Return( value Integer ) : Integer
StoredProc_Return( value Integer : Integer

SqlProc_Return( value Double ) : Integer
StoredProc_Return( value Double : Integer

SqlProc_Return( value Text ) : Integer
StoredProc_Return( value Text : Integer

SqlProc_Return( value BLOB ) : Integer
StoredProc_Return( value BLOB : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:652af730f5484bf099631ad94f62ff8b a fno:Function ;
    dcterms:description """return a geometric object obtained by applying an Affine Transformation; if the optional arg newSRID is defined then the returned Geometry will assume the corresponding Reference System, otherwise it will preserve the same Reference System of the input Geometry.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_Transform" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_Transform( geom Geometry , matrix AffineMatrix [ , newSRID Integer ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:65405856ef9547a8811951c3664f94bd a fno:Function ;
    dcterms:description "meters / international chains" ;
    fno:name "International Chain" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToCh( x Double precision ) : Double precision

CvtFromCh( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6574fa32ff404162b7d5ed41e2fa1a10 a fno:Function ;
    dcterms:description "Return the x-value of the first coordinate of a Geometry" ;
    fno:name "ST_X" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:658142a60d7b4c75962f29b760abf947 a fno:Function ;
    dcterms:description """returns a new Linestring by replacing the Point at position (zero-based index).
NULL will be returned if any error is encountered.""" ;
    fno:name "SetPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """SetPoint( line LineString , position Integer , point Point ) : Linestring

ST_SetPoint( line LineString , position Integer , point Point ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:65a7d5f994e443699a9bc8d614aef150 a fno:Function ;
    dcterms:description """return a constrained Delaunay triangulation of the vertices of the given polygon(s).

NULL is returned on failure.""" ;
    fno:name "ConstrainedDelaunayTriangulation" ;
    gsrdb:hasRequiredModule "GEOS-3100" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """ConstrainedDelaunayTriangulation( geom Geometry ) : Geometry

ST_ConstrainedDelaunayTriangulation( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:65a987efc2134a548efd08b4fd771f82 a fno:Function ;
    dcterms:description """Returns a MultiPoint Geometry representing any self-intersection found within the input geometry [expected to be of the Linestring or MultiLinestring type].
NULL will be returned for invalid arguments, or when no self-intersections were found.""" ;
    fno:name "SelfIntersections" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """SelfIntersections( geom Geometry ) : Geometry

ST_SelfIntersections( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:65b371e348204860ae4b1902b4ecdbcf a fno:Function ;
    dcterms:description """Updates an already existing Vector Style definition.
style is expected to be an XmlBLOB containing a valid SLD/SE Style of the Vector type.If CreateStylingTables() was invoked without specifying the relaxed option this XmlBLOB is expected to have successfully passed a formal XML Schema Validation.The updated Style will continue to be identified by its current unique Style ID but the Style Name will be automatically updated accordingly to SLD/SE XML.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_ReloadVectorStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_ReloadVectorStyle( style_id Integer , style BLOB ) : Integer

SE_ReloadVectorStyle( style_name Text , style BLOB ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:660d0353e47b46438179423a66f7fcce a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Contain.htm> ;
    fno:name "~" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6616d42b454540129d28a436a6ee26f3 a fno:Function ;
    dcterms:description """any eventual repeated vertex will be ignored or considered accordingly to the seeting of the optional argument ignore_repeated_verticesThe default setting is TRUE (that is, ignore)
returns the length of the shortest segment in the Linestring.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "LinestringMinSegmentLength" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """LinestringMinSegmentLength( line LineString ) : Double precision

LinestringMinSegmentLength( line LineString , boolean ignore_repeated_vertices ) : Double precision

ST_LinestringMinSegmentLength( line LineString ) : Double precision

ST_LinestringMinSegmentLength( line LineString , boolean ignore_repeated_vertices ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:661a80d484a0495a899936aa96a2662f a fno:Function ;
    dcterms:description """returns a (possibly) sanitized Geometry [if a valid Geometry was supplied], or NULL in any other case

Please note: current implementations only affects:
repeated vertices suppression
Ring's closure enforcement""" ;
    fno:name "SanitizeGeometry" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions attempting to repair malformed Geometries" ;
    gsrdb:hasSyntax "SanitizeGeometry( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:66632c7183b34594b4b8763633c8fc39 a fno:Function ;
    dcterms:description """Will attempt to find the ID of a Face intersecting the given Point.
The optional argument tolerance if omitted will assume the corresponding value declared when creating the target Topology.

Will return the ID of the Face on success; an exception will be raised on failure.""" ;
    fno:name "GetFaceByPoint" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """GetFaceByPoint( toponame Text , point Geometry ) : Integer

GetFaceByPoint( toponame Text , point Geometry , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:668c46cd34de4b428a2df2f2e841291d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Accum.htm> ;
    fno:name "ST_Accum" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:669daa5dabc047c5b6597761023f795e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Overleft.htm> ;
    fno:name "&<" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:66ebef7bcb1547ff91f274a13bc9c105 a fno:Function ;
    dcterms:description """Will attempt to import all Geometries from an input GeoTable identified by db-prefix, table-name and column-name into an already existing Topology-Network.
db-prefix can be NULL, and in this case the input GeoTable is expected to be located within the "MAIN" database.
column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the input GeoTable must be properly registered and must match both SRID and dimensions declared by the target Topology.
this function only accepts input Geometries of the Linestring or MultiLinestring classes.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_FromGeoTable" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "TopoNet_FromGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:670a01a163ac46de9ec3914da9073555 a fno:Function ;
    dcterms:description """Will attempt to import all Geometries from an input GeoTable identified by db-prefix, table-name and column-name into an already existing Topology-Geometry, in the same way as TopoGeo_FromGeoTable(). The main difference is how Topology exceptions are handled. For each encountered exception the corresponding Primary Keyb> will be stored into the dustbin-table.
dustbin-table is the name of the table intended to store PK values corresponding to features failing to be imported; this table should not already exist and will be automatically created by the function itself.
dustbin-view is the name of the Spatial View supporting the above table; this view should not already exist and will be automatically created by the function itself.Note: both the dustbin-table and the dustbin-view will be always created on the same DB containing the input GeoTable.
db-prefix can be NULL. In such a case the input GeoTable is expected to be located within the "MAIN" database, otherwise in the given db-prefix database.
column-name too can be NULL. In such a case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or contains more than one, an exception will be raised.Otherwise the given column name in "db-prefix"."column-name" will be used if it exists.
the input GeoTable must be properly registered and must match both the SRID and dimensions declared in the target Topology.
A Primary Key for the input GeoTable is mandatory.
dustbin-table is the name of the table intended to store the PK values corresponding to each feature that failed to be imported; this table must not exist, since it will be created by this function.
dustbin-view is the name of the Spatial View supporting the above table; this view should not already exist and will be automatically created by the function itself.Note: both the dustbin-table and the dustbin-view will be created on the same DB containing the input GeoTable. Use DropGetoTable() for both dustbin-table and dustbin-view before recalling, or even better use different names for each call.
this function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.
The optional arguments line_max_points and line_max_length will be interpreted in the same way as used in TopoGeo_SubdivideLines() (default for both: NULL [ignore]).
The optional argument tolerance, when omitted, will assume the corresponding value used with CreateTopology().
This function will end after the first encountered Topology exception.

Will return 0 on full success or a positive integer corresponding to the total count of failing features referenced by the dustbin table.
An exception will be raised for any invalid argument.""" ;
    fno:name "TopoGeo_FromGeoTableExt" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_FromGeoTableExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text ) : Integer

TopoGeo_FromGeoTableExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text , line_max_points Integer ) : Integer

TopoGeo_FromGeoTableExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text , line_max_points Integer , line_max_length Double precision ) : Integer

TopoGeo_FromGeoTableExt( toponame Text , db-prefix Text , table-name Text , column-name Text , dustbin-table Text , dustbin-view Text , line_max_points Integer , line_max_length Double precision , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:6733495084754783a946fae7a2db0c1c a fno:Function ;
    dcterms:description """computes the Circularity Index from the given Geometry by applying the following formula:
index = ( 4 * PI * Sum(area) ) / ( Sum(perimeter) * Sum(perimeter) )
it only applies to Polygons or MultiPolygons with the following interpretation:
1.0 corresponds to a perfectly circular shape.
very low values (near zero) correspond to a threadlike shape.
intermediate values correspond to a more or less flattened shape; lower index values means a stronger flattening effect.
if the given Geometry does not contains any Polygon but contains at least a Linestring the index will always assume a 0.0 value.
if the given Geometry only contains one or more Points the index will always assume a NULL value.""" ;
    fno:name "Circularity" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Surface [Polygon or Ring]" ;
    gsrdb:hasSyntax "Circularity( s Surface ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6740b0aa79274118bb8e105d921eca23 a fno:Function ;
    dcterms:description """return a point interpolated along a line.
Second argument (between 0.0 and 1.0) representing fraction of total length of linestring the point has to be located.
NULL is returned for invalid arguments""" ;
    fno:name "Line_Interpolate_Point" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Line_Interpolate_Point( line Curve , fraction Double precision ) : Point

ST_Line_Interpolate_Point( line Curve , fraction Double precision ) : Point""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:67aac89906b446b09eb79794b290f28f a fno:Function ;
    dcterms:description """return 1 if the BLOB argument really contains a valid Affine Transformation matrix, 0 if not.

will return -1 on invalid argument.""" ;
    fno:name "ATM_IsValid" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_IsValid( matrix AffineMatrix ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:67bb3d0ab7ad4f1790270b50f617dd4c a fno:Function ;
    dcterms:description """Disables an RTree Spatial Index or MbrCache, removing any related trigger

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "DisableSpatialIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "DisableSpatialIndex( table String , column String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:67f275e96c5d4a40919ada58685ce24f a fno:Function ;
    dcterms:description "Compute the Sky View Factor" ;
    fno:name "ST_SVF" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:67f4006802064915844b354bee709d76 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments.

TRUE if the intersection of g1 and g2 results in a value of the same dimension as g1 and g2 that is different from both g1 and g2""" ;
    fno:name "Overlaps" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Overlaps( geom1 Geometry , geom2 Geometry ) : Integer

ST_Overlaps( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:680e788b70e848feb750d45e933fbce2 a fno:Function ;
    dcterms:description """Creates a Vector Coverage based on an already existing Spatial View.
coverage_name is the symbolic name uniquely identifying each Vector Coverage (Primary Key).
view_name and view_geometry are expected to match the corresponding entries in the views_geometry_columns table.
the optional arguments title and abstract could be eventually be specified for better human readability.
if both optional arguments is_queryable and is_editable are left unspecified the Vector Coverage will then be neither queryable nor editable.
Note: a Spatial View Coverage declared to be editable will not fully support editing operations if the underlying Spatial View is of the read-only type (read-only=1).

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterSpatialViewCoverage" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterSpatialViewCoverage( coverage_name String , view_name String , view_geometry String ) : Integer

SE_RegisterSpatialViewCoverage( coverage_name String , view_name String , view_geometry String , title String , abstract String ) : Integer

SE_RegisterSpatialViewCoverage( coverage_name String , view_name String , view_geometry String , title String , abstract String , is_queryable Boolen , is_editable Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:685b0aa806ba4ef68b5614d397ab2bd0 a fno:Function ;
    dcterms:description "Return a Geometry's boundary" ;
    fno:name "ST_Boundary" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:6874ff480fbd4358b5a19ecc95b63b85 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_BdPolyFromText.htm> ;
    fno:name "ST_BdPolyFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:68ac27e3576c443db99d5d92ce8c9269 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakePoint.htm> ;
    fno:name "ST_MakePoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6923a41275e44670b259402b36266572 a fno:Function ;
    dcterms:description """The return type is Text, this corresponding to the serialized representation of some [DE-9IM] intersection matrix.
The optional argument bnr determines the Boundary Node Rule to be appiled, and has the following interpretation:
1: OGC/MOD2 (this is the default case, and will be always assumed for any unknown value)
2: Endpoint
3: Multivalent Endpoint
4: Monovalent Endpoint
A patternMatrix returned by this function is then expected to be evaluated later by ST_RelateMatch().
The main advantage in using this approach is that this way a comprehensive result (the patternMatrix itself) representing all possible intersection modes between two geometries will be be computed just once by ST_Relate() and could then be more precisely qualified by repeatedly calling ST_RelateMatch(); the first operation is computationally heavy but the second is really fast, so an overall performance boot is usually expected when more than a single intersection mode have to be checked at the same time, as e.g. OVERLAPS OR TOUCHES OR INTERSECTS.

Will return NULL on NULL or invalid geometries.""" ;
    fno:name "" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """non-canonical signature (PostGIS-like)
Relate( geom1 Geometry , geom2 Geometry ) : Text

ST_Relate( geom1 Geometry , geom2 Geometry ) : Text

Relate( geom1 Geometry , geom2 Geometry , bnr Integer ) : Text

ST_Relate( geom1 Geometry , geom2 Geometry , bnr Integer ) : Text""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:692e0c0fd79c4873af125e29ef1582ad a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeoHash.htm> ;
    fno:name "ST_GeoHash" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:69459374715746ba9307687490251806 a fno:Function ;
    dcterms:description """Returns the symbolic name of the Nth Variable declared by the given SQL Procedure object.
The first Variable always corresponds to index=0, and the last one to SqlProc_NumVariables() - 1.

An exception will be raised on failure or invalid arguments.""" ;
    fno:name "SqlProc_VariableN" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_VariableN( object BLOB , index Integer ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:696db6f579db4ae59ee8b55ca318de31 a fno:Function ;
    dcterms:description "Extrude a geometry" ;
    fno:name "ST_Extrude" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:69f81bea73e14c1ca039d98fc71fd326 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_BdMPolyFromText.htm> ;
    fno:name "ST_BdMPolyFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6a2059381014452498c0a7ef2cf8f025 a fno:Function ;
    dcterms:description """This function will create any missing ancillary metadata table required by libspatialite v.5 and subsequent versions.
the optional argument relaxed has the same interpretation as in CreateStylingTables(): if it is explicitly set as TRUE then a relaxed version of the validating Triggers will be installed (not checking for strict XSD schema validation).
if the optional argument transaction is explicitly set as TRUE then the whole operation will be atomically confined within a monolithic SQL transaction
The return type is Integer, with a return value of 1 on success.
An exception will be raised on invalid arguments or on failure.

Note: this SQL function is intended for safely upgrading old databases created by earlier versions; it's absolutely harmless because any existing MetaTable will be left untouched.""" ;
    fno:name "CreateMissingSystemTables" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """CreateMissingSystemTables( void ) : Integer

CreateMissingSystemTables( relaxed Integer ) : Integer

CreateMissingSystemTables( relaxed Integer , transaction Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:6ac439f2810f41079f3fa3dc4b761427 a fno:Function ;
    dcterms:description """returns a MULTIPOINT-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any Geometry containing one or more POINT(s) and no other elementary sub-geometry""" ;
    fno:name "CastToMultiPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToMultiPoint( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:6ae34f2d4c7548d5b60fb24e1a0e555b a fno:Function ;
    dcterms:description "Update the z-values of a Geometry" ;
    fno:name "ST_UpdateZ" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:6b00a182b4654772b14ade30c099a5c0 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments.

TRUE if g1 and g2 are equal""" ;
    fno:name "Equals" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Equals( geom1 Geometry , geom2 Geometry ) : Integer

ST_Equals( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6c36553972124588b89a3ba1b3540313 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsSVG.htm> ;
    fno:name "ST_AsSVG" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6c6972611c4a4b628897ac2348c4393d a fno:Function ;
    dcterms:description """Will return the value of the currently set Quadrant Segments.
NULL on failure.""" ;
    fno:name "BufferOptions_GetQuadrantSegments" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_GetQuadrantSegments( void ) : integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6c990758f85e4b23ad0369b84c01d03b a fno:Function ;
    dcterms:description """return the internal SRID corresponding to auth_name and auth_SRID
-1 will be returned if no such CRS is defined""" ;
    fno:name "SridFromAuthCRS" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax "SridFromAuthCRS( auth_name String , auth_SRID Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:6ca08c8f876d479c8e389999087ac731 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomFromGML.htm> ;
    fno:name "ST_GeomFromGML" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6d240c54fa04447a9c002fa2f1ccdccc a fno:Function ;
    dcterms:description """Adds a geometry column to the specified table:
geometry_type is a normal WKT name:
"GEOMETRY"
"POINT"
"LINESTRING"
"POLYGON"
"MULTIPOINT"
"MULTILINESTRING"
"MULTIPOLYGON"
"GEOMCOLLECTION"
with_z is a flag (0 for no z values, 1 for mandatory z values, 2 for optional z values)
with_m is a flag (0 for no m values, 1 for mandatory m values, 2 for optional m values)

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgAddGeometryColumn" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgAddGeometryColumn( table_name String, geometry_column_name String , geometry_type String , with_z Integer , with_m Integer , srs_id Integer ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:6d375408f383407fb85922b4709553ea a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Translate.htm> ;
    fno:name "ST_Translate" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6d4a66e42b73411498f2aeda949ea76f a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Z.htm> ;
    fno:name "ST_Z" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6d4ea008da6d44baaa99d6e17428893a a fno:Function ;
    dcterms:description """Checks a TEXT string testing if it corresponds to a Decimal Number.
The function returns 1 if TRUE and 0 if FALSE; -1 is returned when the argument is not a Text string.

Examples of valid Decimal Number strings:
'1234.56'
'+5678.09'
'-4321.67'
'-4321.67e12'
'6789.123E+6'
'      +1234.56e-6'""" ;
    fno:name "IsDecimalNumber" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "IsDecimalNumber( value Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6d5adb2a35c24f1e993123b8333182db a fno:Function ;
    dcterms:description """Returns the minimum rotated rectangular POLYGON which encloses the input geometry.
The rectangle has width equal to the minimum diameter, and a longer length.
If the convex hull of the input is degenerate (a line or point) a LINESTRING or POINT is returned.
The minimum rotated rectangle can be used as an extremely generalized representation for the given geometry.
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumRotatedRectangle" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumRotatedRectangle( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:6f17887686684f16b6de10fda286b4d0 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomFromEWKB.htm> ;
    fno:name "ST_GeomFromEWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6f23010e6d934a068e681d64d32ee510 a fno:Function ;
    dcterms:description """Will change the Title on the given Stored Variable.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredVar_UpdateTitle" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredVar_UpdateTitle( name String , title String ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6f395f0fa84f464280835de3e90de0eb a fno:Function ;
    dcterms:description "returns the value of x raised to the power of y" ;
    fno:name """Pow
Power""" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax """Pow( x Double precision , y Double precision ) : Double precision

Power( x Double precision , y Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:6f45dd374e0744e593071d270137809a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_DFullyWithin.htm> ;
    fno:name "ST_DFullyWithin" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:6f897ad7248e4f01ba60b69a6348fc40 a fno:Function ;
    dcterms:description """Will create and populate a GeoTable corresponding to a TopoLayer.
if the optional boolean argument with-spatial-index is set to TRUE (any other value different from zero) then a Spatial Index supporting the output GeoTable will be automatically created (FALSE by default).
if the optional boolean argument create-only is set to TRUE (any other value different from zero) then the output GeoTable will be created but will not be populated thus remaining completely empty (FALSE by default).

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_ExportTopoLayer" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_ExportTopoLayer( toponame Text , topolayer-name Text , out-table Text ) : Integer

TopoGeo_ExportTopoLayer( toponame Text , topolayer-name Text , out-table Text , with-spatial-index Boolean ) : Integer

TopoGeo_ExportTopoLayer( toponame Text , topolayer-name Text , out-table Text , with-spatial-index Boolean , create-only Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:6fc9c8290a9140b8812e55d3584460ca a fno:Function ;
    dcterms:description "Returns the 2-dimensional longest  LINESTRING between the points of two geometries" ;
    fno:name "ST_LongestLine" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:6fdec08831404c18b0766b5b9f43fbdb a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Left.htm> ;
    fno:name "<<" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:701453d97e834d70a35530b44af5ef17 a fno:Function ;
    dcterms:description """Completely removes a Topo-Geo (and all data it contains) from the DBMS: to be invoked very cautiously and only if you are absolutely sure of what you are doing.

Will return 1 on success) or 0 on failure: -1 will be returned on invalid arguments.""" ;
    fno:name "DropTopology" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "DropTopology( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:7057e0ea2b4448d385d212c33e85a9e7 a fno:Function ;
    dcterms:description """returns the population variance of the input values (square of the population standard deviation)
aggregate function""" ;
    fno:name "Var_pop" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Var_pop( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:70a5fa709ca04ae4bf4cd0bd4b0ba729 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOSONLYREENTRANT" ;
    fno:name "HasGeosOnlyReentrant" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeosOnlyReentrant( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7111a8f7f06648eeab7d2eec2475dee0 a fno:Function ;
    dcterms:description "construct a Linestring" ;
    fno:name """LineFromText
LineStringFromText""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """LineFromText( wktLineString String [ , SRID Integer] ) : Linestring

ST_LineFromText( wktLineString String [ , SRID Integer] ) : Linestring

LineStringFromText( wktLineString String [ , SRID Integer] ) : Linestring

ST_LineStringFromText( wktLineString String [ , SRID Integer] ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:71161ae491ee4d69b858a4f1841bd953 a fno:Function ;
    dcterms:description """returns a new Geometry [if a valid Geometry was supplied], or NULL in any other case.

Any Linestring or Ring will be in reverse order (first vertex will be the last one, and last vertex will be the first one).""" ;
    fno:name "Reverse" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_Reverse( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:71482e855a9a4737a073178bcba74d23 a fno:Function ;
    dcterms:description "Return true if Geometry A equals Geometry B" ;
    fno:name "ST_Equals" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:715380bfe3ea4a37a3063b4f1f9fab0e a fno:Function ;
    dcterms:description "Geometry to Google map link" ;
    fno:name "ST_GoogleMapLink" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:717766f0366443419ac6b98679656c79 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_RotateZ.htm> ;
    fno:name "ST_RotateZ" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7179f8258f0e421f8ab73b4614a0dfd2 a fno:Function ;
    dcterms:description """Checks if geom has the Z dimension.
The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and -1 for UNKNOWN when called with invalid arguments.""" ;
    fno:name "Is3D" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_Is3D( geom Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:718f9252d5e444869dd16c75c1f2ee4e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ConvexHull.htm> ;
    fno:name "ST_ConvexHull" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:71c7ea73e59a4f2baf0792f64a4353ff a fno:Function ;
    dcterms:description "Compute the symmetric difference between two Geometries" ;
    fno:name "ST_SymDifference" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:728fd9d29a0a4d4fbf369b9aa9602e9b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Point.htm> ;
    fno:name "ST_Point" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7302a4e2d202463d838a9597fbd74a27 a fno:Function ;
    dcterms:description """Will create a new out_table directly corresponding to in_table. The output table will be arranged in such a way that each row will always contain an elementary Geometry; so each time that a MULTI-type Geometry is found in the input table it will be split into many distinct rows.
out_pk is the name to be set for the output Primary Key, and out_multi_id is the name to be set for a second column within the output table where to store the a zero-based index from which Geometry the Element-Geometry comes from, that together with the original Primary Key can be identified.Note: both out_pk and out_multi_id must not exist in the given in_table table.
The optional argument transaction determines if an internal SQL Transaction should be automatically started or not (the default setting if not explicitly overridden is TRUE).
Optional arguments: a maximum of 10 further options could be eventually be specified. Valid options are:
::ignore::column_nameNote: the geom-column will never be ignored, even if explicitly requested to be.
::cast2multi::Will automatically apply a CastToMulti ( geom_column ) directive.
All references to mismatching options or not existing columns will be silently discarded.

Will return the total number of rows inserted into the output table.
NULL will be returned on invalid arguments.""" ;
    fno:name "ElementaryGeometries" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ElementaryGeometries( in_table Text , geom_column Text , out_table Text , out_pk Text , out_multi_id Text ) : Integer

ElementaryGeometries( in_table Text , geom_column Text , out_table Text , out_pk Text , out_multi_id Text , transaction Boolean ) : Integer

ElementaryGeometries( in_table Text , geom_column Text , out_table Text , out_pk Text , out_multi_id Text , transaction Boolean , option_1 Text [ , ... , option_10 Text ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:730b843aa6f949948fa9a25ae15396c2 a fno:Function ;
    dcterms:description """returns TRUE (1) if all Polygons into the Geometry are oriented accordingly to Clockwise Rule (all Exterior Ring must be clockwise oriented, and all Interior Rings must be counter-clockwise oriented).
returns FALSE (0) if not; returns -1 on invalid Geometries.

Note: a Geometry containing no Polygons will always return TRUE.""" ;
    fno:name "IsPolygonCW" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_IsPolygonCW( geom Geometry ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:736140656d3a4c179041e34ceecf0343 a fno:Function ;
    dcterms:description """Return a Linestring being a substring of the input one starting and ending at the given fractions of total 2d length.
Second and third arguments are expected to be in the range between 0.0 and 1.0.
NULL is returned for invalid arguments""" ;
    fno:name "Line_Substring" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Line_Substring( line Curve , start_fraction Double precision , end_fraction Double precision ) : Curve

ST_Line_Substring( line Curve , start_fraction Double precision , end_fraction Double precision ) : Curve""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:739e4c254f8d4980be20d80a2d48afbf a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Line_Interpolate_Point.htm> ;
    fno:name "ST_Line_Interpolate_Point" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7430443dcdc44172ace0b4905d49ced0 a fno:Function ;
    dcterms:description """returns a Geometry using the [XYZ] space dimension.
If the input Geometry already supports Z coordinates they'll be preserved as they are.
If the input Geometry does not support Z coordinates they'll be set to no_data (defaulting to 0.0 if no_data is not specified).""" ;
    fno:name "CastToXYZ" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Space-dimensions casting functions" ;
    gsrdb:hasSyntax """CastToXYZ( geom Geometry ) : geom Geometry

CastToXYZ( geom Geometry , no_data Double ) : geom Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:74628fad351c485da4f04c3a8d7f1212 a fno:Function ;
    dcterms:description "this is a special flavor of ST_Transform(); just X, Y and Z coordinates will be transformed, M values (if eventually present) will be left untouched. Mainly intended as a workaround possibily useful when handling 4D geometries having M-values not corresponding to Time." ;
    fno:name "TransformXYZ" ;
    gsrdb:hasRequiredModule "PROJ" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """TransformXYZ( geom Geometry , newSRID Integer ) : Geometry

ST_TransformXYZ( geom Geometry , newSRID Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:746e1c1c1c384e80afc62e9dad16e265 a fno:Function ;
    dcterms:description """Will clone an existing Topology into another; the destionation Topology shall not exist and will be automatically created.
db-prefix may be NULL, and in this case the input Topology will be searched within the "MAIN" database. The input Topology can be freely located within anyone of the currently attached databases.
the output Topology will be always created within the "MAIN" database.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_Clone" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_Clone( db-prefix Text , toponame Text , new-toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:748ef02cd8314543a4eb935763125786 a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a LINESTRING or MULTILINESTRING) will be returned.
The first input Geometry is expected to be a LINESTRING or MULTILINESTRING (Lines); the second input Geometry is expected to be a POINT or MULTIPOINT (Nodes).
any Line will then be possibly split in two halves where some vertex exactly intercepts a Node.

NULL will be returned if any error is encountered""" ;
    fno:name "LinesCutAtNodes" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """LinesCutAtNodes( geom1 Geometry , geom2 Geometry ) : Geometry

ST_LinesCutAtNodes( geom1 Geometry , geom2 Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:749b34d68ac64502895804148c65b384 a fno:Function ;
    dcterms:description "Return the minimum bounding circle of a Geometry" ;
    fno:name "ST_BoundingCircle" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:74cc08ca66334a148756fb7cf186d27b a fno:Function ;
    dcterms:description "construct a Polygon" ;
    fno:name """PolyFromText
PolygonFromText""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """PolyFromText( wktPolygon String [ , SRID Integer] ) : Polygon

ST_PolyFromText( wktPolygon String [ , SRID Integer] ) : Polygon

PolygonFromText( wktPolygon String [ , SRID Integer] ) : Polygon

ST_PolygonFromText( wktPolygon String [ , SRID Integer] ) : Polygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7521c9b732bb4451a2f76337c3150a10 a fno:Function ;
    dcterms:description "return the number of interiorRings" ;
    fno:name """NumInteriorRing
NumInteriorRings""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Polygon" ;
    gsrdb:hasSyntax """NumInteriorRing( polyg Polygon ) : Integer

NumInteriorRings( polyg Polygon ) : Integer

ST_NumInteriorRing( polyg Polygon ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:755743495e2e420ca83a970da57adcf5 a fno:Function ;
    dcterms:description """return TRUE (1) if the distance between geom1 and geom2 is within the given range.
Usually distances are expressed in the length unit corresponding to the geoms own SRID: but if both geoms are simple POINTs and their SRID is 4326 (i.e. WGS84), then distances are expressed in meters.
In this later case the optional arg use_spheroid can be used to select the distance algorithm to be used: is use_spheroid = 1 the slowest but most accurate geodesic distance will be evaluated: in any other case the simplest great circle distance will be used instead""" ;
    fno:name "PtDistWithin" ;
    gsrdb:hasRequiredModule "PROJ" ;
    gsrdb:hasScope "SQL functions for distance relationships" ;
    gsrdb:hasSyntax "PtDistWithin( geom1 Geometry , geom2 Geometry, range Double precision [, use_spheroid Integer ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:75927cc040734bfa9d75ba105f2c25b3 a fno:Function ;
    dcterms:description "Geometry's coordinates to  MULTIPOINT" ;
    fno:name "ST_ToMultiPoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:75f34650922e4d81ac280ddbfab82f3e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeogFromText.htm> ;
    fno:name "ST_GeogFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" .

gsrdb:7606752c4a42433688ec21937cfe1b55 a fno:Function ;
    dcterms:description "Return the number of Geometries in a  GEOMETRYCOLLECTION" ;
    fno:name "ST_NumGeometries" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:76bf7785286f4a2eb3912bc4cd762b2a a fno:Function ;
    dcterms:description """returns a new Geometry [if a valid Geometry was supplied], or NULL in any other case.

All Polygons will be oriented accordingly to Counter-Clockwise Rule (all Exterior Ring will be counter-clockwise oriented, and all Interior Rings will be clockwise oriented).""" ;
    fno:name "ForcePolygonCCW" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_ForcePolygonCCW( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:76d76b8f6fdf43ab811929eec0a25367 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix representing a Rotate transformation (along the X axis).

will return NULL on invalid argument.""" ;
    fno:name "ATM_CreateXRoll" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_CreateXRoll( angleInDegrees Double precision ] ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:76d8b436425e422f9e078f5bdb84173f a fno:Function ;
    dcterms:description """A strict derivative of CloneTable() accepting the same arguments with identical meaning.
The only difference is in that this second variant will only create the output Table definition, without any data being copied.

Will return 0 (i.e. FALSE) on failure, any other value (i.e. TRUE) on success. NULL will be returned on invalid arguments.""" ;
    fno:name "CreateClonedTable" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """CreateClonedTable( db-prefix Text , input_table Text , output_table Text , transaction Integer ) : Integer

CreateClonedTable( db-prefix Text , input_table Text , output_table Text , transaction Integer , option_1 Text [ , ... , option_10 Text ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:77e5ac5d54aa4509b849b57791a7a00c a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakePolygon.htm> ;
    fno:name "ST_MakePolygon" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:77f0239def2a47a6b4e0410841ffdf2a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Intersects.htm> ;
    fno:name "ST_Intersects" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:78031f6359b54b38a0dd77a802d0c5e6 a fno:Function ;
    dcterms:description "Return the exterior ring of a  POLYGON" ;
    fno:name "ST_ExteriorRing" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:788e8fdfda794badbac3cdd02ae24618 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Distance_Spheroid.htm> ;
    fno:name "ST_Distance_Spheroid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7893dbd1a7b54849b7460e860ac37b4e a fno:Function ;
    dcterms:description "return the nth (1-based) geometric object in the collection. The order of the elements in the collection is not geometrically significant." ;
    fno:name "GeometryN" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type GeomCollection" ;
    gsrdb:hasSyntax """GeometryN( geom GeomCollection , n Integer ) : Geometry

ST_GeometryN( geom GeomCollection , n Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:78b5954f08834a78a09a82b64ae1ef70 a fno:Function ;
    dcterms:description """This function will convert a SpatiaLite geometry blob into a GeoPackage format geometry blob.

Will return NULL if any error is encountered""" ;
    fno:name "AsGPB" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "AsGPB( geom BLOB encoded geometry ) : GPKG Blob Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:79028807e232432bbfcd9dd7c3a16ae1 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_IsEmpty.htm> ;
    fno:name "ST_IsEmpty" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7908e00d2ef947fb8a8585b7395a7dc1 a fno:Function ;
    dcterms:description """return the length of c

Starting since v.4.0.0 this function will simply consider Linestrings and MultiLinestrings, ignoring any Polygon or MultiPolygon""" ;
    fno:name "Length" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """GLength( c Curve ) : Double precision
OpenGis name for this function is Length(), but it conflicts with an SQLite reserved keyword

ST_Length( c Curve ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:793824ec8a6d453584e154e4032d2cd5 a fno:Function ;
    dcterms:description """Will return the size in bytes of the corresponding uncompressed XmlDocument.

NULL will be returned for any invalid input (not a valid XmlBLOB object).""" ;
    fno:name "XB_GetDocumentSize" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetDocumentSize( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:79a0598dbc1d49dcb1a4dfdb1a59cb34 a fno:Function ;
    dcterms:description """return the distance between geom1 and geom2 (measured in meters).
If the use_ellipsoid argument is set to TRUE the precise (but slower) distance will be computed on the Ellipsoid, otherwise will be computed on the Great Circle (approximative, but faster).

This function only supports Long/Lat coordinates, and will return NULL for any planar CRS""" ;
    fno:name "" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for distance relationships" ;
    gsrdb:hasSyntax """Distance( geom1 Geometry , geom2 Geometry , use_ellipsoid Boolean ) : Double precision

ST_Distance( geom1 Geometry , geom2 Geometry , use_ellipsoid Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:79ad9e70b83c4a8d928d187181243658 a fno:Function ;
    dcterms:description """returns the population standard deviation of the input values
aggregate function""" ;
    fno:name "Stddev_pop" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Stddev_pop( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:79e1489e1d06480e9bc5c1518e7e4aa7 a fno:Function ;
    dcterms:description """returns a text string containing no repeated whitespaces (SPACE or TAB characters).
Will return NULL for invalid input.""" ;
    fno:name "RemoveExtraSpaces" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "RemoveExtraSpaces( TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:79f14f8da8944b87b9c098c270636d31 a fno:Function ;
    dcterms:description "Merges a collection of linear components to form maximal-length  LINESTRING" ;
    fno:name "ST_LineMerge" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:79ff41313a5540bab9e8aa0ecfd97e4c a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MemUnion.htm> ;
    fno:name "ST_MemUnion" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7a28249c25fe4cf991733daa5b5166d0 a fno:Function ;
    dcterms:description """This function will create a GeoPackage geometry POINT Z.

Raises a SQL exception on error""" ;
    fno:name "gpkgMakePointZ" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """gpkgMakePointZ (x Double precision , y Double precision , z Double precision ) : GPKG Blob Geometry

gpkgMakePointZ (x Double precision , y Double precision , z Double precision , srid Integer ) : GPKG Blob Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7a4579c82f1e431a8ae43881b5e090a4 a fno:Function ;
    dcterms:description "Return the minimum z-value of a Geometry" ;
    fno:name "ST_ZMin" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:7ab27c7eb42d4905ac3c59015a9003e8 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Summary.htm> ;
    fno:name "ST_Summary" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7b39c0d1e25a4efdae2addcea876fd42 a fno:Function ;
    dcterms:description """Will update all persistent Edge- and Face-Seeds so to correctly represent the current state of the underlying Topology.
if the optional argument incremental-mode is set to TRUE an incremental update (faster) will be applied, otherwise all persistent Seeds will be rebuilt from scratch (slower).

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_UpdateSeeds" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_UpdateSeeds( toponame Text ) : Integer

TopoGeo_UpdateSeeds( toponame Text , incremental-mode Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7bfe1ad68ea64afb80cd07b77f6b87dc a fno:Function ;
    dcterms:description "Return the azimuth of the segment from point A to point B" ;
    fno:name "ST_Azimuth" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:7c16f1d4939e495191acb7588c90f427 a fno:Function ;
    dcterms:description """Construct an XmlBLOB object starting from an XmlDocument.
If compressed is set to TRUE the XmlBlob object will be compressed (default setting).
If schemaURI is specified then the XmlDocument will be validated against the given Schema (default setting is skipping any XML validation).
If internalSchemaURI is set (any value), then the XmlDocument will be validated againt the Schema URI internally defined within the XmlDocument itself (if any).

NULL will be returned for not well-formed XmlDocuments, or when XML validation is required but XmlDocument fails to pass validation for any reason.""" ;
    fno:name "XB_Create" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax """XB_Create( xmlPayload BLOB ) : XmlBLOB

XB_Create( xmlPayload BLOB , compressed Boolean ) : XmlBLOB

XB_Create( xmlPayload BLOB , compressed Boolean , schemaURI Text ) : XmlBLOB

XB_Create( xmlPayload BLOB , compressed Boolean , internalSchemaURI Boolean ) : XmlBLOB""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7c248bc508c840b8b32604ad46291d05 a fno:Function ;
    dcterms:description """returns the area of the segment/arc between the Chord and Arc, created by geom1 and geom2, inside the outer circle / earth surface.
Since the Radius is in meters, only meter values can be returned.

will return NULL on invalid arguments, or if PROJ GEODESIC is not supported.""" ;
    fno:name "GeodesicArcArea" ;
    gsrdb:hasRequiredModule "PROJ GEODESIC" ;
    gsrdb:hasScope "SQL functions supporting Geodesic Arcs" ;
    gsrdb:hasSyntax "GeodesicArcArea( geom1 Geometry , geom2 Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7c2bd2a7d41e466cafeb0b6566c231a0 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_IsValid.htm> ;
    fno:name "ST_IsValid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7c73965550d44fd0b82a43f2f7d9a91d a fno:Function ;
    dcterms:description "Compute the intersection of two Geometries" ;
    fno:name "ST_Intersection" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:7c9a0d75c553494aa44c99b45464ff10 a fno:Function ;
    dcterms:description """returns a MULTIPOINT-, MULTILINESTRING- or MULTIPOLYGON-type Geometry [if type-conversion is possible], or NULL in any other case

a MULTIPOINT will be returned for a Geometry containing one or more POINT(s) and no other elementary sub-geometry
a MULTILINESTRING will be returned for a Geometry containing one or more LINESTRING(s) and no other elementary sub-geometry
a MULTIPOLYGON will be returned for a Geometry containing one or more POLYGON(s) and no other elementary sub-geometry
a GEOMETRYCOLLECTION will be returned for any other valid Geometry""" ;
    fno:name "CastToMulti" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax """CastToMulti( geom Geometry ) : geom Geometry

ST_Multi( geom Geometry ) : geom Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7ca9a6079ce54ce2baf7c4bfef641ed4 a fno:Function ;
    dcterms:description "Return true if Geometry A crosses Geometry B" ;
    fno:name "ST_Crosses" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:7cb6987afb644eb193997ed0b918669b a fno:Function ;
    dcterms:description """Will attempt to split all Edges into a collection of shorter Edges fully respecting Topology consistency.
The interpretation of line_max_points and line_max_lenght arguments is the same adopted by TopoGeo_SubdivideLines()
Edges and Nodes will be handled by implicitly calling ST_NewEdgesSplit()

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_NewEdgesSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_NewEdgesSplit( toponame Text , line_max_points Integer ) : Integer

TopoGeo_NewEdgesSplit( toponame Text , line_max_points Integer , line_max_length Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:7ccf148c1dae432cb13ba56f61df59c8 a fno:Function ;
    dcterms:description """Creates the geometry_columns and spatial_ref_sys metadata tables
the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE

Please note: Spatial Metadata created using this function will have the FDO/OGR layout, and not the standard SpatiaLite layout""" ;
    fno:name "InitFDOSpatialMetaData" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax "InitFDOSpatialMetaData( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7cd7d0cc48a6462fbbf11487cde09768 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NumInteriorRing.htm> ;
    fno:name "ST_NumInteriorRing" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7cdfc90cbbe14d4caa66ec116d73ed8b a fno:Function ;
    dcterms:description "meters / international nautical miles" ;
    fno:name "International Nautical Mile" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToKmi( x Double precision ) : Double precision

CvtFromKmi( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7ce09ea6944842c5ab1a15c2bf83caa5 a fno:Function ;
    dcterms:description "returns the absolute value of x" ;
    fno:name "Abs" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Abs( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7d2c165bb91e4d53b712adbfd8fed38d a fno:Function ;
    dcterms:description """Creates the vector_coverages and vector_coverages_srid tables required by RasterLite-2

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure)""" ;
    fno:name "CreateVectorCoveragesTables" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CreateVectorCoveragesTables( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7d34e5ba63924bd3b2a4b6abacc72717 a fno:Function ;
    dcterms:description """returns the Arc length (distance) between geom1 and geom2 as the surface measurement of the outer circle arc / earth surface.
if meters = 0 the result will be in degrees, otherwise meters [default].

will return NULL on invalid arguments, or if PROJ GEODESIC is not supported.""" ;
    fno:name "GeodesicArcLength" ;
    gsrdb:hasRequiredModule "PROJ GEODESIC" ;
    gsrdb:hasScope "SQL functions supporting Geodesic Arcs" ;
    gsrdb:hasSyntax """GeodesicArcLength( geom1 Geometry , geom2 Geometry ) : Double precision

GeodesicArcLength( geom1 Geometry , geom2 Geometry , meters Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7d84329a32714176a3cd8a4714dbfa72 a fno:Function ;
    dcterms:description """Attempts to insert into spatial_ref_sys the EPSG definition uniquely identified by srid
[the corresponding EPSG SRID definition will be copied from the inlined dataset defined in libspatialite]

the return type is Integer, with a return value of 1 for success or 0 for failure""" ;
    fno:name "InsertEpsgSrid" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "InsertEpsgSrid( srid Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7d9bc63047e04b6c87fdff6968fadb99 a fno:Function ;
    dcterms:description """Will delete a Stored Procedure.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredProc_Delete" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredProc_Delete( name String ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7e4938fa9c754ba596fd5106a88d3b81 a fno:Function ;
    dcterms:description """Will return the name of the currently set EndCap Style.
NULL on failure.""" ;
    fno:name "BufferOptions_GetEndCapStyle" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_GetEndCapStyle( void ) : string" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7e88a5f09f504b4ea24ce965d705a94c a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_InteriorRingN.htm> ;
    fno:name "ST_InteriorRingN" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7eb262ab3be0445baa0cd9b71333ef61 a fno:Function ;
    dcterms:description """returns the intput value possibly casted to the Text data-type; NULL if no conversion is possible.
If an optional argument zero_pad is passed and the input value is of the Integer or Double type, then the returned string will be padded using as many trailing ZEROs needed to ensure the required length.""" ;
    fno:name "CastToText" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax """CastToText( value Generic ) : Text

CastToText( value Generic , zero_pad Integer ) : Text""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7ec69050bf744f8c9e641ab80a827a56 a fno:Function ;
    dcterms:description "Will make all subsequent calls to Pause() to be effectless no-ops." ;
    fno:name "DisablePause" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "DisablePause( void ) : NULL" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7f158a46a61743eaa4664997631dd5c2 a fno:Function ;
    dcterms:description """Adds an alternative SRID to an already defined Raster Coverage.
coverage_name must identify an existing Raster Coverage.
srid is expected to match the corresponding entries in the spatial_ref_sys table.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterRasterCoverageSrid" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_RegisterRasterCoverageSrid( coverage_name String , srid Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7f433c7ca9b84eb09865284019e3bb6a a fno:Function ;
    dcterms:description """Will add a new Edge connecting two Nodes. If this new Edge splits a Face the original Face will be deleted and replaced by two new Faces.

Will return the ID of the inserted Edge on success; an exception will be raised on failure.""" ;
    fno:name "AddEdgeNewFaces" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_AddEdgeNewFaces( toponame Text , startnode-id Integer , endnode-id Integer , linestring Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:7f56dde27a4c4c6bb548a2fb1531dd94 a fno:Function ;
    dcterms:description """This function will create a GeoPackage geometry POINT.

Raises a SQL exception on error""" ;
    fno:name "gpkgMakePoint" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """gpkgMakePoint (x Double precision , y Double precision ) : GPKG Blob Geometry

gpkgMakePoint (x Double precision , y Double precision , srid Integer ) : GPKG Blob Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7fa96944c14e47088e32c6edf64a0e80 a fno:Function ;
    dcterms:description """returns the height of the segment/arc (short-Sagitta) between the Chord and Arc, created by geom1 and geom2, inside the outer circle / earth surface.
Since the Radius is in meters, only meter values can be returned.

will return NULL on invalid arguments, or if PROJ GEODESIC is not supported.""" ;
    fno:name "GeodesicArcHeight" ;
    gsrdb:hasRequiredModule "PROJ GEODESIC" ;
    gsrdb:hasScope "SQL functions supporting Geodesic Arcs" ;
    gsrdb:hasSyntax "GeodesicArcHeight( geom1 Geometry , geom2 Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7fb82bdec20f4815999599d3e8fbc21a a fno:Function ;
    dcterms:description """Checks if some table was created by specifying a WITHOUT ROWID clause.

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE
NULL will be returned if the requested table doesn't exist.""" ;
    fno:name "CheckWithoutRowid" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CheckWithoutRowid( table String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7fcbb3d0fca548d88232183500d5eeb0 a fno:Function ;
    dcterms:description """returns the length of the shortest line (distance) between geom1 and geom2 through the outer circle / earth surface.
if meters = 0 the result will be in degrees, otherwise meters [default].

will return NULL on invalid arguments, or if PROJ GEODESIC is not supported.""" ;
    fno:name "GeodesicChordLength" ;
    gsrdb:hasRequiredModule "PROJ GEODESIC" ;
    gsrdb:hasScope "SQL functions supporting Geodesic Arcs" ;
    gsrdb:hasSyntax """GeodesicChordLength( geom1 Geometry , geom2 Geometry ) : Double precision

GeodesicChordLength( geom1 Geometry , geom2 Geometry , meters Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:7fd9fbd6304d49c19823f547f878c392 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ShortestLine.htm> ;
    fno:name "ST_ShortestLine" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:7fdb949b9c4f43cfa64b6b818421ab92 a fno:Function ;
    dcterms:description "meters / U.S. inches" ;
    fno:name "U.S. Inch" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToUsIn( x Double precision ) : Double precision

CvtFromUsIn( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:801de9f6784444ce8dd1ac31c6e4919c a fno:Function ;
    dcterms:description """returns the sample variance of the input values (square of the sample standard deviation)
aggregate function""" ;
    fno:name "Var_samp" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Var_samp( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:80558a1094114ba38c49dc78ae864472 a fno:Function ;
    dcterms:description """This function will return the normal integer row number for the specified table, normal zoom level and inverted row number.
Note that this function can also be used to convert from a normal row number to an inverted row number - this conversion is symmetric.

Raises a SQL exception if no zoom level row record in tile_matrix_metadata""" ;
    fno:name "gpkgGetNormalRow" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgGetNormalRow( tile_table_name String , normal_zoom_level Integer , inverted_row_number Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:80bae059911044f6bfd99404003d3033 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeographyFromText.htm> ;
    fno:name "ST_GeographyFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" .

gsrdb:80eb178297744f41b094f507e89871cb a fno:Function ;
    dcterms:description "Return true if the Geometry is valid" ;
    fno:name "ST_IsValid" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:80f92e1f28834c82af4414dc08fe4d82 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Length3D.htm> ;
    fno:name "ST_Length3D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:81222003caee4504a34cdf058513b609 a fno:Function ;
    dcterms:description """returns the average length of segments in the Linestring.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "LinestringAvgSegmentLength" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """LinestringAvgSegmentLength( line LineString ) : Double precision

ST_LinestringAvgSegmentLength( line LineString ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8161c2c4145b4d86acfaa3e1a2b9903b a fno:Function ;
    dcterms:description """Will return a Variable with Value string from a Stored Variable. NULL will be returned if the Stored Variable does not exists.

An exception will be raised on invalid arguments.""" ;
    fno:name "StoredVar_Get" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredVar_Get( name String ) : BLOB" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:81db779a3adf472bad904a9bf2aa957f a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_DumpPoints.htm> ;
    fno:name "ST_DumpPoints" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:81e10fa7a1ec4f1184838307c9f30660 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ForceRHR.htm> ;
    fno:name "ST_ForceRHR" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:821447b0033b404ab7ae00b33d85736b a fno:Function ;
    dcterms:description "Returns  TRUE if Geometry A equals Geometry B and their coordinates and component Geometries are listed in the same order" ;
    fno:name "ST_OrderingEquals" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:824b2a0d7b824ff9aaf54b0576921b0d a fno:Function ;
    dcterms:description "return the number of individual Geometries" ;
    fno:name "NumGeometries" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type GeomCollection" ;
    gsrdb:hasSyntax """NumGeometries( geom GeomCollection ) : Integer

ST_NumGeometries( geom GeomCollection ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:827f891c455c45d7960ddffb1436366e a fno:Function ;
    dcterms:description "Return true if Geometry A touches Geometry B" ;
    fno:name "ST_Touches" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:829fb7c2c45146fda65a2db5a8b5294d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_EndPoint.htm> ;
    fno:name "ST_EndPoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:82fe74d1784a42cfb1041318f9f05593 a fno:Function ;
    dcterms:description """A new uncompressed XmlBLOB object will be returned.
If the input XmlBLOB is already uncompressed this one is a harmless no-op.

NULL will be returned for any invalid input (not a valid XmlBLOB object).""" ;
    fno:name "XB_Uncompress" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_Uncompress( xmlObject XmlBLOB ) : XmlBLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8368277b99204325a69c1793c22a80d7 a fno:Function ;
    dcterms:description """return a new Geometry collecting all items resulting by splitting the input Geometry by the blade.
NULL is returned on failure.""" ;
    fno:name "Split" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """Split( geom Geometry, blade Geometry ) : Geometry

ST_Split( geom Geometry , blade Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:83be4f5cbbb649b78817445dbe925270 a fno:Function ;
    dcterms:description """a Linestring Geometry will be returned connecting all the input Points (accordingly to input sequence); direction=FALSE implies reverse order.
Please note: similar to the previuous one, but this one is an ordinary (not aggregate) function; a MultiPoint input is always expected.

NULL will be returned if any error is encountered""" ;
    fno:name "MakeLine" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeLine( geom MultiPointGeometry , direction Boolean ) : LinestringGeometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:83ea1ca2a08443b79a3cd43ca1f1541a a fno:Function ;
    dcterms:description "Return the minimum bounding box of a  GEOMETRYCOLLECTION" ;
    fno:name "ST_Extent" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:83eadc432856428cab42abd2606a8b16 a fno:Function ;
    dcterms:description "return the y-coordinate of Point p as a double precision number" ;
    fno:name "Y" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Point" ;
    gsrdb:hasSyntax """Y( pt Point ) : Double precision

ST_Y( pt Point ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:842d406179d54a4fb0efab9ac8bfa306 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LineCrossingDirection.htm> ;
    fno:name "ST_LineCrossingDirection" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:84b47ce86d614acfa7d44749e5717ea3 a fno:Function ;
    dcterms:description """Construct a MultiPolygon given an arbitrary collection of closed linestrings as a MultiLineString text representation.

see also: BuildArea(), Polygonize()""" ;
    fno:name "BdMPolyFromText" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """BdMPolyFromText( wktMultilinestring String [ , SRID Integer] ) : MultiPolygon

ST_BdMPolyFromText( wktMultilinestring String [ , SRID Integer] ) : MultiPolygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:84ff3bf338d34620bb3b23a145818d12 a fno:Function ;
    dcterms:description "returns the sine of x, where x is given in radians" ;
    fno:name "Sin" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Sin( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:85772317663141b9bc0359ad300f052e a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOSADVANCED" ;
    fno:name "HasGeosAdvanced" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeosAdvanced( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:857d8e72e21647d7a959900192b263af a fno:Function ;
    dcterms:description """Inspects an UTF-8 encoded text_string testing if it only contains ASCII 7-bit characters.
The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and -1 for UNKNOWN when called with invalid arguments.""" ;
    fno:name "IsLowASCII" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "IsLowASCII( text_string String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:85a0d26264c8453688544c976a1d7f31 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument.

return TRUE if c is a ring, i.e., if c is closed and simple. A simple Curve does not pass through the same Point more than once.""" ;
    fno:name "IsRing" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """IsRing( c Curve ) : Integer

ST_IsRing( c Curve ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:86553f97cc954b7993018bd875b232b0 a fno:Function ;
    dcterms:description "Project a  POINT on a  (MULTI)LINESTRING" ;
    fno:name "ST_ProjectPoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:86facdf1a7e14813862fb2a3eb1ae185 a fno:Function ;
    dcterms:description """will return a closed LINESTRING approximating the Circle defined by cx, cy and radius.
The optional argument step if specified defines how many points will be interpolated on the circumference; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeCircle" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeCircle( cx Double precision , cy Double precision , radius Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:873cf5be5b9042fd879f1f32dea28693 a fno:Function ;
    dcterms:description """same as the above Function, but in this case areas and perimeters will be measured in meters.
If the use_ellipsoid argument is set to TRUE the precise (but slower) values will be computed on the Ellipsoid, otherwise they'll be computed on the Sphere (approximative, but faster).

This function only supports Long/Lat coordinates, and will return NULL for any planar CRS""" ;
    fno:name "" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions on type Surface [Polygon or Ring]" ;
    gsrdb:hasSyntax "Circularity( s Surface , use_ellipsoid Boolean ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:87421016688846eb8b24f7f2dbb9ce0b a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling RTTOPO" ;
    fno:name "HasRtTopo" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasRtTopo( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:875c8636754d412cb43f3959391526c0 a fno:Function ;
    dcterms:description "returns the tangent of x, where x is given in radians" ;
    fno:name "Tan" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Tan( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:879930599ba34856bb7a2849de62c14e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakeBox3D.htm> ;
    fno:name "ST_MakeBox3D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:879b40d6d91e4496a71b1e44869a0ea8 a fno:Function ;
    dcterms:description """Will import an external Shapfile into an internal Table:
Mandatory arguments:
filename absolute or relative path leading to the Shapefile (omitting any .shp, .shx or .dbf suffix).
table name of the table to be created.
charset the character encoding adopted by the DBF member, as e.g. UTF-8 or CP1252
Optional arguments:
srid EPSG SRID value; -1 by default.
geom_column name to assigned to the Geometry column; Geometry by default (it can legitimately be NULL).
pk_column name of a DBF column to be used in the Primary Key role; an INTEGER AUTOINCREMENT PK will be created by default (it can legitimately be NULL).
geometry_type one between: AUTO, POINT|Z|M|ZM, LINESTRING|Z|M|ZM, POLYGON|Z|M|ZM, MULTIPOINT|Z|M|ZM, LINESTRING|Z|M|ZM, MULTIPOLYGON|Z|M|ZM; by default AUTO (it can legitimately be NULL).
coerce2D boolean flag: casting to 2D or not; 0 by default.
compressed boolean flag; compressed geometries or not; 0 by default.
spatial_index boolean flag: immediately building a Spatial Index or not; 0 by default.
text_dates boolean flag: interpreting DBF dates as plaintext or not: 0 by default (i.e. as Julian Day).
colname_case one between:
LOWER or LOWERCASE: all column names will be converted to lowercase (default option).
UPPER or UPPERCASE: all column names will be converted to uppercase.
SAME or SAMECASE: all column names will be left as they are.
update_statistics boolean flag: immediately updating Layer Statistics or not; 1 by default.
verbose boolean flag: verbose console output: 1 by default, you can explicitly pass 0 if you better whish a silent output.

Will return the total number of imported rows.
NULL will be returned on invalid arguments or on any other error condition.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportSHP" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportSHP( filename Text , table Text , charset Text ) : Integer

ImportSHP( filename Text , table Text , charset Text [ , srid Integer [ , geom_column Text [ , pk_column Text [ , geometry_type Text [ , coerce2D Integer [ , compressed Integer [ , spatial_index Integer [ , text_dates Integer [ , colname_case Text [ , update_statistics Integer [ , verbose Integer ] ] ] ] ] ] ] ] ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:87aa0b475461433c91f66849e6d29143 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsValid" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsValid( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:87c3f3d357284766a8d69c7e109a0ec1 a fno:Function ;
    dcterms:description """Given any arbitrary GEOMETRY will return a derived MULTIPOINT geometry. Sub-geometries not being of the POINT type will be ignored.
NULL will be returned if any error is encountered (or when no POINT is found).""" ;
    fno:name "ExtractMultiPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax "ExtractMultiPoint( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:87ea0e7245ac48ffb235512cc02bccf3 a fno:Function ;
    dcterms:description """returns the Directory Name from a relative or absolute Pathname.
Will return NULL for invalid input of for any simple path lacking a Directory.""" ;
    fno:name "DirNameFromPath" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "DirNameFromPath( TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:87f3e6379b664ece9feed3c0772460e5 a fno:Function ;
    dcterms:description """Will remove an isolated Node.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "RemIsoNode" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_RemIsoNode( toponame Text , node-id Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8805158c7be24f71a3d4343c0a6762c2 a fno:Function ;
    dcterms:description "returns the argument x, converted from radians to degrees" ;
    fno:name "Degrees" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Degrees( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:88518c2631e748c1b54a93c9c12aefe7 a fno:Function ;
    dcterms:description "return a geometric object representing a simplified version of c applying the Douglas-Peuker algorithm with given tolerance" ;
    fno:name "Simplify" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """Simplify( c Curve , tolerance Double precision ) : Curve

ST_Simplify( c Curve , tolerance Double precision ) : Curve

ST_Generalize( c Curve , tolerance Double precision ) : Curve""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:88f13cf2d912407ba080b00b07e57622 a fno:Function ;
    dcterms:description """Inserts all Graphic Standard Brushes supported by RasterLite2 (if not already inserted).
Will be automatically invoked by CreateStylingTables().""" ;
    fno:name "SE_AutoRegisterStandardBrushes" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_AutoRegisterStandardBrushes( ) : NULL" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:892096bbe9f7472e9785f4996cf2bb7f a fno:Function ;
    dcterms:description "Return a  MULTIPOINT containing points along the line segments of a Geometry at a given segment length fraction and offset distance" ;
    fno:name "ST_LocateAlong" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:893200bd2a0649eaa48c207c96a1ccaf a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling Topology (RTTOPO) support" ;
    fno:name "HasTopology" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasTopology( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:894568b75620432a8b0ac619ebff8f5e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Force_3D.htm> ;
    fno:name "ST_Force_3D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:89a75b83ed344d389f14d6fa3c2cce66 a fno:Function ;
    dcterms:description "Return a Geometry with a interpolation of z values." ;
    fno:name "ST_Interpolate3DLine" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:89c0a5e88ef54878b445ca1fdb673f25 a fno:Function ;
    dcterms:description """return the z-coordinate of Point p as a double precision number
or NULL is no z-coordinate is available""" ;
    fno:name "Z" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Point" ;
    gsrdb:hasSyntax """Z( pt Point ) : Double precision

ST_Z( pt Point ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:89df4929fc264401b5976a6a484b8b89 a fno:Function ;
    dcterms:description """Updates an already existing Raster Style definition.
style is expected to be an XmlBLOB containing a valid SLD/SE Style of the Raster type.If CreateStylingTables() was invoked without specifying the relaxed option this XmlBLOB is expected to have successfully passed a formal XML Schema Validation.The updated Style will continue to be identified by its current unique Style ID but the Style Name will be automatically updated accordingly to SLD/SE XML.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_ReloadRasterStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_ReloadRasterStyle( style_id Integer , style BLOB ) : Integer

SE_ReloadRasterStyle( style_name Text , style BLOB ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:89edfbbf361141bebdb8495b45ba3e00 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix by chaining a further Rotate (along the Y axis) to a previous transformation matrix.

will return NULL on invalid argument.""" ;
    fno:name "ATM_YRoll" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_YRoll( matrix AffineMatrix , angleInDegrees Double precision ] ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8a1069a4aa2b445286d9ea66af3bd7e3 a fno:Function ;
    dcterms:description """Will return a Point Geometry uniquely identifying a Link (i.e. spatially intersecting the Link).

Will return a Point on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_GetLinkSeed" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "TopoNet_GetLinkSeed( netname Text , link-id Integer ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:8a17955155fd444dab1aa28388dc448f a fno:Function ;
    dcterms:description """returns the angle from the circle center to the geom1 and geom2 on the outer circle / earth surface.
if radians = 0 the result will be in degrees, otherwise radians [default].

will return NULL on invalid arguments, or if PROJ GEODESIC is not supported.""" ;
    fno:name "GeodesicCentralAngle" ;
    gsrdb:hasRequiredModule "PROJ GEODESIC" ;
    gsrdb:hasScope "SQL functions supporting Geodesic Arcs" ;
    gsrdb:hasSyntax """GeodesicCentralAngle( geom1 Geometry , geom2 Geometry ) : Double precision

GeodesicCentralAngle( geom1 Geometry , geom2 Geometry , radians Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8a5999ac062b4072b1410ec1f724fc99 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsBinary.htm> ;
    fno:name "ST_AsBinary" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8a6d31b4a3b44a73888fe1bb76315422 a fno:Function ;
    dcterms:description """Will create a Logical Topology-Network from an existing Topology-Geometry.
The destination TopoNet is expected to exist and to be completely empty.

Will return 1 on success; an exception will be raised on failure.
Calling this function on behalf of some Network of the Spatial type will raise an exception.""" ;
    fno:name "LogiNetFromTGeo" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_LogiNetFromTGeo( netname Text , toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8a89237fd1764e24ab728e7498cd9800 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsCompressed" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsCompressed( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8a8ec07466714acdba35a1b34ab51e90 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsValidXPathExpression" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsValidXPathExpression( expr Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8a9307947e2c43cfb82cbe19db742565 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_SymDifference.htm> ;
    fno:name "ST_SymDifference" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8a978ae63b2c4cc0bebca5cc7f9bbbee a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Below.htm> ;
    fno:name "<<|" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8af19ba295604128a5eac05aa1d42247 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_SnapToGrid.htm> ;
    fno:name "ST_SnapToGrid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8b23db62595c4f2fb16ace4997891d7a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_PointOnSurface.htm> ;
    fno:name "ST_PointOnSurface" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8b6b9ab549e24365a97915d5d6efd115 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeometryFromText.htm> ;
    fno:name "ST_GeometryFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8ba9e08c3a164c8f974911f81a0a21c0 a fno:Function ;
    dcterms:description "Disables the TinyPoint BLOB encoding; all Point-Geometries will then be created applying the classic BLOB-Geometry encoding." ;
    fno:name "DisableTinyPoint" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "DisableTinyPoint( void ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8bbfa1744f104faa946827a6b8f93ece a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsGML.htm> ;
    fno:name "ST_AsGML" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8bcccafd150d42168beb6d3abbabc602 a fno:Function ;
    dcterms:description "GML to Geometry" ;
    fno:name "ST_GeomFromGML" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:8c0454453b0a4dd4a9c480d0ab85da29 a fno:Function ;
    dcterms:description "returns the SVG [Scalable Vector Graphics] representation" ;
    fno:name "AsSVG" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "AsSVG( geom Geometry [ , relative Integer [ , precision Integer ] ] ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8c53802cc4284399b53f334dae5a9f39 a fno:Function ;
    dcterms:description """Updates the Extent boundary supporting a Vector Coverage, this including any eventually defined alternative SRID.
if the optional coverage_name argument is set then only that single Vector Coverage will be updated; otherwise all registered Vector Coverages will be processed in a single pass (may require a long time).
if the optional transaction argument is set to TRUE then the whole operation will be internally handled as a single SQL Transaction.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UpdateVectorCoverageExtent" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_UpdateVectorCoverageExtent() : Integer

SE_UpdateVectorCoverageExtent( transaction Integer ) : Integer

SE_UpdateVectorCoverageExtent( coverage_name String ) : Integer

SE_UpdateVectorCoverageExtent( coverage_name String , transaction Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8c6286da7f854f65b519f110002a7b90 a fno:Function ;
    dcterms:description "Compute the difference between two geometries" ;
    fno:name "ST_Difference" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:8cb0764a450e4b9ea6887c619751e396 a fno:Function ;
    dcterms:description """Removes an association between a Raster Style and a Raster Styled Layer.
coverage_name must identify an existing Raster Layer.
An already associated Style can be referenced either by its unique Stile ID or by its Name; anyway a reference by Name could eventually fail if the Name is ambiguous (duplicate).

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterRasterStyledLayer" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_UnregisterRasterStyledLayer( coverage_name String , style_id Integer ) : Integer

SE_UnregisterRasterStyledLayer( coverage_name String , style_name Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8d41ebf2a6664b73810c749150a90703 a fno:Function ;
    dcterms:description """Checks an RTree Spatial Index for validity and consistency
if no arguments are passed, then any RTree defined into geometry_columns will be checked
otherwise only the RTree corresponding to table and column will be checked

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE
NULL will be returned if the requested RTree doesn't exist

-1 will be returned if any physical column named "rowid" (caseless) shadowing the real ROWID is detected.""" ;
    fno:name "CheckSpatialIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """CheckSpatialIndex( void ) : Integer

CheckSpatialIndex( table String , column String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8d44f12a0b6a42fcbe4c139f03e761b9 a fno:Function ;
    dcterms:description """Immediately and unconditionally invalidates the internal Layer Statistics
if no arguments are passed, then internal statistics will be invalidated for any possible Geometry Column defined in the current DB
otherwise statistics will be updated only for Geometry Columns corresponding to the given table

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE

Please note: will effectively work only on behalf DB-files supporting the more recent metatables layout introduced starting since version 4.x; in any other case will always return an error and no action will happen.""" ;
    fno:name "InvalidateLayerStatistics" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """InvalidateLayerStatistics( [ void ) : Integer

InvalidateLayerStatistics( table String [ , column String ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8d560ee6891242b4923d0e317c3f86c6 a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a LINESTRING or MULTILINESTRING) will be returned.
The input Geometry is expected to be a POLYGON or MULTIPOLYGON; any RING will then be transformed into the corresponding LINESTRING.

NULL will be returned if any error is encountered""" ;
    fno:name "LinesFromRings" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """LinesFromRings( geom Geometry ) : Geometry

ST_LinesFromRings( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8d5a40363c7f46e1b80b14dacd455ec3 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix representing a Rotate transformation (along the Z axis).

will return NULL on invalid argument.""" ;
    fno:name "ATM_CreateRotate" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_CreateRotate( angleInDegrees Double precision ] ) : AffineMatrix

ATM_CreateZRoll( angleInDegrees Double precision ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8d6c4297e370412f96b3f4512f569f8e a fno:Function ;
    dcterms:description "Construct an array of Geometries" ;
    fno:name "ST_Accum" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:8db07055f5c74ff98c4822ea078eb2e6 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_PointFromWKB.htm> ;
    fno:name "ST_PointFromWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8e0ee53f6e334515bd300122d9c2d1b3 a fno:Function ;
    dcterms:description """Will split a Link (of the Logical type) by creating a new intermediate NetNode. The original Link will be modified and a new Link will be inserted.

Will return the ID of the inserted Node on success; an exception will be raised on failure.""" ;
    fno:name "ModLogLinkSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_ModLogLingSplit( netname Text , link-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8e3d9b241a6c476fb2c973d85aab95e3 a fno:Function ;
    dcterms:description "Disables the Geopackage mode" ;
    fno:name "DisableGpkgMode" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "DisableGpkgMode( void ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8e7266e219b041b7a907f8190b04eec4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_IsSimple.htm> ;
    fno:name "ST_IsSimple" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8e92828f368c4c9c9edc4c33d7c7e2e4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Azimuth.htm> ;
    fno:name "ST_Azimuth" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8ea724b2bf7a421abe1a6afb7bad1eec a fno:Function ;
    dcterms:description """Will remove a Link.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "RemoveLink" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_RemoveLink( netname Text , link-id Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8ebe6994891f461fbab933e58cb2ddb8 a fno:Function ;
    dcterms:description """(Re)Creates all Triggers supporting the vector_coverages table required by RasterLite-2

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure)""" ;
    fno:name "ReCreateVectorCoveragesTriggers" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "ReCreateVectorCoveragesTriggers( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:8f35e58dbde948bfa8d6caeddee56e03 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Perimeter3D.htm> ;
    fno:name "ST_Perimeter3D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8f77283cbb2d4fd993473031d6ef8276 a fno:Function ;
    dcterms:description """Registers a WMS server.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_RegisterGetCapabilities" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_RegisterGetCapabilities( url Text ) : Integer

WMS_RegisterGetCapabilities( url Text , title Text , abstract Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8fad7b2059d542ba87f75d10cb39ddf0 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Expand.htm> ;
    fno:name "ST_Expand" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:8faebaa92dbb4348bf6b80c92b1ae6ad a fno:Function ;
    dcterms:description "construct a MultiLinestring" ;
    fno:name """MLineFromWKB
MultiLineStringFromWKB""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """MLineFromWKB( wkbMultiLineString Binary [ , SRID Integer] ) : MultiLinestring

ST_MLineFromWKB( wkbMultiLineString Binary [ , SRID Integer] ) : MultiLinestring

MultiLineStringFromWKB( wkbMultiLineString Binary [ , SRID Integer] ) : MultiLinestring

ST_MultiLineStringFromWKB( wkbMultiLineString Binary [ , SRID Integer] ) : MultiLinestring""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8fb2e3436cbf45c7ae7e475d4c3cd38a a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOS3110" ;
    fno:name "HasGeos3110" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeos3110( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:8fb4941b33704278920c1c054d76c2db a fno:Function ;
    dcterms:description "Construct an array of Geometries" ;
    fno:name "ST_Collect" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:90fc8cfc796b492b97cdb11877dca4d5 a fno:Function ;
    dcterms:description "Return an interior or boundary point of a Geometry" ;
    fno:name "ST_PointOnSurface" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9115311419a2452dbcbea8f8ed6d4aa2 a fno:Function ;
    dcterms:description """returns the base-10 logarithm of x

Log10(x) is equivalent to Log(x) / Log(10)""" ;
    fno:name "Log10" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Log10( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9122bf3bbce84a9d97bc7ea53849113f a fno:Function ;
    dcterms:description "Filter a Geometry with its dimension" ;
    fno:name "ST_CollectionExtract" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:91bdccb54a124a2e8d97a1d0fe538794 a fno:Function ;
    dcterms:description """Will change the currently set pathname leading to the private PROJ's SQLite database.

NULL will be returned if the passed path is invalid, otherwise the path of the currently set private PROJ's SQLite database will be returned.
Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).""" ;
    fno:name "PROJ_SetDatabasePath" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax "PROJ_SetDatabasePath( new_path String ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:91daae7a4fa542c5b3f5936165030877 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_WKTToSQL.htm> ;
    fno:name "ST_WKTToSQL" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:91df88d749b64ddf8ec7ad6cb16186ea a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if the BLOB argument is a valid BLOB-Geometry.""" ;
    fno:name "IsGeometryBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsGeometryBlob( content BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:920ca70e29644c8fb2e3e72213481f51 a fno:Function ;
    dcterms:description """Validates an existing ordinary column in order to possibly transform it in a real geometry column, thus updating the Spatial Metadata tables and creating any required trigger in order to enforce constraints

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "RecoverGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "RecoverGeometryColumn( table String , column String , srid Integer , geom_type String [ , dimension Integer ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:921dc5e4be6e4b2299bae21a4ff2c2c4 a fno:Function ;
    dcterms:description """Will set the current Mitre Limit value.
Returns TRUE on success, FALSE on failure.""" ;
    fno:name "BufferOptions_SetMitreLimit" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_SetMitreLimit( limit Double ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:923db2cb01b64644b3fbb092bb69f3c4 a fno:Function ;
    dcterms:description "returns the sign of the argument as -1, 0, or 1, depending on whether x is negative, zero, or positive." ;
    fno:name "Sign" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Sign( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:92574e57db434d6b92824b65626976fa a fno:Function ;
    dcterms:description "Returns a geometry as an X3D XML formatted node element." ;
    fno:name "AsX3D" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """AsX3D( geom Geometry ) : String
AsX3D( geom Geometry , precision Integer ) : String
AsX3D( geom Geometry , precision Integer , options Integer ) : String
AsX3D( geom Geometry , precision Integer , options Integer , refid String ) : String

ST_AsX3D( geom Geometry ) : String
ST_AsX3D( geom Geometry , precision Integer ) : String
ST_AsX3D( geom Geometry , precision Integer , options Integer ) : String
ST_AsX3D( geom Geometry , precision Integer , options Integer , refid String ) : String""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:92b576371a1d4bf7a23c57d3c0381180 a fno:Function ;
    dcterms:description """This function will return the normal integer zoom level for data stored in the specified table.
Note that this function can also be used to convert from a normal zoom level to an inverted zoom level - this conversion is symmetric.

Raises a SQL exception if inverted zoom level is outside the range of tile_matrix_metadata table normal zoom levels defined for the tile_table""" ;
    fno:name "gpkgGetNormalZoom" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgGetNormalZoom( tile_table_name String , inverted_zoom_level Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:92c3d9bd00784f46b428601316677a58 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_X.htm> ;
    fno:name "ST_X" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:92c4aba90a4844338ccdf0fedbe2dc3e a fno:Function ;
    dcterms:description """If filepath-or-URL corresponds to some valid local pathname, and the corresponding file (expected to contain a well-formed XML Document) can be actually accessed in read mode, then the whole file content will be returned as a BLOB value.
This function is even able to acces a remote XML Document identified by an URL.
Otherwise NULL will be returned.
Please note: SQLite doesn't support BLOB values bigger than SQLITE_MAX_LENGTH (usually, 1 GB).

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.
Please see: CountUnsafeTriggers()""" ;
    fno:name "XB_LoadXML" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_LoadXML( filepath-or-URL String ) : BLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:92ce360ac46340faa2e2a8a70a19c4c9 a fno:Function ;
    dcterms:description "Return a Geometry's holes" ;
    fno:name "ST_Holes" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:930ae99ff1a24677bdebc5317b65ee45 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments.

TRUE if g1 MBR is completely contained in g2 MBR""" ;
    fno:name "MbrWithin" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrWithin( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9363895c62dc43ac8cc1a001d7edb5d8 a fno:Function ;
    dcterms:description """Ensures that all Edges on a Topology-Geometry will have not less than three vertices.
all Edges found already definining three or more vertices will be left untouched as they are.
all Edges found simply being a two-points segment will be changed by interpolating a third intermediate vertex.
this function is harmless (doesn't substantially alters the Topology in any way) and ensures that all Seeds will certainly be not ambiguous.
Will return the total number of changed Edges on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_DisambiguateSegmentEdges" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_DisambiguateSegmentEdges( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9396961f934f429ba7461bc1da0d5da7 a fno:Function ;
    dcterms:description """Will import an external DXF file.
filename absolute or relative path leading to the DXF file.
srid EPSG SRID value; -1 by default.
append boolean flag: enabling or not append mode: 0 by default.
dimensions one between AUTO, 2D or 3D.
mode one between DISTINCT or MIXED.
special_rings one between NONE, LINKED or UNLINKED.
table_prefix: a prefix for table names; NULL if no prefix is required.
layer_name: name of a single DXF layer to be imported: NULL will import all layers found.
Will return 0 (i.e. FALSE) on failure, any other value (i.e. TRUE) on success.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportDXF" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportDXF( filename String ) : Integer

ImportDXF( filename String [ , srid Integer, append Integer, dimensions Text, mode Text , special_rings Text , table_prefix Text , layer_name Text ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:93cb570cef9b4b729127ec5e3dd1cb42 a fno:Function ;
    dcterms:description "Return the dimension of the coordinates of a Geometry" ;
    fno:name "ST_CoordDim" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:940a5399fcb64c0284f1143a292fc632 a fno:Function ;
    dcterms:description "return a Point containing Point n of line (first Point corresponds to n=1)" ;
    fno:name "PointN" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """PointN( line LineString , n Integer ) : Point

ST_PointN( line LineString , n Integer ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9419601c95f44e13906337f1596c475e a fno:Function ;
    dcterms:description """Explicitly sets the number of decimal digits (precision) to be displayed by ST_AsText() for coordinate values: the standard default setting is 6 decimal digits.
Passing any negative precision will automatically restore the initial default setting.
The spatialite_gui tool will honor this setting for all floating point values to be displayed on the screen.""" ;
    fno:name "SetDecimalPrecision" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "SetDecimalPrecision( integer ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:942cec48ea48480d958ad0aed4bc91d7 a fno:Function ;
    dcterms:description """return the x-coordinate for geom MBR's leftmost side as a double precision number.

NULL will be returned if geom isn't a valid Geometry.""" ;
    fno:name "MbrMinX" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """MbrMinX( geom Geometry) : Double precision

ST_MinX( geom Geometry) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:945e1b3e66a74bdd9c31b41a3adb6ad9 a fno:Function ;
    dcterms:description "Well Known Text to Geometry" ;
    fno:name "ST_GeomFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:948a0dd59e0a4ea896ff2c7af41be43b a fno:Function ;
    dcterms:description "return a geometric object representing a simplified version of c applying the Douglas-Peuker algorithm with given tolerance and respecting topology" ;
    fno:name "SimplifyPreserveTopology" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """SimplifyPreserveTopology( c Curve , tolerance Double precision ) : Curve

ST_SimplifyPreserveTopology( c Curve , tolerance Double precision ) : Curve""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:94abefe35c784f4585fdbaf3010ec5a7 a fno:Function ;
    dcterms:description "Return a copy of a Geometry with a new SRID" ;
    fno:name "ST_SetSRID" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:94b882abd6f84fa6be5e6d2285ba9d5a a fno:Function ;
    dcterms:description """Will return a Geometry detail (usually a POINT) causing invalidity.
If the ESRI_flag argument is set to 1 (TRUE), then all ESRI-like internal holes (violating the standard OGC model) will be considered valid.

NULL will be returned on invalid arguments, or in the case of a valid Geometry.""" ;
    fno:name "IsValidDetail" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """IsValidDetail( geom Geometry [ , esri_flag Boolean ]) : Geometry

ST_IsValidDetail( geom Geometry [ , esri_flag Boolean ]) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:951352b745374942aa414ff2eb46c0de a fno:Function ;
    dcterms:description """This function will indifferently accept on input:
a SpatiaLite own BLOB Geometry
a GPKG own BLOB Geometry
then returning a SpatiaLite own BLOB geometry.

Will return NULL if any error is encountered or on invalid / mismatching argument""" ;
    fno:name "CastAutomagic" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "CastAutomagic( geom Blob ) : BLOB encoded geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9599e991e9af43b1beb832df240a16a6 a fno:Function ;
    dcterms:description "returns the argument x, converted from degrees to radians" ;
    fno:name "Radians" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Radians( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:95cd21905a13425a9ca15f98b1001c05 a fno:Function ;
    dcterms:description """Return the unique id corresponding to the ISO Metadata definition identified by fileIdentifier.

If no corresponding ISO Metadata definition exists, this function will always return ZERO; -1 will be returned for invalid arguments.""" ;
    fno:name "GetIsoMetadataId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting ISO Metadata" ;
    gsrdb:hasSyntax "GetIsoMetadataId( fileIdentifier String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:964ffc86086b455b96fe97643e9e46d7 a fno:Function ;
    dcterms:description "Return 1 if a Geometry has at least one z-coordinate; 0 otherwise" ;
    fno:name "ST_Is3D" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:9695a7890045447aba8f39faf2c0714f a fno:Function ;
    dcterms:description "Retrieves from an MbrCache any entity whose MBR contains the rectangle identified by extreme points x1 y1 and x2 y2" ;
    fno:name "FilterMbrContains" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for MbrCache-based queries" ;
    gsrdb:hasSyntax "FilterMbrContains( x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision )" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:96b70baaf2b5441aa21213be5fe6f838 a fno:Function ;
    dcterms:description """advances to the next value of the Sequence, which is then returned.
Will return NULL if any error occurred.""" ;
    fno:name "sequence_nextval" ;
    gsrdb:hasScope "SQL functions manipulating Sequences" ;
    gsrdb:hasSyntax "sequence_nextval ( seq_name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:96b8f444388a454da91ad450c020958f a fno:Function ;
    dcterms:description """The return type is Text, and could be one of: image/gif, image/png, image/jpeg, image/jp2, image/tiff, image/svg+xml, application/xml, application/zip, application/pdf.
NULL will be returned when called with a NULL or non-BLOB argument, or if no valid mime-type is detected.""" ;
    fno:name "GetMimeType" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "GetMimeType( payload BLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:96f78aa811614dd5aa37bb9b33dc1b88 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Length2D.htm> ;
    fno:name "ST_Length2D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:973ba12a26c141b8a03c8d1eb5971207 a fno:Function ;
    dcterms:description """This function will create a GeoPackage geometry POINT ZM.

Raises a SQL exception on error""" ;
    fno:name "gpkgMakePointZM" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """gpkgMakePointZM (x Double precision , y Double precision , z Double precision , m Double precision ) : GPKG Blob Geometry

gpkgMakePointZM (x Double precision , y Double precision , z Double precision , m Double precision , srid Integer ) : GPKG Blob Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9829c7b6d4ee4889894e071cce88d10b a fno:Function ;
    dcterms:description "Return the minimum y-value of a Geometry" ;
    fno:name "ST_YMin" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9843d94e55a144299d2cd665d87f10b3 a fno:Function ;
    dcterms:description """Will return the value of the currently set Mitre Limit.
NULL on failure.""" ;
    fno:name "BufferOptions_GetMitreLimit" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_GetMitreLimit( void ) : double" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:98c50924675b4f0ebf931074316e2d26 a fno:Function ;
    dcterms:description """Will remove from the given Topology all unnecessary Nodes.
An unnecessary Node is one connected to exactly two Edges whilst both Edges share the same two Faces; it's obvious that such a Node could be safely removed giving birth to a single Edge without altering in any way the Topological self-consistency.
All unnecessary Nodes identified by this function will be removed by implicitly calling ST_ModEdgeHeal()

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_ModEdgeHeal" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_ModEdgeHeal( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:991e2b6df6b44089a2443384020c9d6c a fno:Function ;
    dcterms:description "Return the type of a Geometry" ;
    fno:name "ST_GeometryType" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:992c5e1bc76d44dd99ae1f548edf73d5 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsSldStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsSldStyle( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9964e5ba9f7e453eabc166c6aaf50cd0 a fno:Function ;
    dcterms:description "Well Known Text to  LINESTRING" ;
    fno:name "ST_LineFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9a00817cd32b4aa784a56ad84a2725b2 a fno:Function ;
    dcterms:description """Updates the Visibility Scale Range associated to a Vector Coverage.
coverage_name must identify an existing Vector Coverage.
minScaleDenominator and maxScaleDenominator set the upper and lower visibility limits.The one or the other (or both) can legitimately be set to NULL, thus meaning that the corresponding limit is intentionally left unassigned.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_SetVectorCoverageVisibilityRange" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_SetVectorCoverageVisibilityRange( coverage_name String , minScaleDenominator Double , maxScaleDenominator Double ): Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9a313b8effba464abb9d6d0587f798a3 a fno:Function ;
    dcterms:description """Will add a new isolated Edge connecting two isolated Nodes.

Will return the ID of the inserted Edge on success; an exception will be raised on failure.""" ;
    fno:name "AddIsoEdge" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_AddIsoEdge( toponame Text , startnode-id Integer , endnode-id Integer , linestring Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9a6592bed97e439babc7d59849e72de1 a fno:Function ;
    dcterms:description "Return true if Geometry A is within Geometry B" ;
    fno:name "ST_Within" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9ab03246a59c42a98370b8af683cf218 a fno:Function ;
    dcterms:description """Sets or updates configurable options for the WMS Layer identified by getmap_url and layer_name.
Please check WMS_RegisterGetMap for more informations about supported options.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_SetGetMapOptions" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_SetGetMapOptions( getmap_url Text , layer_name Text , transparent Boolean , flip_axes Boolean )

WMS_SetGetMapOptions( getmap_url Text , layer_name Text , is_tiled Boolean , cached Boolean , tile_width Integer , tile_height Integer) : Integer

WMS_SetGetMapOptions( getmap_url Text , layer_name Text , is_queryable Boolean , getfeatureinfo_url Text ) : Integer

WMS_SetGetMapOptions( getmap_url Text , layer_name Text , bgcolor Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9ad5c247a76f4dcd9ab9a88a2baa61fc a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsEWKT.htm> ;
    fno:name "ST_AsEWKT" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:9ae87109a18e4f4bab81b969bfebcb6f a fno:Function ;
    dcterms:description """This function will inspect the Spatial Metadata, then automatically destroying any VirtualFDO wrapper found

the return type is Integer [how many VirtualFDO tables have been destroyed]

the return type is Integer [how many VirtualFDO tables have been created]

The optional db_prefix argument specifies which one of the ATTACHED databases is intended to be targeted; if unspecified or NULL then the MAIN database will be assumed by default.""" ;
    fno:name "AutoFDOStop" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax """AutoFDOStop( void ) : Integer

AutoFDOStop( db_prefix String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9b19db676137424daa0b6b6a51059212 a fno:Function ;
    dcterms:description "Return the first coordinate of a  LINESTRING" ;
    fno:name "ST_StartPoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9b35ae8e000c4e198520f48803ff60f6 a fno:Function ;
    dcterms:description "this is a special flavor of ST_Transform(); just X and Y coordinates will be transformed, Z and M values (if eventually present) will be left untouched. Mainly intended as a workaround for (possibly) imprecise +towsg84 PROJ definitions; should never be used as a ST_Transform() replacement without a very careful evaluation." ;
    fno:name "TransformXY" ;
    gsrdb:hasRequiredModule "PROJ" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """TransformXY( geom Geometry , newSRID Integer ) : Geometry

ST_TransformXY( geom Geometry , newSRID Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9b3675c670544b24a7d26b5a24b0c8b3 a fno:Function ;
    dcterms:description """return the m-coordinate of Point p as a double precision number
or NULL is no m-coordinate is available""" ;
    fno:name "M" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Point" ;
    gsrdb:hasSyntax """M( pt Point ) : Double precision

ST_M( pt Point ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9b7dbbcfbb0c4cb2b0eb05c708d948cc a fno:Function ;
    dcterms:description "Return text stating if a geometry is valid or not and if not valid a reason why" ;
    fno:name "ST_IsValidReason" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9b8c822a9e594fa0a4abda9107a9f045 a fno:Function ;
    dcterms:description """Updates the internal Layer Statistics [Feature Count and Total Extent]
if no arguments are passed, then internal statistics will be updated for any possible Geometry Column defined in the current DB
otherwise statistics will be updated only for Geometry Columns corresponding to the given table
When called from inside a GeoPackage Database, the gpkg_contents entry will be updated with the extent information.

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "UpdateLayerStatistics" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """UpdateLayerStatistics( void ) : Integer

UpdateLayerStatistics( table String [ , column String ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9bba85b4faf649e0a0a5f7f4ed846ebe a fno:Function ;
    dcterms:description """return a new Geometry collecting all items resulting by splitting the input Geometry by the blade and falling on the left side.
All items not affected by the split operation (i.e. not intersecting the blade) will be returned into the left collection.
NULL is returned on failure.""" ;
    fno:name "SplitLeft" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """SplitLeft( geom Geometry, blade Geometry ) : Geometry

ST_SplitLeft( geom Geometry , blade Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9bbee2f1be384e1584315cbcd39d737e a fno:Function ;
    dcterms:description """Registers a permanent Stored Variable:
name is expected to uniquely identify a Variable Name.
title is expected to specify a short description of the Stored Variable intended scopes.
value can be any data-type and will be automatically converted to its correspondined textual representation.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredVar_Register" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """StoredVar_Register( name String , title String , value NULL ) : Boolean

StoredVar_Register( name String , title String , value Integer ) : Boolean

StoredVar_Register( name String , title String , value Double ) : Boolean

StoredVar_Register( name String , title String , value Text ) : Boolean

StoredVar_Register( name String , title String , value BLOB ) : Boolean""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9c050ab7804746e5b68bafeb01e19317 a fno:Function ;
    dcterms:description """Will split a Link (of the Logical type) by creating a new intermediate NetNode. The original Link will be deleted and will be replaced by two new Links.

Will return the ID of the inserted Node on success; an exception will be raised on failure.""" ;
    fno:name "NewLogLinkSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_NewLogLinkSplit( netname Text , link-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9c15233f4ef84480b4c9708496529e60 a fno:Function ;
    dcterms:description "Rotate a Geometry counter-clockwise by an angle (in radians) about a point" ;
    fno:name "ST_Rotate" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9c27765b45c8491ab7189a8c3ef610eb a fno:Function ;
    dcterms:description """Will completely remove an existing TopoLayer.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_RemoveTopoLayer" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_RemoveTopoLayer( toponame Text , topolayer-name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:9c5914ddfaea4ed4afbd171e28f44392 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Covers.htm> ;
    fno:name "ST_Covers" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeography "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:9c68a67eeaf64063a479708acfeda395 a fno:Function ;
    dcterms:description """returns a new Linestring by replacing its EndPoint.
NULL will be returned if any error is encountered.""" ;
    fno:name "SetEndPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """SetEndPoint( line LineString , point Point ) : Linestring

ST_SetEndPoint( line LineString , point Point ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9c8c12c4713f4ba1930eaa62327b4790 a fno:Function ;
    dcterms:description """This SQL function is explicitly required by ISO 13249-3, anyway it's simply implemented as an alias-name for CreateTopology ( toponame ).

Will return 1 on success) or 0 on failure: -1 will be returned on invalid arguments.""" ;
    fno:name "InitTopoGeo" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_InitTopoGeo( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9c91dd96c7914155a6140df90ccd8d49 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NDims.htm> ;
    fno:name "ST_NDims" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:9cf88f65411a43f8a86bb2d3c1cfcc8d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Touches.htm> ;
    fno:name "ST_Touches" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:9decd8262eb142f7afb2bf683e0a90df a fno:Function ;
    dcterms:description "Return true if no point in Geometry B is outside Geometry A" ;
    fno:name "ST_Covers" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9dfe308a7667490899fdae9d74ff5c3f a fno:Function ;
    dcterms:description """returns the Well-known Text representation

always return strictly conformant 2D WKT""" ;
    fno:name "AsWKT" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for obtaining the Well-known Text / Well-known Binary Representation of a geometric object" ;
    gsrdb:hasSyntax "AsWKT( geom Geometry [ , precision Integer ] ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9e0fc9b469ab44a5b16dbbc36e0868eb a fno:Function ;
    dcterms:description """return a geometric object representing the ConcaveHull corresponding to the input Geometry

The input Geometry could have any arbitrary type; eventually all Linestring's / Polygon's vertices will be dissolved into Points, so to implicitly always get a MultiPoint.
The returned Geometry will always be of the Polygon or MultiPolygon type.
ratio is expected to range from 1.0 to 0.0
a value of 1.0 will produce a Convex Hull.
a value of 0.0 will produce a Hull with maximum concaveness.
By setting the optional allow_holes argument to TRUE the polygonal output may contain interior holes (by default it's set to FALSE).
NULL is returned on failure.""" ;
    fno:name "GeosConcaveHull" ;
    gsrdb:hasRequiredModule "GEOS-3110" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GeosConcaveHull( geom Geometry , ratio Double precision [ , allow_holes Boolean ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:9e5799d2277b424fbc45acc442ace37e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/GeometryType.htm> ;
    fno:name "GeometryType" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:9eb1856a08dc4baa84acb5ecc22becd7 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Buffer.htm> ;
    fno:name "ST_Buffer" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeography "2" ;
    gsrdb:supportsGeometry "1" .

gsrdb:9f064e17a55d40ddaaa6a9b33f1d6e31 a fno:Function ;
    dcterms:description "Explode  GEOMETRYCOLLECTION s into multiple Geometries" ;
    fno:name "ST_Explode" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9f1d2422b5874bb5966ac11231e1bb3e a fno:Function ;
    dcterms:description "Return a valid detail as an array of objects" ;
    fno:name "ST_IsValidDetail" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:9f4e2b1df8f145f6afe87e842c579509 a fno:Function ;
    dcterms:description "return the exteriorRing of p" ;
    fno:name "ExteriorRing" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Polygon" ;
    gsrdb:hasSyntax """ExteriorRing( polyg Polygon ) : LineString

ST_ExteriorRing( polyg Polygon ) : LineString""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:9ff2e2712fa64f09a26e3f6470eb5ce9 a fno:Function ;
    dcterms:description """If binary-data is of the BLOB-type, and the filepath is valid (i.e. accessible in write/create mode), then the corresponding file will be created/overwritten with the binary-data.
The return type is Integer, with a return value of 1 for success, 0 for failure.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is required in order to use this function.""" ;
    fno:name "BlobToFile" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "BlobToFile( binary-data BLOB , filepath String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a02b45509feb4060914026ec1767e78d a fno:Function ;
    dcterms:description "construct a Polygon" ;
    fno:name """PolyFromWKB
PolygonFromWKB""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """PolyFromWKB( wkbPolygon Binary [ , SRID Integer] ) : Polygon

ST_PolyFromWKB( wkbPolygon Binary [ , SRID Integer] ) : Polygon

PolygonFromWKB( wkbPolygon Binary [ , SRID Integer] ) : Polygon

ST_PolygonFromWKB( wkbPolygon Binary [ , SRID Integer] ) : Polygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a07a759e9bf44ecfb5ebc7bac7d6cdf9 a fno:Function ;
    dcterms:description """Will export a whole DXF file.
The output file path is controlled by out_dir and filename.
sql_query is a complete SQL Statement returning the dataset to be exported.
layer_col_name, geom_col_name, label_col_name, text_height_col_name and text_rotation_col_name must specify the corresponding column names within the resultset returned by sql_query (label_col_name, text_height_col_name and text_rotation_col_name could be eventually NULL).
geom_filter acts as a spatial filter selecting which entities have to be exported (could be NULL).
the optional argument precision specificies how many decimal digits are required for coordinate values: if not specified the default is 3.
Will return 0 (i.e. FALSE) on failure, any other value (i.e. TRUE) on success.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ExportDXF" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "ExportDXF( out_dir String , filename String , sql_query String , layer_col_name String , geom_col_name String , label_col_name String , text_height_col_name String , text_rotation_col_name String , geom_filter Geometry [ , precision Integer ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a07f698f8fa848ec87ff3ea1cd1ef3cf a fno:Function ;
    dcterms:description """Interpolates the M-value of a linear Geometry at the point closest to the given point.
NULL will be returned if any error is encountered.
Please note: NULL will be returned if the first geometry is not a Linestring supporting M-values, or if the second geometry is not a Point.""" ;
    fno:name "InterpolatePoint" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions supporting Linear Referencing" ;
    gsrdb:hasSyntax "ST_InterpolatePoint( line Geometry , point Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a0df642db13946ebb3e4e2b34f3ec70d a fno:Function ;
    dcterms:description """returns a new Geometry [if a valid Geometry was supplied], or NULL in any other case.

All Polygons will be oriented accordingly to Clockwise Rule (all Exterior Ring will be clockwise oriented, and all Interior Rings will be counter-clockwise oriented).""" ;
    fno:name "ForcePolygonCW" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_ForcePolygonCW( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a0f5ff00f7fb4e10b63fd36bfe2fe927 a fno:Function ;
    dcterms:description """Will return a new XmlBLOB by replacing the ParentIdentifier value.
The input XmlBLOB is expected to be of the ISO Metadata type and must containt an already defined ParentIdentifier.

NULL will be returned for any invalid input.""" ;
    fno:name "XB_SetParentId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_SetParentId( xmlObject XmlBLOB , parentId String ) : XmlBLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a1089ae8330a4e9dbd4ae2043e141cd9 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakeLine.htm> ;
    fno:name "ST_MakeLine" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a147da73ea2e44acb44c4f2a7d7f2ecd a fno:Function ;
    dcterms:description "returns the smallest integer value not less than x" ;
    fno:name """Ceil
Ceiling""" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax """Ceil( x Double precision ) : Double precision

Ceiling( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a14d61d830f445e4971e677653416e27 a fno:Function ;
    dcterms:description """Will attempt to find the ID of a Link intersecting the given Point.
The optional argument tolerance if omitted will imply an exact coincidence (0.0 by default).

Will return the ID of the Link on success; an exception will be raised on failure.
Note: this function cannot be applied to a Logical Network""" ;
    fno:name "GetLinkByPoint" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax """GetLinkByPoint( netname Text , point Geometry ) : Integer

GetLinkByPoint( netname Text , point Geometry , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:a17158cf249a481bab3939bc46156d79 a fno:Function ;
    dcterms:description """Calculate the Hilbert Code of the centroid of a Geometry relative to an Extent.
This allows sorting geometries in a deterministic way, such that similar Hilbert Codes are likely to be near each other in a two-dimensional space.
geom is the Geometry to be evaluated.
extent is the reference Extent.
level is the level of precision of the Hilbert Curve, ranging from 1 to 16
NULL is returned on failure.""" ;
    fno:name "HilbertCode" ;
    gsrdb:hasRequiredModule "GEOS-3110" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "HilbertCode( geom Geometry , extent Geometry , level integer] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a1a2c8f4d479487aa452ec772e1611cb a fno:Function ;
    dcterms:description "Return the z-value of the first coordinate of a Geometry" ;
    fno:name "ST_Z" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:a1ab184edc3349dda7897997128da9be a fno:Function ;
    dcterms:description """If the filepath is valid, and the existing file can be successfully read, then the whole file content will be returned as a BLOB value.
Otherwise NULL will be returned.
Please note: SQLite doesn't support BLOB values bigger than SQLITE_MAX_LENGTH (usually, 1 GB).

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is required in order to use this function.""" ;
    fno:name "BlobFromFile" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "BlobFromFile( filepath String ) : BLOB" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a1e6b84c8d0e440f90e07e18ecb7b555 a fno:Function ;
    dcterms:description "return the centroid of s, which may lie outside s" ;
    fno:name "Centroid" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Surface [Polygon or Ring]" ;
    gsrdb:hasSyntax """Centroid( s Surface ) : Point

ST_Centroid( s Surface ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a236588a2fae463e9bbcfdaebd1bb72a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Overlaps.htm> ;
    fno:name "ST_Overlaps" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a2f74b2aca434f73940c5d9e3e2cb65b a fno:Function ;
    dcterms:description """Creates a Vector Coverage based on an already existing Virtual Table of the VirtualShape or VirtualGeoJSON type.
coverage_name is the symbolic name uniquely identifying each Vector Coverage (Primary Key).
virt_name and virt_geometry are expected to match the corresponding entries in the virts_geometry_columns table.
the optional arguments title and abstract could be eventually be specified for better human readability.
if the optional argument is_queryable is left unspecified then the Vector Coverage will not be queryable.
Note: VirtualTable Coverages are never editable.

Both SE_RegisterVirtualShapeCoverage() and SE_RegisterVirtualGeoJsonCoverage() are accepted alias names for this SQL function.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterVirtualTableCoverage" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterVirtualTableCoverage( coverage_name String , virt_name String , virt_geometry String ) : Integer

SE_RegisterVirtualTableCoverage( coverage_name String , virt_name String , virt_geometry String , title String , abstract String ) : Integer

SE_RegisterVirtualTableeCoverage( coverage_name String , virt_name String , virt_geometry String , title String , abstract String , is_queryable Boolen ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a31ab9b0dccc4007be9e312fccad1406 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LineFromText.htm> ;
    fno:name "ST_LineFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a38e8b4dda79478cb2dc00424c6ad92a a fno:Function ;
    dcterms:description "return the total number of Points (this including any Linestring/Polygon vertex)." ;
    fno:name "NPoints" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_NPoints( geom Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a3be8c5ddde04728aab6e8453fa5fa74 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Extent3D.htm> ;
    fno:name "ST_Extent3D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a3ee7337e19446e18378e483be174431 a fno:Function ;
    dcterms:description """Returns the cooked SQL Body declared by the given SQL Procedure object after applying all Variable Values.
Note: this function accepts from 0 to 64 well-formed Variable with Value arguments; declaring twice or more the same Variable is considered to be a fatal error.

An exception will be raised on failure or invalid arguments.""" ;
    fno:name "SqlProc_CookedSQL" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_CookedSQL( object BLOB ) : String

SqlProc_CookedSQL( object BLOB , vararg String ) : String

SqlProc_CookedSQL( object BLOB , vararg1 String [ , ... ] , varargN String ) : String""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a40e515f24d54655b0dcaacd473f2b93 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments.

TRUE if the intersection of g1 and g2 is the empty set""" ;
    fno:name "Disjoint" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Disjoint( geom1 Geometry , geom2 Geometry ) : Integer

ST_Disjoint( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a415a339b5fc42359faec94798d53eae a fno:Function ;
    dcterms:description """Will clone an existing Network into another; the destionation Network shall not exist and will be automatically created.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_Clone" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "TopoNet_Clone( netname Text , new-netname Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:a495b0b1ee694033b2427475b9a2bf11 a fno:Function ;
    dcterms:description """will return a POLYGON approximating the Elliptic Sector defined by cx, cy and x_axis, y_axis; the arc's extremities will be defined by start, stop angles expressed in degrees.
The optional argument step if specified defines how many points will be interpolated on the ellipse; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeEllipticSector" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeEllipticSector( cx Double precision , cy Double precision , x_axis Double precision , y_axis Double precision , start Double precision , stop Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a49afc27cb084c6f9b01c806397f176e a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments.

TRUE if g1 is completely contained in g2""" ;
    fno:name "Within" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Within( geom1 Geometry , geom2 Geometry ) : Integer

ST_Within( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a4d28332769b42dc8a8a18e6e7ea7982 a fno:Function ;
    dcterms:description """return an Affine Transformation matrix corresponding to the Polynomial coeffs.
Only a set of Polynomial coeffs of the 1st order can be converted to an Affine Transformation matrix.

will return NULL on invalid argument.""" ;
    fno:name "GCP2ATM" ;
    gsrdb:hasRequiredModule """GrassGis code
GPLv2+""" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "GCP2ATM( matrix PolynomialCoeffs ] ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a4e7753fa8de48298b98b05c6e9003f7 a fno:Function ;
    dcterms:description """Return the Envelope corresponding to the Total Extent (bounding box] of some Layer; if the Table/Layer only contains a single Geometry column passing the column name isn't strictly required.
The returned extent will be retrieved from the Statistics tables:
if the third argument mode is set to TRUE a PESSIMISTIC strategy will be applied, i.e. an attempt will be made in order to update the Statistics tables before returning the Envelope.
otherwise the returned Envelope will simply reflect the current values stored into the Statics tables as they are (OPTIMISTIC strategy, adopted by default).

NULL will be returned if any error occurs or if the required table isn't a Layer.""" ;
    fno:name "GetLayerExtent" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "GetLayerExtent( table String [ , column String [ , mode Boolean] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a52a72d718c64290a2d7d81a73145268 a fno:Function ;
    dcterms:description """Removes an already registered Raster Style definition.
The Style to be removed could be referenced either by its unique Style Id or by its Style Name.Any attempt to remove a Style identified by its Name will be rejected if the if two (or more) Styles share the same Name thus causing ambiguity.
when the optional argument remove_all is explicitly set to TRUE the Style will be removed even if it's already referenced by some RasterStyledLayer and all dependings references will be removed at the same time.In any other case any attempt to unregister a Style already referenced by one (or more) RasterStyleLayer will be rejected.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterRasterStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_UnregisterRasterStyle( style_id Integer [ , remove_all Integer ] ) : Integer

SE_UnregisterRasterStyle( style_name Text [ , remove_all Integer ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a55f8d4415df4d4faea9dc2ee285d5f2 a fno:Function ;
    dcterms:description "if val1 and val2 are equal (and of the same data-type) NULL will be returned; otherwise val1 will be returned unchanged, preserving its original data-type." ;
    fno:name "ForceAsNull" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "ForceAsNull( val1 Generic , val2 Generic) : Generic" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a581486446d54dbcb56a3ac8275a7de7 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Overright.htm> ;
    fno:name "&>" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a58e60922b264a7c8b923e73f5d79f44 a fno:Function ;
    dcterms:description """Renames a Data License.
old_name is expected to match an already registered license/version.
new_name must not match any already registered license/version so to respect the unique constraint.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "RenameDataLicense" ;
    gsrdb:hasScope "SQL functions supporting Data Licenses" ;
    gsrdb:hasSyntax "RenameDataLicense( old_name Text , new_name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a58f1d52ffe4426da8b61576ccfa517d a fno:Function ;
    dcterms:description """returns a GEOMETRYCOLLECTION-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any valid Geometry""" ;
    fno:name "CastToGeometyCollection" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToGeometryCollection( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a59459da0c574fb78b5cccb2b9230b77 a fno:Function ;
    dcterms:description "return a Point guaranteed to lie on the Surface (or Curve)" ;
    fno:name "PointOnSurface" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """PointOnSurface( s Surface/Curve ) : Point

ST_PointOnSurface( s Surface/Curve ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a5b0deb6e0b0416db6020eda1fddb3a5 a fno:Function ;
    dcterms:description "Return a Geometry's area" ;
    fno:name "ST_Area" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:a5b78eb06dd943f9aa12ba241fe59d0f a fno:Function ;
    dcterms:description """return the angle (in radians) from the horizontal of the vector defined by pt1 and pt2.
Both pt1 and pt2 are expected to be simple Points.
Starting since 4.1.0 if both points supports long/lat coords the returned Azimuth will be precisely computed on the ellipsoid.
NULL is returned on failure.

On the clock: 12=0; 3=PI/2; 6=PI; 9=3PI/2""" ;
    fno:name "Azimuth" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """Azimuth( pt1 Geometry, pt2 Geometry ) : Double precision

ST_Azimuth( pt1 Geometry , pt2 Geometry ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a6196b02942e4a16915ed86625f34ad9 a fno:Function ;
    dcterms:description """Returns the Point on geom1 that is closest to geom2.
NULL is returned for invalid arguments (or if distance is ZERO)""" ;
    fno:name "ClosestPoint" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """ClosestPoint( geom1 Geometry , geom2 Geometry ) : Point

ST_ClosestPoint( geom1 Geometry , geom2 Geometry ) : Point""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a61b905900d84bd98e52886f73447890 a fno:Function ;
    dcterms:description "Update the start and end z-values of a Geometry" ;
    fno:name "ST_ZUpdateLineExtremities" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:a61e8eed82cf4f6cad1c5a31a6553d26 a fno:Function ;
    dcterms:description "construct a MultiPoint" ;
    fno:name """MPointFromText
MultiPointFromText""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """MPointFromText( wktMultiPoint String [ , SRID Integer] ) : MultiPoint

ST_MPointFromText( wktMultiPoint String [ , SRID Integer] ) : MultiPoint

MultiPointFromText( wktMultiPoint String [ , SRID Integer] ) : MultiPoint

ST_MultiPointFromText( wktMultiPoint String [ , SRID Integer] ) : MultiPoint""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a628772725704aa5befacc0b4dd1e8bc a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LineFromWKB.htm> ;
    fno:name "ST_LineFromWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a62c105824fa43d299a6c88e37764445 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MaxDistance.htm> ;
    fno:name "ST_MaxDistance" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a65a36c8c12544b884abb651f126176d a fno:Function ;
    dcterms:description """returns the current RTTOPO version as a text string
or NULL if RTTOPO is currently unsupported""" ;
    fno:name "rttopo_version" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "rttopo_version( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a6a603060b2849909a9218a56da9d441 a fno:Function ;
    dcterms:description "return a geometric object obtained by swapping x- and y-coordinates" ;
    fno:name """SwapCoords
SwapCoordinates""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """SwapCoords( geom Geometry ) : Geometry

SwapCoordinates( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a6c463d4824241d4b199b78761ed6bf7 a fno:Function ;
    dcterms:description "return the distance between geom1 and geom2 (always measured in CRS units)." ;
    fno:name "Distance" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for distance relationships" ;
    gsrdb:hasSyntax """Distance( geom1 Geometry , geom2 Geometry ) : Double precision

ST_Distance( geom1 Geometry , geom2 Geometry ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a6d646240c344a5c99ea0ad0569cf244 a fno:Function ;
    dcterms:description """returns a LINESTRING-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any Geometry containing only a single LINESTRING and no other elementary sub-geometry""" ;
    fno:name "CastToLinestring" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToLinestring( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a6f382571f9b4de099f6e0d1b755718b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Envelope.htm> ;
    fno:name "ST_Envelope" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a7562d28f748403f84810ffce8e43319 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_CollectionExtract.htm> ;
    fno:name "ST_CollectionExtract" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a764cf44bf724632aff6c15f48cd3db3 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_XMin.htm> ;
    fno:name "ST_XMin" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:a7e146c9108e4ef190521be0318056b6 a fno:Function ;
    dcterms:description """Construct a MultiPolygon given an arbitrary collection of closed linestrings as a MultiLineString binary representation.

see also: BuildArea(), Polygonize()""" ;
    fno:name "BdMPolyFromWKB" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """BdMPolyFromWKB( wkbMultilinestring Binary [ , SRID Integer] ) : MultiPolygon

ST_BdMPolyFromWKB( wkbMultilinestring Binary [ , SRID Integer] ) : MultiPolygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a8147d1bf391478084c9fa07e6d989e8 a fno:Function ;
    dcterms:description """Returns TRUE if the passed BLOB is valid SQL Procedure object, otherwise FALSE.

An exception will be raised on invalid argument.""" ;
    fno:name "SqlProc_IsValid" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_IsValid( object BLOB ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a87689024725470e9eda176fff0fbedb a fno:Function ;
    dcterms:description "2D Geometry  3D Geometry" ;
    fno:name "ST_Force3D" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:a882c1a8d46e4b24bafc19fec811ce8d a fno:Function ;
    dcterms:description "Compute the smallest convex  POLYGON that contains all the points in the Geometry" ;
    fno:name "ST_ConvexHull" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:a8af6d62f6b443d8816069ab41456838 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MPolyFromText.htm> ;
    fno:name "ST_MPolyFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:a8f1c103173d4cd2a399885612dc2abc a fno:Function ;
    dcterms:description "meters / international fathoms" ;
    fno:name "International Fathom" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToFath( x Double precision ) : Double precision

CvtFromFath( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a908f46f8e6645449df878b4e563bf0e a fno:Function ;
    dcterms:description """code is assumed to represent a valid GARS area designation code; a Geometry will be returned representing the MBR for the corresponding GARS area.

NULL will be returned if any error is encountered.""" ;
    fno:name "GARSMbr" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "GARSMbr( code String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:a9a6d9afd867480b90e8d76967208e73 a fno:Function ;
    dcterms:description """returns the current LibXML2 version as a text string
or NULL if LibXML2 is currently unsupported""" ;
    fno:name "libxml2_version" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "libxml2_version( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:a9cde2cddf6f4e0f8f9bec2598a46b70 a fno:Function ;
    dcterms:description "Geometry to Well Known Text" ;
    fno:name "ST_AsWKT" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:a9e12a8e3f8344f79a995dae04548124 a fno:Function ;
    dcterms:description """return the total 2D or 3D-length of Linestring or MultiLinestring geometry.
Z coordinates if eventually present will be considered leading to a 3D measured length; otherwise a 2D length will be computed.""" ;
    fno:name "3dLength" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax "ST_3dLength( geom Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:aa1c559e00cf4d5982c8eac5b4199151 a fno:Function ;
    dcterms:description "Return a SRID value" ;
    fno:name "ST_SRID" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:aa2cae420df2460385f583b304e47a5c a fno:Function ;
    dcterms:description "return a geometric object that is the closure of the set symmetric difference of geom1 and geom2 (logical XOR of space)" ;
    fno:name "SymDifference" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """SymDifference( geom1 Geometry , geom2 Geometry ) : Geometry

ST_SymDifference( geom1 Geometry , geom2 Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:aa56ffc6996143b2869b459fd831a309 a fno:Function ;
    dcterms:description "meters / kilometers" ;
    fno:name "Kilometer" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToKm( x Double precision ) : Double precision

CvtFromKm( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:aa8f63d26b3f412db549098276c7c095 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Polygonize.htm> ;
    fno:name "ST_Polygonize" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:aa9fbf425bd04b76ad30086ce692f393 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid GIF image""" ;
    fno:name "IsGifBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsGifBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:aaa1d95bacee4d9ea2e62f38bc3f8ba8 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_YMax.htm> ;
    fno:name "ST_YMax" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:aab43e5a1e1d4373ac035846df28e8e0 a fno:Function ;
    dcterms:description """Creates the geometry_columns and spatial_ref_sys metadata tables
the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE
if the optional argument transaction is set to TRUE the whole operation will be handled as a single Transaction (faster): the default setting is transaction=FALSE (slower, but safer).
if the optional argument mode is not specified then all possible ESPG SRID definitions will be inserted into the spatial_ref_sys table.
if the mode arg 'WGS84' (alias 'WGS84_ONLY') is specified, then only WGS84-related EPSG SRIDs will be inserted
if the mode arg 'NONE' (alias 'EMPTY') is specified, no EPSG SRID will be inserted at all""" ;
    fno:name "InitSpatialMetaData" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """InitSpatialMetaData( void ) : Integer

InitSpatialMetaData( transaction Integer ) : Integer

InitSpatialMetaData( mode String ) : Integer

InitSpatialMetaData( transaction Integer , mode String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:aac990251302419ebc273e6e16a8a9bd a fno:Function ;
    dcterms:description """If the input argument corresponds to a valid BLOB-GEOMETRY of the POINT, POINT Z, POINT M or POINT ZM type the corresponding BLOB-TinyPoint will be returned.

In any other case the input argument will be retuned.""" ;
    fno:name "TinyPointEncode" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "TinyPointEncode( content POINT BLOB-GEOMETRY ) : BLOB-TinyPoint" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ab009b7ac658441bbaa005153695ee2b a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments;

convenience predicate: TRUE if g2 is completely contained in g1""" ;
    fno:name "Contains" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Contains( geom1 Geometry , geom2 Geometry ) : Integer

ST_Contains( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ab0268fedf2c49708599e52589bca664 a fno:Function ;
    dcterms:description "Return a Geometry's envelope as a Geometry" ;
    fno:name "ST_Envelope" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ab057b3525e648dcabad3de667696521 a fno:Function ;
    dcterms:description "Return true if a  LINESTRING is ring" ;
    fno:name "ST_IsRing" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ab6988cb633e42799466f8122dadee84 a fno:Function ;
    dcterms:description """Will return a TEXT string stating if a Geometry is valid and if not valid, a reason why.
If the ESRI_flag argument is set to 1 (TRUE), then all ESRI-like internal holes (violating the standard OGC model) will be considered valid.

NULL will be returned on invalid arguments.""" ;
    fno:name "IsValidReason" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """IsValidReason( geom Geometry [ , esri_flag Boolean ] ) : String

ST_IsValidReason( geom Geometry [ , esri_flag Boolean ] ) : String""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:abf67f13c32e44e083d0c9609ad67cf7 a fno:Function ;
    dcterms:description """Will return a new XmlBLOB by replacing the FileIdentifier value.
The input XmlBLOB is expected to be of the ISO Metadata type and must containt an already defined FileIdentifier.

NULL will be returned for any invalid input.""" ;
    fno:name "XB_SetFileId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_SetFileId( xmlObject XmlBLOB , fileId String ) : XmlBLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ac7d90c7dba74df5bd6c4b10a7b66eb9 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NumPoints.htm> ;
    fno:name "ST_NumPoints" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:acd450b4c1b74de289785a2d77863231 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakeEnvelope.htm> ;
    fno:name "ST_MakeEnvelope" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ad00fb6d62c24c66846f63db41d19c8d a fno:Function ;
    dcterms:description """Will (re)create all Triggers supporting both topologies and networks meta-tables.

Will return 1 on success) or 0 on failure (including already existing tables).""" ;
    fno:name "ReCreateTopoTriggers" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ReCreateTopoTriggers( ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:ad0e77d750b34dcb962936c71f0ae2b8 a fno:Function ;
    dcterms:description "Add a point to a Geometry" ;
    fno:name "ST_AddPoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ad1c8e2357e045b0a2fba9dfb3a2398b a fno:Function ;
    dcterms:description """return the area of s (measured in meters).
If the use_ellipsoid argument is set to TRUE the precise (but slower) area will be computed on the Ellipsoid, otherwise will be computed on the Sphere (approximative, but faster).

This function only supports Long/Lat coordinates, and will return NULL for any planar CRS""" ;
    fno:name "" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions on type Surface [Polygon or Ring]" ;
    gsrdb:hasSyntax """Area( s Surface , use_ellipsoid Boolean ) : Double precision

ST_Area( s Surface , use_ellipsoid Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ad5177601b5b4b139e2d2a6fa8f1e821 a fno:Function ;
    dcterms:description """This function will create a GeoPackage geometry POINT M.

Raises a SQL exception on error""" ;
    fno:name "gpkgMakePointM" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """gpkgMakePointM (x Double precision , y Double precision , m Double precision ) : GPKG Blob Geometry

gpkgMakePointM (x Double precision , y Double precision , m Double precision , srid Integer ) : GPKG Blob Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ade9d1b8d39a4393a39fb34f4d47db63 a fno:Function ;
    dcterms:description "Well Known Binary to Geometry" ;
    fno:name "ST_GeomFromWKB" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:adeb9a08b2d64ce3895f33fd9305c043 a fno:Function ;
    dcterms:description "Return the square root of a  POLYGON 's area divided by the area of the circle with circumference equal to its perimeter" ;
    fno:name "ST_CompactnessRatio" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ae36b61fe8ff4ce1b148d25f2a76c46a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Simplify.htm> ;
    fno:name "ST_Simplify" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ae411c9822b14106af07c988530a549d a fno:Function ;
    dcterms:description """Will add a new Edge connecting two Nodes. If this new Edge splits a Face the original Face will be modified and a new Face will be inserted.

Will return the ID of the inserted Edge on success; an exception will be raised on failure.""" ;
    fno:name "AddEdgeModFace" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_AddEdgeModFace( toponame Text , startnode-id Integer , endnode-id Integer , linestring Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ae54f77a197b4d369feb257c25fa243b a fno:Function ;
    dcterms:description "Snap two Geometries together" ;
    fno:name "ST_Snap" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ae7d0dae5e4842269e086511f3df6222 a fno:Function ;
    dcterms:description "Returns the 2-dimensional shortest  LINESTRING between two geometries" ;
    fno:name "ST_ShortestLine" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ae93458ef5644259b791950293987a92 a fno:Function ;
    dcterms:description """Makes an alternative setting to become the standard setting for the corresponding WMS Layer.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_DefaultSetting" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_DefaultSetting( getmap_url Text , layer_name Text , key Text , value Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:aeccfa5b37c24006a05188f8ff122278 a fno:Function ;
    dcterms:description """Recovers a (possibly broken) RTree Spatial Index
if no arguments are passed, then any RTree defined into geometry_columns will be recovered
otherwise only the RTree corresponding to table and column will be recovered
the optional argument no_check will be interpreted as follows:
if no_check = FALSE (default) the RTree will be checked first: and only an invalid RTree will be then actually rebuilt
if no_check = TRUE the RTree will be unconditionally rebuilt from scratch

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE
NULL will be returned if the requested RTree doesn't exist

-1 will be returned if any physical column named "rowid" (caseless) shadowing the real ROWID is detected.""" ;
    fno:name "RecoverSpatialIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """RecoverSpatialIndex( [ no_check : Integer ] ) : Integer

RecoverSpatialIndex( table String , column String [ , no_check : Integer ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:aed1c21ff5134d14b595d78096088a10 a fno:Function ;
    dcterms:description """Will return a BLOB object of the Sql Procedure type encapsulating the given SQL Body.
If the optional second argument is explicitly specified the SQL Body will be automatically converted from the given charset encoding into UTF-8.

1 will be returned on success; an exception will be raised on failure or invalid arguments.""" ;
    fno:name "SqlProc_FromText" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_FromText( sql_body String ) : BLOB

SqlProc_FromText( sql_body String, charset_encoding String ) : BLOB""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:af0e3d5167c7414cad5a18101ebae771 a fno:Function ;
    dcterms:description "return a geometric object that is the convex hull of geom" ;
    fno:name "ConvexHull" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """ConvexHull( geom Geometry ) : Geometry

ST_ConvexHull( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:af1863bedb6d4cca84c17752670e8046 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Line_Substring.htm> ;
    fno:name "ST_Line_Substring" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:af264e2cfcbf400ab0cb94135b5ed0b1 a fno:Function ;
    dcterms:description """Updates the descriptive infos associated to a Vector Coverage.
coverage_name must identify an existing Vector Coverage.
title and abstract represent the descriptive infos to be set.
the optional arguments is_queryable and is_editable can be explicitly set so to determine if the Vector Coverage is queryable and/or editable.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_SetVectorCoverageInfos" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_SetVectorCoverageInfos( coverage_name String , title String , abstract String ) : Integer

SE_SetVectorCoverageInfos( coverage_name String , title String , abstract String , is_queryable Boolen , is_editable Boolean ): Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:af6d157e948144258de2d87ca15bcf6b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Dimension.htm> ;
    fno:name "ST_Dimension" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:b03c5ec1c01340a490873c706b9e2c78 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ZMin.htm> ;
    fno:name "ST_ZMin" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:b09fcdffedb74de59cd205dd823eef7a a fno:Function ;
    dcterms:description "Geometry to GML" ;
    fno:name "ST_AsGML" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:b1506ad406c5437880230e57312bdbc1 a fno:Function ;
    dcterms:description """returns the position (zero-based index) of the Linestring's vertex nearest to the given Point.
NULL will be returned if any error is encountered.
if the optional argument check_multiple is set to TRUE (always FALSE by default) the following special behavior applies:
if Point corresponds to multiple vertices of the Linestring (repeated vertices or self-intesections) then -1 will be returned.
otherwise the index of the first Vertex found will be returned.""" ;
    fno:name "GetPointIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """GetPointIndex( line LineString , point Point ) : Integer
GetPointIndex( line LineString , point Point , check_multiple Boolean ) : Integer

ST_GetPointIndex line LineString , point Point ) : Integer
ST_GetPointIndex line LineString , point Point , check_multiple Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b16495410d604deeb615afcd165a4df7 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_SetSRID.htm> ;
    fno:name "ST_SetSRID" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:b1d7a485a7704bc18d72400016b8ac09 a fno:Function ;
    dcterms:description "Well Known Binary to  LINESTRING" ;
    fno:name "ST_LineFromWKB" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:b1e8894efe4f42648a507381ba0e9bb9 a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a LINESTRING or MULTILINESTRING) will be returned.
The input Geometry is expected to be a POLYGON or MULTIPOLYGON (Rings); any self-intersection or intersection between Rings is assumed to represent a Node.
any Ring will then be possibly split in two halves where some vertex exactly intercepts a Node.

NULL will be returned if any error is encountered""" ;
    fno:name "RingsCutAtNodes" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """RingsCutAtNodes( geom Geometry ) : Geometry

ST_RingsCutAtNodes( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b205e2278da04a6d899d22d0c8ca67f4 a fno:Function ;
    dcterms:description """return BLOB-encoded objects containing Polynomial coefficients computed from a set of matching Ground Control Points pairs.
pointA corresponds to the origin Reference System; pointB corresponds to the destination target.
the input Geometries must be of the Point type and must have the same dimensions
if the points have XYZ or XYZM dimensions then 3D coeffs will be returned, otherwise 2D coeffs will be return.
the optional order argument can assume the following values:
0: a set of 2D coeffs will be returned by applying the Thin Plate Spline method.
1: (default setting) a set of 2D or 3D Polynomial coeffs of the 1st order will be returned.
2: a set of 2D or 3D Polynomial coeffs of the 2nd order will be returned.
3: a set of 2D or 3D Polynomial coeffs of the 3rd order will be returned.

will return NULL on invalid arguments

aggreagate function""" ;
    fno:name "GCP_Compute" ;
    gsrdb:hasRequiredModule """GrassGis code
GPLv2+""" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "GCP_Compute( pointA Geometry , pointB Geometry [ order Integer] ) : PolynomialCoeffs" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b27d7951dd4a449f8e0a5340ba630f88 a fno:Function ;
    dcterms:description "Return the number of points in a Linestring" ;
    fno:name "ST_NumPoints" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:b27fa1d491b84046b8c0e656c5486d93 a fno:Function ;
    dcterms:description """Will set the current Quadrant Segments value.
Returns TRUE on success, FALSE on failure.""" ;
    fno:name "BufferOptions_SetQuadrantSegments" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_SetQuadrantSegments( points Integer ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b2dac4d99318450f83f09da35cca77c6 a fno:Function ;
    dcterms:description """SQL/MM compliant: simply an alias name for ST_GeomFromWKB

Please note: SRID=0 is always assumed.""" ;
    fno:name "ST_WKBToSQL" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax "ST_WKBToSQL( wkbGeometry Binary ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b326fa79f249485b8c2a59f2ec51ae0e a fno:Function ;
    dcterms:description """Unregisters an alternative Reference System from the corresponding WMS Layer.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_UnRegisterRefSys" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_UnRegisterRefSys( getmap_url Text , layer_name Text , ref_sys Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b347e37419b949e98ea9b24748293b92 a fno:Function ;
    dcterms:description """Will return a text string explaining the intended scope of any DB object (Table, View, Index or Trigger), distinguishing between system (internal/private objects required by SQLite or SpatiaLite) and userland objects.
NULL will be returned on invalid arguments or a non existing DB object.

The db_prefix argument may be eventually NULL, and in this case the MAIN DB will be assumed.""" ;
    fno:name "GetDbObjectScope" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "GetDbObjectScope( db_prefix String , db_object_name String ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b3b066e9e04846ac8871b6c115e5cf2c a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Dump.htm> ;
    fno:name "ST_Dump" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:b3b9da87f4b64a77a2293a2a3f8e92b0 a fno:Function ;
    dcterms:description """Constructs the Minimum Bounding Circle for a generic geometry.
The Minimum Bounding Circle is the smallest circle that contains the input.

Returns a two-point linestring, with one point at the center of the bounding circle and the other on the boundary of the bounding circle.
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumBoundingCircle" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumBoundingCircle( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b3c61c0ef84f4cdd9c141860ee1d2da0 a fno:Function ;
    dcterms:description "meters / indian yards" ;
    fno:name "Indian Yard" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToIndYd( x Double precision ) : Double precision

CvtFromIndYd( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b461d5e77321490b908deb6d12fa4a09 a fno:Function ;
    dcterms:description """Inserts a new RL2 Map Configuration definition.
config is expected to be an XmlBLOB containing a valid RL2 Map Configuration.If CreateStylingTables() was invoked without specifying the relaxed option this XmlBLOB is expected to have successfully passed a formal XML Schema Validation.The registered RL2 Map Configuration will be identified either by its unique Config ID or by its Config Name automatically retrieved from XML.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "RL2_RegisterMapConfiguration" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "RL2_RegisterMapConfiguration( config BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b495c337c6b74a1d8d4b6e6e9e61cfc7 a fno:Function ;
    dcterms:description """Will update a DB-Table containing the ordered list of all Edges delimiting the given Face. The orientation will always be counterclockwise, and all Edges traversed in the opposite direction (i.e. from end to start) will be marked by a negative sign.

Will return NULL on success; an exception will be raised on failure.""" ;
    fno:name "GetFaceEdges" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_GetFaceEdges( toponame Text , face-id Integer ) : DB-table" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b496ca1326fd43bb924be2f2a04bc0bd a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MLineFromText.htm> ;
    fno:name "ST_MLineFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:b4ebb2334a75439ca984639d59aee66b a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling PROJ version 6 or any later" ;
    fno:name "HasProj6" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasProj6( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b5376383ace34fbfa7cdee178990adf8 a fno:Function ;
    dcterms:description """This function will check if expected_type is the same or is a super-type of actual_type; this function is required by the standard implementation of GPKG Geometry validation Triggers.

the return type is Integer, with a return value of 1 for TRUE, 0 for FALSE""" ;
    fno:name "GPKG_IsAssignable" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "GPKG_IsAssignable( expected_type_name String , actual_type_name String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b53e5744104749289abcaddffc7a89fb a fno:Function ;
    dcterms:description """return the perimeter of s

Starting since v.4.0.0 this function will simply consider Polygons and MultiPolygons, ignoring any Linestring or MultiLinestring""" ;
    fno:name "Perimeter" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax "Perimeter( s Surface ) : Double precision ST_Perimeter( s Surface ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b542f796dadd405f96840d315a4c1383 a fno:Function ;
    dcterms:description """Will create a DB-Table containing a validation report for the given TopoNet of the Spatial type: if the output table is empty and no exception was raised the Network is assumed to be fully valid, otherwise a row will be inserted into the table for each detected Topology invalidity.
If the destination table already exists it will be dropped and created yet again.

Will return NULL on success; an exception will be raised on failure.
Calling this function on behalf of some Network of the Logical type will raise an exception.""" ;
    fno:name "ValidSpatialNet" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_ValidSpatialNet( netname Text ) : DB-table" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b54bc1e3e84c4e1cb1c0a7278d788ab4 a fno:Function ;
    dcterms:description """Will return a Point Geometry uniquely identifying a Face (i.e. spatially intersecting the Face).

Will return a Point on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_GetFaceSeed" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_GetFaceSeed( toponame Text , face-id Integer ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b561baa601fe4fe59508a9d5c5eef236 a fno:Function ;
    dcterms:description """Will initialize a partialy defined new TopoLayer starting from a reference plain Table or View:
db-prefix can be NULL, and in this case the reference Table or View is expected to be located within the "MAIN" database.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_InitTopoLayer" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_InitTopoLayer( toponame Text , db-prefix Text , ref-table-name Text , topolayer-name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:b5967f1604be4ea583db77f61d4b1e18 a fno:Function ;
    dcterms:description """Will create a DB-Table containing a validation report for the given TopoNet of the Logical type: if the output table is empty and no exception was raised the Network is assumed to be fully valid, otherwise a row will be inserted into the table for each detected Topology invalidity.
If the destination table already exists it will be dropped and created yet again.

Will return NULL on success; an exception will be raised on failure.
Calling this function on behalf of some Network of the Spatial type will raise an exception.""" ;
    fno:name "ValidLogicalNet" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_ValidLogicalNet( netname Text ) : DB-table" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b5a3ea2989054318b87e3510c3aeac58 a fno:Function ;
    dcterms:description "return a Point containing the first Point of c" ;
    fno:name "StartPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """StartPoint( c Curve ) : Point

ST_StartPoint( c Curve ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b5b55d59e06646ba9670d6fccfa2df18 a fno:Function ;
    dcterms:description "return the max 3D-distance between geom1 and geom2 (Z coordinates will be considered)" ;
    fno:name "3DMaxDistance" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax "ST_3DMaxDistance( geom1 Geometry , geom2 Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b5ef90ab9ec14c8eb13b861adaf68c1b a fno:Function ;
    dcterms:description """Sets or updates the Title and Abstract for the WMS server identified by url.

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_SetGetCapabilitiesInfos" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_SetGetCapabilitiesInfos( url Text , title Text , abstract Text )" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b5f90f567c9f4855aaf8b31b5146246d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Locate_Along_Measure.htm> ;
    fno:name "ST_Locate_Along_Measure" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:b61d545a357b4cf096897f5b6b6ec5ba a fno:Function ;
    dcterms:description """Will split a Link (of the Spatial type) by creating a new intermediate NetNode. The original Link will be modified and a new Link will be inserted.

Will return the ID of the inserted NetNode on success; an exception will be raised on failure.""" ;
    fno:name "ModGeoLinkSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_ModGeoLingSplit( netame Text , link-id Integer , point Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b653cd341e3e45cc8974b90f55cb7ded a fno:Function ;
    dcterms:description """Executes the cooked SQL Body declared by the given SQL Procedure object after applying all Variable Values.
Note: this function accepts from 0 to 64 well-formed Variable with Value arguments; declaring twice or more the same Variable is considered to be a fatal error.

On success will return the Return Value defined (explicitly or implicitly) by SqlProc_Return().
An exception will be raised on failure or invalid arguments.""" ;
    fno:name "SqlProc_Execute" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_Execute( object BLOB ) : variable Type

SqlProc_Execute( object BLOB , vararg String ) : variable Type

SqlProc_Execute( object BLOB , vararg1 String [ , ... ] , varargN String ) : variable Type""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b6644a818f6f4b988c445274c8c6763e a fno:Function ;
    dcterms:description """returns a MULTIPOLYGON-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any Geometry containing one or more POLYGON(s) and no other elementary sub-geometry""" ;
    fno:name "CastToMultiPolygon" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToMultiPolygon( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b6692f5f0244416cb387c26bf1220c99 a fno:Function ;
    dcterms:description """returns a cumulative MD5 checksum.
aggregate function""" ;
    fno:name "MD5TotalChecksum" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "MD5TotalChecksum( BLOB | TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b66a105cb71f4e34873de4359939aaa1 a fno:Function ;
    dcterms:description """Almost the same as AddGeometryColumn(), with a critical difference:
db-prefix is the schema-name of some attached database
Such an Attached Database must necessarily be of the :memory: type being previously created by issuing an SQL statement like:ATTACH DATABASE ':memory:' AS prefix;
If the above prerequisite is not fullfilled this function will always fail.""" ;
    fno:name "AddTemporaryGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "AddTemporaryGeometryColumn( db-prefix String , table String , column String , srid Integer , geom_type String [ , dimension String [ , not_null Integer ] ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b6b206fee9c346188eb926896539646e a fno:Function ;
    dcterms:description "construct a geometric object given its EWKT Representation" ;
    fno:name "GeomFromEWKT" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromEWKT( ewktGeometry String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b6db83f3438c4bd6a2da64ab88b50c1e a fno:Function ;
    dcterms:description "returns a geometric object that is the combinatorial boundary of g as defined in the Geometry Model" ;
    fno:name "Boundary" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """Boundary( geom Geometry ) : Geometry

ST_Boundary( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b71140c94344446798fef3a2e7c0b31f a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_PointN.htm> ;
    fno:name "ST_PointN" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:b7d933925c844d60be564d7387268be4 a fno:Function ;
    dcterms:description """Will change the Value on the given Stored Variable.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredVar_UpdateValue" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """StoredVar_UpdateValue( name String , var_value NULL ) : Boolean

StoredVar_UpdateValue( name String , var_value Integer ) : Boolean

StoredVar_UpdateValue( name String , var_value Double ) : Boolean

StoredVar_UpdateValue( name String , var_value Text ) : Boolean

StoredVar_UpdateValue( name String , var_value BLOB ) : Boolean""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b81dd82f341043888ffea5de1bcdc8ee a fno:Function ;
    dcterms:description "Scale a Geometry by multiplying the ordinates by the indicated scale factors" ;
    fno:name "ST_Scale" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:b8384890a44f4ac4bafa53ac2d37a6a4 a fno:Function ;
    dcterms:description "Return the maximum z-value of a Geometry" ;
    fno:name "ST_ZMax" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:b8c54cc405664b5b8e0642d0b9a415b0 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling MATHSQL" ;
    fno:name "HasMathSQL" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasMathSQL( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:b8e362559c364972b1c7ada5fce6ae64 a fno:Function ;
    dcterms:description """Will inserting a single TopoFeature identified by is fid into a GeoTable corresponding to a TopoLayer.
the output GeoTable must exist and is expected to be created by a previous call to TopoGeo_ExportTopoLayer().
the TopoFeature identified by fid must exist and a corresponding row must not be already inserted into the output GeoTable.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_InsertFeatureFromTopoLayer" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_InsertFeatureFrom( toponame Text , topolayer-name Text , out-table Text , fid Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:b92de19f3c97466e89e3c539e2d2cbd9 a fno:Function ;
    dcterms:description """return the maximum M-coordinate value for geom as a double precision number.
if the optional argument nodata-value is set, then any NODATA value eventually found will be ignored.

NULL will be returned if geom isn't a valid Geometry or if geom has no M dimension.""" ;
    fno:name "MaxM" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """ST_MaxM( geom Geometry) : Double precision

ST_MaxM( geom Geometry , nodata-value Double ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b9dca56d65d7475d999a7fb1219620f7 a fno:Function ;
    dcterms:description "construct a geometric object given its TWKB Representation" ;
    fno:name "GeomFromTWKB" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromTWKB( twkbGeometry BLOB [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:b9f39b8fe9ad47778c502d60c25f3934 a fno:Function ;
    dcterms:description """Creates all DB Tables required for permanently egistering WMS datasources and their configurations.

Will return 1 on success; 0 on failure.""" ;
    fno:name "WMS_CreateTables" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_CreateTables() : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ba05cb6dd168456eba61ef5c37586b12 a fno:Function ;
    dcterms:description """Creates a Vector Coverage based on an already existing Spatial Table.
coverage_name is the symbolic name uniquely identifying each Vector Coverage (Primary Key).
f_table_name and f_geometry_column are expected to match the corresponding entries in the geometry_columns table.
the optional arguments title and abstract could be eventually be specified for better human readability.
if both optional arguments is_queryable and is_editable are left unspecified the Vector Coverage will then be neither queryable nor editable.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterVectorCoverage" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_RegisterVectorCoverage( coverage_name String , f_table_name String , f_geometry_column String ) : Integer

SE_RegisterVectorCoverage( coverage_name String , f_table_name String , f_geometry_column String , title String , abstract String ) : Integer

SE_RegisterVectorCoverage( coverage_name String , f_table_name String , f_geometry_column String , title String , abstract String , is_queryable Boolen , is_editable Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ba211bdf8d2b45db99c5ed12267cde29 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Centroid.htm> ;
    fno:name "ST_Centroid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ba22e3d3855646969bff14f1d1240324 a fno:Function ;
    dcterms:description """Creates a set of tables supporting ISO Metadata.
if the optional argument relaxed is specified (any value), then a relaxed version of the validating Triggers will be installed.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "CreateIsoMetadataTables" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting ISO Metadata" ;
    gsrdb:hasSyntax """CreateIsoMetadataTables() : Integer

CreateIsoMetadataTables( relaxed Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ba2c2b035d6647acb3232720aa8dd7eb a fno:Function ;
    dcterms:description """Will enable all subsequent calls to Pause() to be effective.

Note: by default Pause() is always kept disabled for each connection, so you necessarily have to call EnablePause() in order to effectively enable it.""" ;
    fno:name "EnablePause" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "EnablePause( void ) : NULL" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ba34a839374b48a39639d2c299cea8c3 a fno:Function ;
    dcterms:description """return a geometric object obtained by normalizing any longitude in the range [-180 / +180] and any latitude in the range [-90 / + 90].

Only meaningful for geographic (longitude/latitude) coordinates.""" ;
    fno:name "NormalizeLonLat" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax "NormalizeLonLat( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ba65c40777b043ebb59a063449123cd9 a fno:Function ;
    dcterms:description """returns the sum of total UpHill and DownHill Heights of a generic simple Linestring:
this is just a convenience method; calling ST_UpDownHeight(line) is exactly the same than calling ST_UphillHeight(geom) + ST_DownhillHeight(geom)
0.0 will be always returned for any 2D Linestring not containing Z coordinates.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "UpDownHeight" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """UpDownHeight( line LineString ) : Double precision

ST_UpDownHeight( line LineString ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ba876742008348a197cd96abdd09f954 a fno:Function ;
    dcterms:description "returns the name of the instantiable subtype of Geometry of which this geometric object is a member, as a string" ;
    fno:name "GeometryType" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """GeometryType( geom Geometry ) : String

ST_GeometryType( geom Geometry ) : String""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ba887d2055cf422895f9769d6b9d2942 a fno:Function ;
    dcterms:description """Extracts an XmlDocument from an XmlBLOB object; the returned XmlDocument will always be UTF-8 encoded (TEXT), irrespectively from the original internal encoding declaration.
If the optional argument indent is set to some positive value then the returned XmlDocument will be nicely formatted and properly indented by the required factor; ZERO will cause the whole XmlDocument to be returned as a single line. (default setting is negative indenting, i.e. not reformatting at all).

NULL will be returned for any invalid input (not a valid XmlBLOB object).""" ;
    fno:name "XB_GetDocument" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetDocument( xmlObject XmlBLOB [ , indent Integer ] ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:baa664a6ff544c279fbf86fc2f37681b a fno:Function ;
    dcterms:description """returns the current GEOS version as a text string
or NULL if GEOS is currently unsupported""" ;
    fno:name "geos_version" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "geos_version( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bac3a39789284b7ca883ca369f5bdb99 a fno:Function ;
    dcterms:description """Will heal two Edges by deleting the Node connecting them. The first Edge provided will be modified and the second deleted.

Will return the ID of the removed Node on success; an exception will be raised on failure.""" ;
    fno:name "ModEdgeHeal" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_ModEdgeHeal( toponame Text , edge1-id Integer , edge2-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:baee10e7f2144ea18090ef1738417ea3 a fno:Function ;
    dcterms:description """Given any arbitrary GEOMETRY will return a derived geometry consisting only of the specified type. Sub-geometries that are not the specified type are ignored.
1 = POINT-type
2 = LINESTRING-type
3 = POLYGON-type
NULL will be returned if any error is encountered (or when no item of required type is found)
The Type of the returned Geometry could be e.g. POINT or MULTIPOINT depending on actual items count.""" ;
    fno:name "CollectionExtract" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """CollectionExtract( geom Geometry , type Integer ) : Geometry

ST_CollectionExtract( geom Geometry , type Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:bb2fdc72499f430584339ccb299a9060 a fno:Function ;
    dcterms:description """This function will upgrade all geometry-related Triggers to the latest version (all DB tables declaring at least one Geometry will be affected by the upgrade).
If the transaction argument is set to TRUE then the whole upgrade will be safely executed within an internally defined SQL transaction.

Please note: DB-files created using obsolete versions of SpatiaLite (< 4.0.0) will not be upgraded.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure)""" ;
    fno:name "UpgradeGeometryTriggers" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "UpgradeGeometryTriggers( transaction Integer ) : integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:bb6d26e1616c4b9d956f23c9af3c382d a fno:Function ;
    dcterms:description """Will attempt to create and populate an output-table by snapping against the Topology identified by toponame all Geometries from an input GeoTable identified by db-prefix, table-name and column-name.
db-prefix can be NULL, and in this case the input GeoTable is expected to be located within the "MAIN" database.
column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the input GeoTable must be properly registered and must match both SRID and dimensions declared by the target Topology.
this function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.
argument iterate, tolerance_snap and tolerance_removal will be interpreted exactly in the same way adopted by TopoGeo_TopoSnap().

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_SnappedGeoTable" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_SnappedGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text , output-table Text , iterate Integer ) : Integer

TopoGeo_SnappedGeoTable( toponame Text , db-prefix Text , table-name Text , column-name Text , output-table Text , tolerance_snap Double precision , tolerance_removal Double precision , iterate Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:bb7478aa73b647d79892fb48627b36ab a fno:Function ;
    dcterms:description "meters / international feet" ;
    fno:name "International Foot" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToFt( x Double precision ) : Double precision

CvtFromFt( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bb7bde5c939843d887cf275afea996d8 a fno:Function ;
    dcterms:description "returns the current SpatiaLite Target CPU as a text string" ;
    fno:name "spatialite_target_cpu" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "spatialite_target_cpu( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bb7d966dcbcb4722a34266e2dbdbcbc5 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Length_Spheroid.htm> ;
    fno:name "ST_Length_Spheroid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:bb7eaec0ec504ebeb5b60f8df6e29c26 a fno:Function ;
    dcterms:description """returns the length of the longest segment in the Linestring.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "LinestringMaxSegmentLength" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """LinestringMaxSegmentLength( line LineString ) : Double precision

ST_LinestringMaxSegmentLength( line LineString ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:bbb6f3597c5a4a20b7f2b630dc27f117 a fno:Function ;
    dcterms:description """Removes an already registered Vector Style definition.
The Style to be removed could be referenced either by its unique Style Id or by its Style Name.Any attempt to remove a Style identified by its Name will be rejected if the if two (or more) Styles share the same Name thus causing ambiguity.
when the optional argument remove_all is explicitly set to TRUE the Style will be removed even if it's already referenced by some VectorStyledLayer and all dependings references will be removed at the same time.In any other case any attempt to unregister a Style already referenced by one (or more) VectorStyleLayer will be rejected.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterVectorStyle" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_UnregisterVectorStyle( style_id Integer [ , remove_all Integer ] ) : Integer

SE_UnregisterVectorStyle( style_name Text [ , remove_all Integer ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:bc434ec195994cada959982104ff6f25 a fno:Function ;
    dcterms:description "construct a GeometryCollection" ;
    fno:name """GeomCollFromText
GeometryCollectionFromText""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """GeomCollFromText( wktGeometryCollection String [ , SRID Integer] ) : GeometryCollection

ST_GeomCollFromText( wktGeometryCollection String [ , SRID Integer] ) : GeometryCollection

GeometryCollectionFromText( wktGeometryCollection String [ , SRID Integer] ) : GeometryCollection

ST_GeometryCollectionFromText( wktGeometryCollection String [ , SRID Integer] ) : GeometryCollection""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bc45c1872b9845b4b85b56b6f35597a3 a fno:Function ;
    dcterms:description "construct a geometric object given its KML Representation" ;
    fno:name "GeomFromKml" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromKml( KmlGeometry String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:bc82e4aa514644d59c5284179073cd69 a fno:Function ;
    dcterms:description """Enables the Geopackage mode
All connections are initially started with a disabled GPKG mode, that must be explicitly enabled whenever required.
Enabling GPKG mode is a supported option only if the currently connected DB-file presents a GPKG layout.""" ;
    fno:name "EnableGpkgMode" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "EnableGpkgMode( void ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bc936b93139641269ba5093636ce4155 a fno:Function ;
    dcterms:description "construct a Point" ;
    fno:name "PointFromWKB" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """PointFromWKB( wkbPoint Binary [ , SRID Integer] ) : Point

ST_PointFromWKB( wkbPoint Binary [ , SRID Integer] ) : Point""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bcb75abd1f9d4bd0b1fc9b8211361db2 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if the BLOB argument is a valid BLOB-Geometry.""" ;
    fno:name "IsCompressedGeometryBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsCompressedGeometryBlob( content BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bcf70a6af2814d15829b73d698209818 a fno:Function ;
    dcterms:description "Return the octogonal envelope of a Geometry" ;
    fno:name "ST_OctogonalEnvelope" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:bd1146c34f8744b7867a7a283aad3bbd a fno:Function ;
    dcterms:description "construct a MultiPolygon" ;
    fno:name """MPolyFromText
MultiPolygonFromText""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """MPolyFromText( wktMultiPolygon String [ , SRID Integer] ) : MultiPolygon

ST_MPolyFromText( wktMultiPolygon String [ , SRID Integer] ) : MultiPolygon

MultiPolygonFromText( wktMultiPolygon String [ , SRID Integer] ) : MultiPolygon

ST_MultiPolygonFromText( wktMultiPolygon String [ , SRID Integer] ) : MultiPolygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bde1c06c43a8407e99117d1e7fa3a9b6 a fno:Function ;
    dcterms:description "meters / international inches" ;
    fno:name "International Inch" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToIn( x Double precision ) : Double precision

CvtFromIn( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:bde7ccf4856245f7b88b58540cbbaee4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeogFromWKB.htm> ;
    fno:name "ST_GeogFromWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeography "1" .

gsrdb:be075934ea504e5083243db6de2cb82d a fno:Function ;
    dcterms:description """Adds a keyword to an already defined Vector Coverage.
coverage_name must identify an existing Vector Coverage.
keyword must not be already defined for the same Coverage.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterVectorCoverageKeyword" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_RegisterVectorCoverageeKeyword( coverage_name String , keyword String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:be182f4c422b47ccb61a27588aff2c1c a fno:Function ;
    dcterms:description """Will create a Spatial Table by importing an external GeoJSON file conformant to the RFC 7946 specifications:
Mandatory aguments:
table name of the table to be created.
filename absolute or relative path leading to the GeoJSON file.
Optional aguments:
geo_column name of the Geometry column of the Spatial Table (if not specified it will be 'geometry').
spatial_index if TRUE a SpatialIndex supporting the Geometry Column will be immediately created.No SpatialIndex will be created.
srid when positive, the SRID value to be assigned to all Geometries.If 0 or negative SRID=4326 (lon-lat WGS84) will be always assumed accordingly to RFC 7946.
colcase_name one between LOWER | LOWERCASE, UPPER | UPPERCASE or SAME | SAMECASE (same meaning as in ImportSHP).

Will return the total number of imported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportGeoJSON" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportGeoJSON( filename Text , table Text ) : Integer

ImportGeoJSON( filename Text , table Text [ , geo_column Text [ , spatial_index Boolean [ , srid Interger [ , colname_case Text ]]]] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:be7e290fbcdc4e65965c2d13320732e7 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Force_3DM.htm> ;
    fno:name "ST_Force_3DM" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:bec9b69d809846a8a13fe120e3dd57a9 a fno:Function ;
    dcterms:description """Will split an Edge by creating a new intermediate Node. The original Edge will be modified and a new Edge will be inserted.

Will return the ID of the inserted Node on success; an exception will be raised on failure.""" ;
    fno:name "ModEdgeSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_ModEdgeSplit( toponame Text , edge-id Integer , point Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:becbd8d115654f7196dea31e2b10d67e a fno:Function ;
    dcterms:description "Remove a Geometry's holes" ;
    fno:name "ST_RemoveHoles" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:bee3ad6f3fd8486ea019618b8a4bea47 a fno:Function ;
    dcterms:description "Return the perimeter of a (multi)polygon" ;
    fno:name "ST_Perimeter" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:bf16eaf8c9fa475186113a113d1ea8c0 a fno:Function ;
    dcterms:description """Will attempt to find the ID of a Node located at Point.
The optional argument tolerance if omitted will assume the corresponding value declared when creating the target Topology.

Will return the ID of the Node on success; an exception will be raised on failure.""" ;
    fno:name "GetNodeByPoint" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """GetNodeByPoint( toponame Text , point Geometry ) : Integer

GetNodeByPoint( toponame Text , point Geometry , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:bf216e3a58cd41188259af89a3a6ad06 a fno:Function ;
    dcterms:description """return an inverted Affine Transformation matrix.

will return NULL on invalid argument.""" ;
    fno:name "ATM_Invert" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_Invert( matrix AffineMatrix ] ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:bf25b3cb74a14e95bebe819b7e02100c a fno:Function ;
    dcterms:description "Return the number of interior rings of a Geometry" ;
    fno:name "ST_NumInteriorRings" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:bfcf2459e6f1496fbe84e53325b6f68c a fno:Function ;
    dcterms:description "meters / centimeters" ;
    fno:name "Centimeter" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToCm( x Double precision ) : Double precision

CvtFromCm( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c0de1603a620461980bf6bc960112cf0 a fno:Function ;
    dcterms:description """return a grid of hexagonal cells (having the edge length of size) precisely covering the input Geometry.
The specific Type of returned Geometry is controlled by the mode attribute value:
any positive value will cause a MultiLinestring to be returned.
zero (default value) will cause a MultiPolygon to be returned.
any negative value will cause a MultiPoint to be returned.
If the optional origin argument (expected to be a Point) is not specified then the (0,0) grid origin will be assumed by default.

NULL will be returned if any error is encountered.""" ;
    fno:name "HexagonalGrid" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """HexagonalGrid( geom ArealGeometry , size Double precision [ , mode Integer , [ origin PointGeometry ] ] ) : Geometry

ST_HexagonalGrid( geom ArealGeometry , size Double precision [ , mode Integer , [ origin PointGeometry ] ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c118fbf5a19548138784239c07ac4b15 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling FREEXL" ;
    fno:name "HasFreeXL" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasFreeXL( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c13c27ed864a41689f4242468172a9f0 a fno:Function ;
    dcterms:description """Drops and creates again two Triggers supporting the ISO_metadata_reference table.
the optional argument enable_eval chooses wich type of validating Triggers will be installed. By default this argument is always set to FALSE (0)
enable_eval=FALSE: both the ISO_metadata_reference_row_id_value_insert and the ISO_metadata_reference_row_id_value_update Triggers will be defined in such a way to never check if the referenced row in the target table do really exist.
enable_eval=TRUE: in this case both Triggers will fully check if the referenced row in the target table do really exist.But for doing such a task they'll require to call the eval() function, that only works when SPATIALITE_SECURITY=relaxed is set, this being a potentially harmful option in many cases.
Note: CreateIsoMetadataTables() will always create the version of both Triggers not using eval(); you are free to switch between the two altenatives by calling this function.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "ReCreateIsoMetaRefsTriggers" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting ISO Metadata" ;
    gsrdb:hasSyntax """ReCreateIsoMetaRefsTriggers() : Integer

ReCreateIsoMetaRefsTriggers( enable_eval Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c1471fde5e004d7098991d3d546736ff a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Same.htm> ;
    fno:name "~=" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:c1a17f8ba4f44cb8aae2d28ee45f1a84 a fno:Function ;
    dcterms:description """Will import data from a WFS datasource:
Mandatory arguments:
filename_or_url absolute or relative path leading to the WFS file.Alternatively an URL corresponding to a WFS service.
layer_name name of the WFS layer.
table name of the table to be created.
Optional arguments:
pk_column name of a WFS column to be used in the Primary Key role; an INTEGER AUTOINCREMENT PK will be created by default.
swap_axes boolean flag: swapping the X and Y axes or not: 0 by default.
page_size : how many features for each WFS paged requests; a negative number or zero if you don't intend to activate WFS paging. -1 by default.
spatial_index boolean flag: immediately building a Spatial Index or not; 0 by default.

Will return the total number of imported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportWFS" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportWFS( filename_or_url Text , layer_name Text , table Text ) : Integer

ImportWFS( filename_or_url Text , layer_name Text , table Text [ , pk_column Text [ , swap_axes Integer [ , page_size Integer [ , spatial_index Integer ] ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c1a8a279d5c84063a571978eb9e340d8 a fno:Function ;
    dcterms:description """Enables the TinyPoint BLOB encoding for all Point-Geometries being created.
All connections are initially started with a disabled TinyPoint BLOB encoding, that must be explicitly enabled whenever required.

Exception: if the environment variable SPATIALITE_TINYPOINT=1 is set, then all connections will initially start by enabling the TinyPoint BLOB encoding.""" ;
    fno:name "EnableTinyPoint" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "EnableTinyPoint( void ) : void" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c1dd6fdc60cd4b919641406439408c67 a fno:Function ;
    dcterms:description """Will remove from the given Topology all unnecessary Nodes.
An unnecessary Node is one connected to exactly two Edges whilst both Edges share the same two Faces; it's obvious that such a Node could be safely removed giving birth to a single Edge without altering in any way the Topological self-consistency.
All unnecessary Nodes identified by this function will be removed by implicitly calling ST_NewEdgeHeal()

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_NewEdgeHeal" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_NewEdgeHeal( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:c2142eca5f0b411bbb32dff8cd933059 a fno:Function ;
    dcterms:description "return the 3D-distance between geom1 and geom2 (Z coordinates will be considered)" ;
    fno:name "3DDistance" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax "ST_3DDistance( geom1 Geometry , geom2 Geometry ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c2c36918b9094b5f8833276d5f8ce13c a fno:Function ;
    dcterms:description """returns a new Linestring by adding a new Point into the input Linestring immediately before position (zero-based index).
A negative position (default) means appending the new Point to the end of the input Linestring.
NULL will be returned if any error is encountered.""" ;
    fno:name "AddPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """AddPoint( line LineString , point Point [ , position Integer ] ) : Linestring

ST_AddPoint( line LineString , point Point [ , position Integer ] ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c345c6625e90499da5e7737911438558 a fno:Function ;
    dcterms:description "Return the y-value of the first coordinate of a Geometry" ;
    fno:name "ST_Y" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:c409009d07df4257b0de06cdb6fdec60 a fno:Function ;
    dcterms:description "a Geometry will be returned representing the POINT M defined by [x y m] coordinates" ;
    fno:name "MakePointM" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakePointM( x Double precision , y Double precision , m Double precision , [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c41d9f1140074e88a7b31365c7262853 a fno:Function ;
    dcterms:description """Will check if the given table does contain duplicate rows, i.e. rows presenting identical values for all columns (ignoring any Primary Key column).

Will return the total number of duplicate rows found.
NULL will be returned on invalid arguments.""" ;
    fno:name "CheckDuplicateRows" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "CheckDuplicateRows( table Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c458b2b3d288453e9c71114792fa8478 a fno:Function ;
    dcterms:description """This function will reinstall all geometry-related Triggers for the named table.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure)""" ;
    fno:name "RebuildGeometryTriggers" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "RebuildGeometryTriggers( table_name String , geometry_column_name String ) : integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c46388b87a204548afbcdf9d99963ee2 a fno:Function ;
    dcterms:description """Will activate a SQL Logfile supporting all following calls to SqlProc_Execute(), SqlProc_ExecuteLoop(), StoredProc_Execute() and StoredProc_ExecuteLoop().
The filepath argument is expected to be a valid relative or absolute pathname; it could be set to NULL so to disable SQL Logging.
The optional argument append if set to TRUE requires to open the Logfile for appending; if set to FALSE (default setting) the Logfile will be truncated.

1 will be returned on success; an exception will be raised on invalid argument or if the SQL Logfile can't be succesfully opened.

Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "SqlProc_SetLogfile" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_SetLogfile( filepath String ) : Integer

SqlProc_SetLogfile( filepath String , append Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c4cc167a7bb24887b6f787760e0d0c50 a fno:Function ;
    dcterms:description """simply an alias-name for MakePoint()
Please note: the SRID argument is never supported by ST_Point()""" ;
    fno:name "ST_Point" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "ST_Point( x Double precision , y Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c5993190914f4b3482a710a2e657ad86 a fno:Function ;
    dcterms:description """Creates an MBR identified by extreme points x1 y1 and x2 y2

This fuction is used internally by triggers related to MbrCache management, and is not intended for any other usage""" ;
    fno:name "BuildMbrFilter" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for MbrCache-based queries" ;
    gsrdb:hasSyntax "BuildMbrFilter( x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision )" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c6834bf3c9454f778d7d57faea0c7797 a fno:Function ;
    dcterms:description """return a geometric object representing the ConcaveHull corresponding to the input Geometry

The input Geometry could have any arbitrary type; eventually all Linestring's / Polygon's vertices will be dissolved into Points, so to implicitly always get a MultiPoint.
The returned Geometry will always be of the Polygon or MultiPolygon type.
The default factor applies a 3σ filtering; by declaring some lower factor you can get a more aggressive filtering effect.
By setting the optional allow_holes argument to TRUE all interior holes will be preserved.
The optional argument tolerance is intended to normalize the input Geometry, suppressing repeated (or too close) Points.
NULL is returned on failure.""" ;
    fno:name "ConcaveHull" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """ConcaveHull( geom Geometry [ , factor Double precision [ , allow_holes Boolean [ , tolerance Double precision ] ] ] ) : Geometry

ST_ConcaveHull( geom Geometry [ , factor Double precision [ , allow_holes Boolean [ , tolerance Double precision ] ] ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c695183e16b44d0eabe8c3921d5c7636 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsMapConfig" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsMapConfig( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c6fa41af533a410391dde8410ca81fe1 a fno:Function ;
    dcterms:description "Remove duplicated coordinates from a Geometry" ;
    fno:name "ST_RemoveDuplicatedCoordinates" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:c7abf3741c004f4d9749401039122268 a fno:Function ;
    dcterms:description """Will change the Title on the given Stored Procedure.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredProc_UpdateTitle" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredProc_UpdateTitle( name String , title String ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c7e295c5fc204d7681cfce57befaf3d2 a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix by chaining a further 2D or 3D Scale to a previous transformation matrix.

will return NULL on invalid arguments.""" ;
    fno:name "ATM_Scale" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax """ATM_Scale( matrix AffineMatrix , sx Double precision , sy Double precision ] ) : AffineMatrix

ATM_Scale( matrix AffineMatrix , sx Double precision , sy Double precision , sz Double precision ] ) : AffineMatrix""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c89107b768c74625b6a374d25091c54d a fno:Function ;
    dcterms:description """Will possibly return a new Point precisely snapped to the nearset TopoNode within the given distance; if no such TopoNode exists NULL will be returned.
An exception will be raised on invalid arguments.""" ;
    fno:name "TopoGeo_SnapPointToSeed" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_SnapPointToSeed( point Geometry , toponame Text , distance Double ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c8ab86ad1b2e449991a30e3ece3d0988 a fno:Function ;
    dcterms:description "return a geometric object that is the set union of input values aggregate function" ;
    fno:name "GUnion" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators" ;
    gsrdb:hasSyntax """GUnion( geom Geometry ) : Geometry

ST_Union( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c8ac479fa9c140949324eb157d6fbf60 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakeBox2D.htm> ;
    fno:name "ST_MakeBox2D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:c8ae2818235442c782b0297079af26e4 a fno:Function ;
    dcterms:description """Will suspend the execution of the current process. (mainly intended for debugging purposes).

Note: Pause() will effectively work only if EnablePause() has been explicitly called before.""" ;
    fno:name "Pause" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "Pause( void ) : NULL" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:c9b692a1726343a697ee0709826d2c12 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments.

TRUE if g1 and g2 have equal MBRs""" ;
    fno:name "MbrEqual" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrEqual( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c9c25ef7e8a344f6bb31f342205bc27a a fno:Function ;
    dcterms:description """returns a POLYGON-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any Geometry containing only a single POLYGON and no other elementary sub-geometry""" ;
    fno:name "CastToPolygon" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToPolygon( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c9d0023256ed4c218360a401a9ec3ff8 a fno:Function ;
    dcterms:description """This function will add a zoom level for the specified table.
This function assumes usual tile conventions, including that the tiles are power-of-two-zoom, 256x256 pixels, 1 tile at the top level (zoom level 0).

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgCreateTilesZoomLevel" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgCreateTilesZoomLevel( tile_table_name String, zoom_level Integer , extent_width Double precision , extent_height Double precision ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:c9d7bef6bb7a46efa8612a71feef29a4 a fno:Function ;
    dcterms:description " GEOMETRY(COLLECTION) to  MULTILINESTRING" ;
    fno:name "ST_ToMultiSegments" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:c9ee685d7eeb4e679d0fc4946d4aa0cf a fno:Function ;
    dcterms:description "Will return the most recent exception raised by this Topo-Geo, or NULL if no exception is currently pending." ;
    fno:name "GetLastTopologyException" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "GetLastTopologyException( toponame Text ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:ca143d86d7c24d96887460d23cd7a5ca a fno:Function ;
    dcterms:description """Will return the exact Geometry of a Face.

Will return a Polygon on success; an exception will be raised on failure.""" ;
    fno:name "GetFaceGeometry" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_GetFaceGeometry( toponame Text , face-id Integer ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ca524ab08cbf41998241b6aa8b31faf7 a fno:Function ;
    dcterms:description """This SQL function is explicitly required by ISO 13249-3, anyway it's simply implemented as an alias-name for CreateNetwork ( netname ).

Will return 1 on success) or 0 on failure: -1 will be returned on invalid arguments.""" ;
    fno:name "InitTopoNet" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_InitTopoNet( netname Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ca98616be0b74df9bd0109fe8a85a080 a fno:Function ;
    dcterms:description """returns the FGF [FDO Geometry Binary Format] representation

dims can assume one of the following values:
0 XY dimension
1 XYZ dimension
2 XYM dimension
3 XYZM dimension""" ;
    fno:name "AsFGF" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "AsFGF( geom Geometry , dims Integer ) : Binary" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:caa441598b0349b0b1d2f7c0a0ff8d58 a fno:Function ;
    dcterms:description """Deletes an already existing External Graphic Resource.
xlink_href the External Resource to be deleted.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterExternalGraphic" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_UnregisterExternalGraphic( xlink_href String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cab3d1e66190422e926b1e500fb97288 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Multi.htm> ;
    fno:name "ST_Multi" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:cac93734a30c47a1baa697c5a7c7802a a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Collect.htm> ;
    fno:name "ST_Collect" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:cb0b397583ed43ce90dd63635c414a0c a fno:Function ;
    dcterms:description """return a geometric object containing all elements that would be eventually discarded by ST_MakeValid() while validating the same input Geometry.
NULL is returned on failure, or if no discarded item exists.""" ;
    fno:name "MakeValidDiscarded" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """MakeValidDiscarded( geom Geometry ) : Geometry

ST_MakeValidDiscarded( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cbad0ee7fe28414b8425bad115e1c999 a fno:Function ;
    dcterms:description """sets the current value for the Sequence identified by seq_name; if the Sequence doesn't yet exist it will be created on-the-fly.
Will return value on success or NULL on failure.""" ;
    fno:name "sequence_setval" ;
    gsrdb:hasScope "SQL functions manipulating Sequences" ;
    gsrdb:hasSyntax "sequence_setval ( seq_name Text , value Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:cbd3a327e90440baa210f790aee675a2 a fno:Function ;
    dcterms:description """Divides geom into many parts until each part can be represented using no more than max_vertices.
If the optional argument max_vertices is not explicitly specified a limit of 128 vertices is implicitly assumed.
NULL will be returned on invalid arguments.""" ;
    fno:name "ST_Subdivide" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """ST_Subdivide( geom Geometry ) : Geometry

ST_Subdivide( geom Geometry , max_vertices Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cbeb685488f34cc194db222d0689c588 a fno:Function ;
    dcterms:description "Reduce a Geometry's precision" ;
    fno:name "ST_PrecisionReducer" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:cc3ee575603c4516bf4fdcd03b61fa42 a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling ICONV" ;
    fno:name "HasIconv" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasIconv( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:cc5e78d488634a3db623b60d61efdf98 a fno:Function ;
    dcterms:description "meters / international statute miles" ;
    fno:name "International Statute Mile" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToMi( x Double precision ) : Double precision

CvtFromMi( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:cc63dca3a8704dc08d8db0c24a535da2 a fno:Function ;
    dcterms:description """returns the current FreeXL version as a text string
or NULL if FreeXL is currently unsupported""" ;
    fno:name "freexl_version" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "freexl_version( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:cc72881aba554ebe90998a6c4ca19565 a fno:Function ;
    dcterms:description """return a geometric object representing the Voronoj Diagram corresponding to the input Geometry

The input Geometry could have any arbitrary type; eventually all Linestring's / Polygon's vertices will be dissolved into Points, so to implicitly always get a MultiPoint.
The returned Geometry will usually be of the MultiPolygon type, but will be a MultiLinestring if the optional edges_only argument is set to TRUE
The optional argument extra_frame_size allows to arbitrarily set the percent extension of the bounding frame: the default value is 5%.
The optional argument tolerance is intended to normalize the input Geometry, suppressing repeated (or too close) Points.
NULL is returned on failure.""" ;
    fno:name "VoronojDiagram" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """VoronojDiagram( geom Geometry [ , edges_only Boolean [ , frame_extra_size Double precision [ , tolerance Double precision ] ] ] ) : Geometry

ST_VoronojDiagram( geom Geometry [ , edges_only Boolean [ , frame_extra_size Double precision [ , tolerance Double precision ] ] ] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cc79e9b169a24d24a3d89df898b820fb a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsSvg" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsSvg( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ccafa47633d5447bb2e510ab9280dbab a fno:Function ;
    dcterms:description """Creates a set of tables supporting SLD/SE Styled Layers.
if the optional argument relaxed is explicitly set as TRUE then a relaxed version of the validating Triggers will be installed (not checking for strict XSD schema validation).
if the optional argument transaction is explicitly set as TRUE then the whole operation will be atomically confined within a monolithic SQL transaction

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.

Please note: will implicitly invoke CreateRasterCoveragesTable() and CreateVectorCoveragesTables() so to create the corresponding tables if not already defined.""" ;
    fno:name "CreateStylingTables" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """CreateStylingTables() : Integer

CreateStylingTables( relaxed Integer ) : Integer

CreateStylingTables( relaxed Integer , transaction Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cd06bfc9649f43d9a4b96beab86262b0 a fno:Function ;
    dcterms:description """Will create all DBMS objects (tables, triggers, indices and alike) required in order to store a separate Topo-Net.
netname: the individual unique name of this Topo-Net: all subordinated tables will use it as a prefix.
spatial: if set to TRUE this Topo-Net will be considered a Spatial-Network, otherwise a Logical-Network will be assumed (FALSE by default).
srid: the Spatial Reference System supporting this Topo-Net (-1 by default).
has_z: if set to TRUE this Topo-Net will support 3D - XYZ coordinates (FALSE by default).
allow_coincident: if set to FALSE all Node-on-Node, Link-on-Node or Node-on-Link conditions will raise an exception (TRUE by default).
Will return 1 on success), 0 on failure, -1 on invalid arguments.""" ;
    fno:name "CreateNetwork" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax """CreateNetwork( netname Text ) : Integer

CreateNetwork( netname Text , spatial Boolean ) : Integer

CreateNetwork( netname Text , spatial Boolean , srid Integer ) : Integer

CreateNetwork( netname Text , spatial Boolean , srid Integer , has_z Boolean ) : Integer

CreateNetwork( netname Text , spatial Boolean , srid Integer , has_z Boolean , allow_coincident Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:cd3cc0a85a2c4be8b0680869c9770b00 a fno:Function ;
    dcterms:description "Return the length of a Linestring" ;
    fno:name "ST_Length" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:cd921436b69a48a79ab25df930b65a21 a fno:Function ;
    dcterms:description """returns the total Downhill Height of a generic simple Linestring:
0.0 will be always returned for any 2D Linestring not containing Z coordinates.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "DownhillHeight" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """DownhillHeight( line LineString ) : Double precision

ST_DownhillHeight( line LineString ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ce3b5c0287ab48cfb8132998a2e2050e a fno:Function ;
    dcterms:description """If [and only if] the SRID associated with c is a geographic one [i.e. one using longitude and latitude angles], then returns the length of c measured on the Ellipsoid [such length is always expressed in meters]
Otherwise NULL will be returned

Please note: measuring lengths on the Ellipsoid requires complex geodesic calculations, and thus is an intrinsically slow and time consuming task""" ;
    fno:name "Geodesic Length" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax "GeodesicLength( c Curve ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ce7fea9ddd7f4718b91b1f104aee873d a fno:Function ;
    dcterms:description """Construct an XML validated XmlBLOB object starting from an XmlDocument.
If compressed is set to TRUE the XmlBlob object will be compressed (default setting).
If schemaURI is specified then the XmlDocument will be validated against the given Schema (default setting is skipping any XML validation).
If internalSchemaURI is set (any value), then the XmlDocument will be validated againt the Schema URI internally defined within the XmlDocument itself (if any).

NULL will be returned if the input XmlBLOB fails to pass validation for any reason.""" ;
    fno:name "XB_SchemaValidate" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax """XB_SchemaValidate( xmlObject XmlBLOB , schemaURI Text [ , compressed Boolean ] ) : XmlBLOB

XB_SchemaValidate( xmlObject XmlBLOB , internalSchemaURI Boolean [ , compressed Boolean ] ) : XmlBLOB""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ce8be82555774e73ae5d14ca844bbdb2 a fno:Function ;
    dcterms:description """Updates the Extent boundary supporting a Raster Coverage, this including any eventually defined alternative SRID.
if the optional coverage_name argument is set then only that single Raster Coverage will be updated; otherwise all registered Raster Coverages will be processed in a single pass (may require a long time).
if the optional transaction argument is set to TRUE then the whole operation will be internally handled as a single SQL Transaction.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UpdateRasterCoverageExtent" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_UpdateRasterCoverageExtent() : Integer

SE_UpdateRasterCoverageExtent( transaction Integer ) : Integer

SE_UpdateRasterCoverageExtent( coverage_name String ) : Integer

SE_UpdateRasterCoverageExtent( coverage_name String , transaction Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cf399d27f9a545c49de9a2fe7ddccf18 a fno:Function ;
    dcterms:description """This function will create any missing column on metadata tables required by librasterlite2 v.2 and subsequent versions.

The return type is Integer, with a return value of 1 on success and 0 on failure.

Note: this SQL function is intended for safely upgrading old databases created by earlier versions of SpatiaLite (5.0.0 or 5.0.1); it's absolutely harmless if the currently connected DB already has all the columns required by Rasterlite2 v.2.0""" ;
    fno:name "CreateMissingRasterlite2Columns" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CreateMissingRasterlite2Columns( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:cf83ee15e61a432885bf3b6a5252c619 a fno:Function ;
    dcterms:description """Exactely the same as ST_Union, but applied to a single Geometry.
(set union of elementary Geometries within a MULTI- or GEOMETRYCOLLECTION complex Geometry)

NULL will be returned if any error is encountered""" ;
    fno:name "UnaryUnion" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """UnaryUnion( geom Geometry ) : Geometry

ST_UnaryUnion( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d0181835d09f45d6bb27b731c21302b7 a fno:Function ;
    dcterms:description """returns a new Linestring by replacing its StartPoint.
NULL will be returned if any error is encountered.""" ;
    fno:name "SetStartPoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """SetStartPoint( line LineString , point Point ) : Linestring

ST_SetStartPoint( line LineString , point Point ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d06467a0785443f393e68e6dcb67511b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_OrderingEquals.htm> ;
    fno:name "ST_OrderingEquals" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:d0729a8f78794a9cbab3b300022d7d55 a fno:Function ;
    dcterms:description """Will return a 3D Linestring by draping geom1 over geom2:
geom1 is expected to be a 2D Linestring (XY or XYM dimensions).
geom2 is expected to be a 3D Linestring (XYZ or XYZM dimensions).
both geom1 and geom2 must share the same SRID.
the option tolerance is the distance radius between corresponding 2D and 3d points.By default a 0.0 tolerance is intended, thus implying an exact coincidence of X and Y coordinates.
Note: The returned Linestring will contain all Vertices defined by geom1 faithfully preserving their X and Y values; Z and M values will be recovered from the corresponding 3D Vertex from geom2, or will be possibily interpolated if no direct match exists.
If neither a direct match nor interpolation can be applied then Z and M will assume a conventional 0.0 value.

NULL will be returned on invalid arguments or if any error is encountered.""" ;
    fno:name "DrapeLine" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """ST_DrapeLine( geom1 Geometry , geom2 Geometry ) : Geometry

ST_DrapeLine( geom1 Geometry , geom2 Geometry , tolerance Double ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d0a6652282574831b696a9c503de0a25 a fno:Function ;
    dcterms:description """Executes the given Stored Procedure after applying all Variable Values.
Note: this function accepts from 0 to 64 well-formed Variable with Value arguments; declaring twice or more the same Variable is considered to be a fatal error.

On success will return the Return Value defined (explicitly or implicitly) by StoredProc_Return().
An exception will be raised on failure or invalid arguments.""" ;
    fno:name "StoredProc_Execute" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """StoredProc_Execute( name String ) : variable Type

StoredProc_Execute( name String , vararg String ) : variable Type

StoredProc_Execute( name String , vararg1 String [ , ... ] , varargN String ) : variable Type""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d0af441505c8411494c06c7c5abd667d a fno:Function ;
    dcterms:description """return the Fréchet distance between geom1 and geom2
learn more

the optional argument densify_fract is the fraction (in the range 0.0 / 1.0) by which to densify each segment. Each segment will be split into a number of equal-lenght subsegments, whose fraction of the total length is closest to the given fraction.
The smaller densify_fract we specify, the more acurate Fréchet distance we get. But, the computation time and the memory usage increase with the square of the number of subsegments.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "FrechetDistance" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax """FrechetDistance( geom1 Geometry , geom2 Geometry ) : Double precision

FrechetDistance( geom1 Geometry , geom2 Geometry , densify_fract Double precision ) : Double precision

ST_FrechetDistance( geom1 Geometry , geom2 Geometry ) : Double precision

ST_FrechetDistance( geom1 Geometry , geom2 Geometry , densify_fract Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d108b7031dcf48ad81dab66e6f4a8936 a fno:Function ;
    dcterms:description """This function will return the image type (as a string) of the blob argument, or "unknown" if the image type is not one of the PNG, JPEG, TIFF or WebP format types that are supported in GeoPackage. The result will be one of:
"png" for PNG
"jpeg" for JPEG
"tiff" for TIFF
"x-webp" for WebP
These are the mime type for the image format (without the "image/" prefix).

This function raises exception on error (e.g. wrong argument type).""" ;
    fno:name "gpkgGetImageType" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgGetImageType( image Blob ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d1361f1994de440eb51281679c01003e a fno:Function ;
    dcterms:description "Return a polygon's 3D area" ;
    fno:name "ST_3DArea" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:d16cc5e4a8c842e8a365df119dcb065e a fno:Function ;
    dcterms:description """Will attempt to add a Point (or even a MultiPoint) to an already existing Topology, possibly splitting existing Edges.
The optional argument tolerance if omitted will assume the corresponding value declared when creating the target Topology.

Will return a comma separated list of all IDs of corresponding Nodes on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_AddPoint" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_AddPoint( toponame Text , point Geometry ) : Text

TopoGeo_AddPoint( toponame Text , point Geometry , tolerance Double precision ) : Text""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:d261f08b8435485ebc0dd9647aa15bea a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_HasArc.htm> ;
    fno:name "ST_HasArc" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:d27d25ebed6345a7b3a3fc723ade165e a fno:Function ;
    dcterms:description """return a geometric object representing the repaired version of the input Geometry.
If the input Geometry was already valid, then it will be returned exactly as it was.
NULL is returned on failure.

See also: GeosMakeValid()""" ;
    fno:name "MakeValid" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """MakeValid( geom Geometry ) : Geometry

ST_MakeValid( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d2adf3694246464f911eb446e47b1b60 a fno:Function ;
    dcterms:description "construct a geometric object given its Well-known binary Representation" ;
    fno:name "GeomFromWKB" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """GeomFromWKB( wkbGeometry Binary [ , SRID Integer] ) : Geometry

ST_GeomFromWKB( wkbGeometry Binary [ , SRID Integer] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d2babc52e0fe40b7855a7377d7e53433 a fno:Function ;
    dcterms:description """returns the percent encoded URL corresponding to the input value.
Will return NULL for invalid input.
the input URL is always assumed to be an UTF-8 string.
the output URL will be converted into the charset encoding specified by the charset argument.if not specified UTF-8 will be assumed by default.""" ;
    fno:name "EncodeURL" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax """EncodeURL( url Text ) : Text

EncodeURL( url Text , charset Text ) : Text""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d33327713af1422195e56adfbe8f6afb a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomFromEWKT.htm> ;
    fno:name "ST_GeomFromEWKT" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:d3597ffb42164ab9ab972457043de863 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_TransScale.htm> ;
    fno:name "ST_TransScale" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:d397bcc8a05b40fd92ba59ae48aeeab8 a fno:Function ;
    dcterms:description "Create a Voronoi diagram." ;
    fno:name "ST_Voronoi" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:d3ace994909347559f1a7186125daf42 a fno:Function ;
    dcterms:description """Will return a new XmlBLOB by inserting a ParentIdentifier value.
The input XmlBLOB is expected to be of the ISO Metadata type and must not containt an already defined ParentIdentifier.

IdNameSpacePrefix and IdNameSpaceURI are expected to represent the namespace (if any) corresponding to the <parentIdentifier> tag (could be eventually NULL).
CsNameSpacePrefix and CsNameSpaceURI are expected to represent the namespace (if any) corresponding to the <CharacterString> tag (could be eventually NULL).

NULL will be returned for any invalid input.""" ;
    fno:name "XB_AddParentId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_AddParentId( xmlObject XmlBLOB , parentId String , IdNameSpacePrefix String , IdNameSpaceURI String , CsNameSpacePrefix String , CsNameSpaceURI String ) : XmlBLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d3dde97ae683424eb651c41b82186ac6 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid ZIP-compressed file""" ;
    fno:name "IsZipBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsZipBlob( content BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d45a2a164a5c40f985f79f4797052f95 a fno:Function ;
    dcterms:description "return the number of Points in the LineString" ;
    fno:name "NumPoints" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """NumPoints( line LineString ) : Integer

ST_NumPoints( line LineString ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d48164d471764eeba1e22addade30e05 a fno:Function ;
    dcterms:description """This one simply is a convenience function accepting the same arguments of ST_Snap() (with identical meaning).
geom1 is expected to be a LINESTRING or a MULTILINESTRING
geom2 is expected to be a POINT or a MULTIPOINT
first pass: geom1 will be snapped against geom2
second pass: the resulting geometry returned by the above snap will then be split using geom2 as the cutting blade.
the final result returned by SnapAndSplit will always be a MULTILINESTRING
NULL is returned for invalid arguments""" ;
    fno:name "SnapAndSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """SnapAndSplit( geom1 Geometry , geom2 Geometry , tolerance Double precision ) : Geometry

ST_SnapAndSplit( geom1 Geometry , geom2 Geometry , tolerance Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d4888deb8ae045c29036407095cc23c8 a fno:Function ;
    dcterms:description """Creates a new geometry column updating the FDO/OGR Spatial Metadata tables

geom_type has to be one of the followings:
1 POINT
2 LINESTRING
3 POLYGON
4 MULTIPOINT
5 MULTILINESTRING
6 MULTIPOLYGON
7 GEOMETRYCOLLECTION
dimension may be 2, 3 or 4, accordingly to OGR/FDO specs
geometry_format has to be one of the followings:
'WKB'
'WKT'
'FGF'

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "AddFDOGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax "AddFDOGeometryColumn( table String , column String , srid Integer , geom_type Integer , dimension Integer, geometry_format String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d48eb267f1d9444885f7e0cf5a57f160 a fno:Function ;
    dcterms:description """Will change the geometry of an Edge without affecting Topology relationships.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "ChangeEdgeGeom" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_ChangeEdgeGeom( toponame Text , edge-id Integer , linestring Geometry ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d4cb7829c964458c80800d5d95ffde3f a fno:Function ;
    dcterms:description """returns a MULTILINESTRING-type Geometry [if type-conversion is possible], or NULL in any other case

can be applied to any Geometry containing one or more LINESTRING(s) and no other elementary sub-geometry""" ;
    fno:name "CastToMultiLinestring" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToMultiLinestring( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d4f597ba50874ae2a9f1dd5a0c8a5b07 a fno:Function ;
    dcterms:description """Creates the raster_coverages table required by RasterLite-2

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure)""" ;
    fno:name "CreateRasterCoveragesTable" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CreateRasterCoveragesTable( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d51941588d054ba990697070599c61d5 a fno:Function ;
    dcterms:description "Compute a buffer around a Geometry" ;
    fno:name "ST_Buffer" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:d5c40e04e3094cf993a5964c0e6d06d8 a fno:Function ;
    dcterms:description """Will remove an isolated Edge.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "RemIsoEdge" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_RemIsoEdge( toponame Text , edge-id Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d71aa1a641bf43cda5cfb8196ef42fdb a fno:Function ;
    dcterms:description """Unregisters a Data License.
license_name is expected to match an already registered license/version.

Will return 1 on success; 0 on failure; -1 on invalid argument.""" ;
    fno:name "UnRegisterDataLicense" ;
    gsrdb:hasScope "SQL functions supporting Data Licenses" ;
    gsrdb:hasSyntax "UnRegisterDataLicense( license_name Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d768e3bcac6342a39ac6fe54c4226ce8 a fno:Function ;
    dcterms:description """returns the total Uphill Height of a generic simple Linestring:
0.0 will be always returned for any 2D Linestring not containing Z coordinates.
NULL will be returned if any error is encountered.

Note: this function only accepts simple Linestrings; Geometries containing any Point or Polygon, or containing more than a single Linesting will be considered invalid.""" ;
    fno:name "UphillHeight" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """UphillHeight( line LineString ) : Double precision

ST_UphillHeight( line LineString ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d7879ad096d042ce9ffe12d2a24755ff a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Overabove.htm> ;
    fno:name "|&>" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:d7c5baafb0144efb8e7ca61affeec6d7 a fno:Function ;
    dcterms:description "meters / decimeters" ;
    fno:name "Decimeter" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToDm( x Double precision ) : Double precision

CvtFromDm( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d83285a0374a4e3cb54d2c83acd0a445 a fno:Function ;
    dcterms:description "Compute the union of two or more Geometries" ;
    fno:name "ST_Union" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:d8f8884ba713402b8fb358eb2fea1026 a fno:Function ;
    dcterms:description """Will return a 3D MultiPoint containing all undraped Vertices encountered when draping geom1 over geom2:
geom1, geom2 and tolerance exactly have the same interpretation as in ST_DrapeLine().
the option interpolated argument has the following interpreation:
if FALSE all 2D Vertices lacking a matching 3D Vertex will be inserted into the returned MultiPoint, even when Z and/or M values have been succesfully interpolated.
if TRUE only 2D Vertices completely lacking Z and/or M values (defaulting to 0.0) will be inserted into the returned MultiPoint.
if not specified then TRUE is assumed by default.
NULL will be returned on invalid arguments, or if any error is encountered or if there aren't undraped Vertices.""" ;
    fno:name "DrapeLineExceptions" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """ST_DrapeLineExceptions( geom1 Geometry , geom2 Geometry ) : Geometry

ST_DrapeLineExceptions( geom1 Geometry , geom2 Geometry , tolerance Double ) : Geometry

ST_DrapeLineExceptions( geom1 Geometry , geom2 Geometry , tolerance Double , interpolated Bool ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d971b5af9f864265871d0b5e999282f5 a fno:Function ;
    dcterms:description """Will import an external DBF file into an internal Table:
Mandatory arguments:
filename absolute or relative path leading to the DBF (including the .dbf suffix).
table name of the table to be created.
charset the character encoding adopted by the DBF, as e.g. UTF-8 or CP1252
Optional arguments:
pk_column name of a DBF column to be used in the Primary Key role; an INTEGER AUTOINCREMENT PK will be created by default (it can legitimately be NULL).
text_dates boolean flag: interpreting DBF dates as plaintext or not: 0 by default (i.e. as Julian Day).
colname_case one between:
LOWER or LOWERCASE: all column names will be converted to lowercase (default option).
UPPER or UPPERCASE: all column names will be converted to uppercase.
SAME or SAMECASE: all column names will be left as they are.

Will return the total number of imported rows.
NULL will be returned on invalid arguments or on any other error condition.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportDBF" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportDBF( filename Text , table Text , charset Text ) : Integer

ImportDBF( filename Text , table Text , charset Text [ , pk_column Text [ , text_dates Integer [ , colname_case Text ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d977549e7d8a41bf96ed9b839ae51621 a fno:Function ;
    dcterms:description """virtual_table_name is expected to identify some Table of the VirtualShape or VirtualGeoJSON type.
An Envelope Geometry will be returned corresponding to the Full Extent; NULL will be returned if any error occurs (invalid argument type or non existing VirtualTable).

Both GetVirtualShapeExtent() and GetVirtualGeoJsonExtent() are accepted alias names for this SQL function.""" ;
    fno:name "GetVirtualTableExtent" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "GetVirtualTableExtent( virtual_table_name String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:d9d7fe3c7e6448eaa9d4ffc725f4441c a fno:Function ;
    dcterms:description "a Geometry will be returned representing the POINT defined by [x y] coordinates" ;
    fno:name "MakePoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakePoint( x Double precision , y Double precision , [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:d9e728cc99f545358a5e67c37a4ad44e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Boundary.htm> ;
    fno:name "ST_Boundary" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:da4bea7cef6548df8845743685da22eb a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GMLToSQL.htm> ;
    fno:name "ST_GMLToSQL" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:da5dd184329a419bb6bfd4f474887e1d a fno:Function ;
    dcterms:description """return a BLOB-encoded Affine Transformation matrix representing a Rotate transformation (along the Y axis).

will return NULL on invalid argument.""" ;
    fno:name "ATM_CreateYRoll" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_CreateYRoll( angleInDegrees Double precision ] ) : AffineMatrix" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:da879bd382454fbb9455a9d0d2faa6dc a fno:Function ;
    dcterms:description """Will remove from the given Topology all Faces presenting both a Circularity index smaller than min-circularity and an area smaller than min-area.
for a formal definition of the Circularity index please see Circularity()
the Circularity index ranges between 1.0 and 0.0, so setting min-circularity to a value equal or greater than 1.0 will implicitly disable the corresponding check.
the optional argument min-area if not specified will assume a 0.0 value thus implicitly disabling the corresponding check.

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_RemoveSmallFaces" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_RemoveSmallFaces( toponame Text , min-circularity Double precision ) : Integer

TopoGeo_RemoveSmallFaces( toponame Text , min-circularity Double precision , min-area Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:daa7f0d6319741b0a00b0f918fddddbb a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Shift_Longitude.htm> ;
    fno:name "ST_Shift_Longitude" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:dabc2ec9025b4927af70847c30cc0897 a fno:Function ;
    dcterms:description """Will remove all duplicate rows from the given table preserving only a single occurrence.
The optional argument transaction determines if an internal SQL Transaction should be automatically started or not (the default setting if not explicitly overridden is TRUE).

Will return the total number of deleted rows.
NULL will be returned on invalid arguments.""" ;
    fno:name "RemoveDuplicateRows" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """RemoveDuplicateRows( table Text ) : Integer

RemoveDuplicateRows( table Text , transaction Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:db583238a7084ba1b668f472363beed9 a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a POLYGON or MULTIPOLYGON) will be returned.
The input Geometry is expected to represent a LINESTRING or a MULTILINESTRING.
The input Geometry can be an arbitrary collection of sparse Linestrings: this function will then try to (possibly) reassemble them into one (or more) polygon(s).

NULL will be returned if any error is encountered""" ;
    fno:name "BuildArea" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """BuildArea( geom Geometry ) : Geometry

ST_BuildArea( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:db6d2c8e15d543dda2f35967211b2204 a fno:Function ;
    dcterms:description """returns the TWKB [Tiny Well Known Binary] representation (PostGIS/Mapnik compatibility)
the optional arguments precision_xy, precision_z and precision_m are intended to specify how many decimal digits should be preserved for the corresponding coordinate (less decimal digits = stronger compression). If not specified the default value is alwasy ZERO (no decimal digits at all).
the optional arguments with_size and with_bbox are of the Boolean type (TRUE or FALSE) and respectively control if the TWKB geometry should include or not a size and/or a BBOX. If not specified the default value is always FALSE.""" ;
    fno:name "AsTWKB" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax """AsTWKB( geom Geometry ) : TWKB-blob

AsTWKB( geom Geometry , precision_xy Integer) : TWKB-blob

AsTWKB( geom Geometry , precision_xy Integer , precision_z Integer ) : TWKB-blob

AsTWKB( geom Geometry , precision_xy Integer , precision_z Integer , precision_m Integer ) : TWKB-blob

AsTWKB( geom Geometry , precision_xy Integer , precision_z Integer , precision_m Integer , with_size Integer ) : TWKB-blob

AsTWKB( geom Geometry , precision_xy Integer , precision_z Integer , precision_m Integer , with_size Integer , with_bbox Integer ) : TWKB-blob""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:dc141d31089a473688cee4849d5721f9 a fno:Function ;
    dcterms:description """Checks a TEXT string testing if it corresponds to a Number.
The function returns 1 if TRUE and 0 if FALSE; -1 is returned when the argument is not a Text string.

convenience predicate: same as IsInteger(value) OR IsDecimalNumber(value).""" ;
    fno:name "IsNumber" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "IsNumber( value Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:dc1c2a8938994100acc1a793ff03f964 a fno:Function ;
    dcterms:description " LINESTRING to  POLYGON" ;
    fno:name "ST_MakePolygon" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:dc314914f65f4d5389641e077fa3abb0 a fno:Function ;
    dcterms:description """Builds an MbrCache on a geometry column, creating any required trigger required in order to enforce full data coherency between the main table and the MbrCache

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "CreateMbrCache" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CreateMbrCache( table String , column String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:dc35ea04997f4f5fb86e52e0d488a6ba a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling GEOS3100" ;
    fno:name "HasGeos3100" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasGeos3100( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:dc69c39ebde5486e8ed382ac1d8a4100 a fno:Function ;
    dcterms:description """Return a derived geometry collection value with elements that match the specified range of measures.
NULL will be returned if any error is encountered (or when no element corresponding to the given range of measures is found).
Please note: NULL will be returned if geom doesn't contain M-dimension, or if geom contains a Polygon, or if geom is a GeometryCollection.""" ;
    fno:name "LocateBetweenMeasures" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Linear Referencing" ;
    gsrdb:hasSyntax """ST_Locate_Between_Measures( geom Geometry , m_start Double precision , m_end Double precision ) : Geometry

ST_LocateBetween( geom Geometry , m_start Double precision , m_end Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:dcaa0a6b022e4947a6c8fc8393c31521 a fno:Function ;
    dcterms:description """Will attempt to split all Edges into a collection of shorter Edges fully respecting Topology consistency.
The interpretation of line_max_points and line_max_lenght arguments is the same adopted by TopoGeo_SubdivideLines()
Edges and Nodes will be handled by implicitly calling ST_ModEdgeSplit()

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_ModEdgeSplit" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_ModEdgeSplit( toponame Text , line_max_points Integer ) : Integer

TopoGeo_ModEdgeSplit( toponame Text , line_max_points Integer , line_max_length Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:dcc74dc869fb4d2ba9e5cf19284e554e a fno:Function ;
    dcterms:description """return the basename of the nth (1-based) Shapefile contained within the Zipfile identified by zip_path
NULL on invalid arguments or if the Zipfile does not exist or is corrupted.""" ;
    fno:name "Zipfile_ShpN" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "Zipfile_ShpN( zip_path Text , idx Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:dcd7c71c9af14fc8b7e1ab5678b70e0d a fno:Function ;
    dcterms:description "meters / U.S. chains" ;
    fno:name "U.S. Chain" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToUsCh( x Double precision ) : Double precision

CvtFromUsCh( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:dd2e8d5376f04f709e66d414da272880 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomFromKML.htm> ;
    fno:name "ST_GeomFromKML" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ddd55cf8beb94299a89fec3361150146 a fno:Function ;
    dcterms:description "Reset the internal XML Schema cache to its initial empty state." ;
    fno:name "XB_CacheFlush" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_CacheFlush( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:df533492bb4147deab51db26d3b243d7 a fno:Function ;
    dcterms:description """Will update all persistent Link-Seeds so to correctly represent the current state of the underlying Network.
if the optional argument incremental-mode is set to TRUE an incremental update (faster) will be applied, otherwise all persistent Seeds will be rebuilt from scratch (slower).

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_UpdateSeeds" ;
    gsrdb:hasRequiredModule "RTTOPOM" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax """TopoNet_UpdateSeeds( netname Text ) : Integer

TopoNet_UpdateSeeds( netname Text , incremental-mode Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:dfb8bd882d824a20a262b8582247ea35 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LocateBetweenElevations.htm> ;
    fno:name "ST_LocateBetweenElevations" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:dfe961c8b46d4a759ac629f792756849 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Length3D_Spheroid.htm> ;
    fno:name "ST_Length3D_Spheroid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:e0128e56e74e494eb8c457ea6213a6e5 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/Box2D.htm> ;
    fno:name "Box2D" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:e01cb3c3563e4fc3bc1ceef1f70fa94a a fno:Function ;
    dcterms:description """return a serialized text string corresponding to the Polynomial coeffs.

will return NULL on invalid argument.""" ;
    fno:name "GCP_AsText" ;
    gsrdb:hasRequiredModule """GrassGis code
GPLv2+""" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "GCP_AsText( matrix PolynomialCoeffs ] ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e01e85b5c25d417fab99c2910c42c51b a fno:Function ;
    dcterms:description """returns a new Linestring by replacing one or more Vertices accordingly to the content of an auxiliary helper table.

Note: this one is a very special SQL Function not intended for general purposes but mostly for supporting power users.
Its intended scope is to make easier the task of cleaning/snapping very dirty linear geometries before any attempt to load them into a Topology.

The expected layout of the auxiliary helper table is as follows:
CREATE TABLE helper_table (
    fid INTEGER NOT NULL,
-- column containing Feature IDs
    pos INTEGER NOT NULL,
-- column containing vertex positions (zero-based index)
    CONSTRAINT pk_helptbl PRIMARY KEY (fid, pos));
SELECT AddGeometryColumn('helper_table', 'geom', someSRID, 'POINT', dimensions );
-- Geometry column of the POINT type containing the new vertices to be replaced

Arguments interpretation:
line is the input Linestring to be edited.
pk_value is the Feature ID corresponding to the above Linestring
table_name is the name of the auxiliari helper table always assumed to be on the MAIN DB. (in this example 'helper_table')
point_name is the name of the column containing the new Points to be replaced. (in this example 'geom')
pk_name is the name of the column containing Feature IDs. (in this example 'fid')
position_name is the name of the column containing Vertices' relative positions. (in this example 'pos')
Remarks:
point_name must be a registered Geometry and must have tha same SRID and Dimensions of the input Linestring.
Only the Vertices matching pk_value will be taken in consideration.
Rows from the helper table eventually exceeding the position range allowed by the Linestring will be silently ignored.
All Vertices not matching any row in the helper table will be left untouched as they are.
Multiple definitions of the same position will raise an Exception.
an Exception will be raised if any error is encountered.""" ;
    fno:name "SetMultiplePoints" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type LineString" ;
    gsrdb:hasSyntax """SetMultiplePoints( line LineString , pk_value Integer , table_name Text , point_name Text, pk_name Text , position_name Text ) : Linestring

ST_SetMultiplePoints( line LineString , pk_value Integer , table_name Text , point_name Text, pk_name Text , position_name Text ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e03e09a5d9cb4e57be84f96e19723625 a fno:Function ;
    dcterms:description """This function will inspect the DB layout, then automatically destroying any VirtualGPKG wrapper found

the return type is Integer [how many VirtualGPKG tables have been destroyed]

The optional db_prefix argument specifies which one of the ATTACHED databases is intended to be targeted; if unspecified or NULL then the MAIN database will be assumed by default.""" ;
    fno:name "AutoGPKGStop" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax """AutoGPKGStop( void ) : Integer

AutoGPKGStop( db_prefix String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e05d59051a244fe1a255a251ae473214 a fno:Function ;
    dcterms:description "meters / international links" ;
    fno:name "International Link" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToLink( x Double precision ) : Double precision

CvtFromLink( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e06f7ccdc70c493db9d3505f5dce7aae a fno:Function ;
    dcterms:description """Evaluates if an intersection matrix [DE-9IM] satisfies an intersection pattern.

The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments.""" ;
    fno:name "RelateMatch" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax "ST_RelatedMatch( matrix Text , pattern Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e0f85bb5b2ec4873b8e02aa4a71e879d a fno:Function ;
    dcterms:description "Compute the sun position" ;
    fno:name "ST_SunPosition" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:e1a1a55df0c0433fa3071e59333d6891 a fno:Function ;
    dcterms:description """If XmlObject is of the XmlBLOB-type, and if filepath corresponds to some valid pathname (accessible in write/create mode), then the corresponding file will be created/overwritten so to contain the corresponding XML Document (fully preserving the original character encoding).
If the optional argument indent is set to some positive value then the returned XmlDocument will be nicely formatted and properly indented by the required factor; ZERO will cause the whole XmlDocument to be returned as a single line. (default setting is negative indenting, i.e. not reformatting at all).

The return type is Integer, with a return value of 1 for success, 0 for failure and -1 for invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.
Please see: CountUnsafeTriggers()""" ;
    fno:name "XB_StoreXML" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax """XB_StoreXML( XmlObject XmlBLOB , filepath String ) : Integer

XB_StoreXML( XmlObject XmlBLOB , filepath String , indent Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e1c6b92891654384a65ed35d8a73c0b6 a fno:Function ;
    dcterms:description """return a geometric object representing the bounding box that encloses a set of input values
aggregate function""" ;
    fno:name "Extent" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "Extent( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e1ea795491414cffa6120470c8796c2e a fno:Function ;
    dcterms:description "Expand a Geometry's envelope" ;
    fno:name "ST_Expand" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:e29d5afe9b7e4850ae0517b46009ca0d a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsSchemaValidated" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsSchemaValidated( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e307b59183814726acaa48cdb54ecd57 a fno:Function ;
    dcterms:description "The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument." ;
    fno:name "XB_IsIsoMetadata" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_IsIsoMetadata( xmlObject XmlBLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e317d10466744118aabefcac9e4c6357 a fno:Function ;
    dcterms:description """Will remove an isolated NetNode.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "RemIsoNetNode" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_RemIsoNetNode( netname Text , node-id Integer ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e321370e6d4a46fdbf1eadca23ab2022 a fno:Function ;
    dcterms:description """If [and only if] the SRID associated with c is a geographic one [i.e. one using longitude and latitude angles], then returns the length of c measured on the Great Circle [such length is always expressed in meters]
Otherwise NULL will be returned

Please note: lengths measured on the Great Circle are less precise than lengths measured on the Ellipsoid using complex geodesic calculations; but they are by far quickest to compute""" ;
    fno:name "Great Circle Length" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax "GreatCircleLength( c Curve ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e322ab2d08eb4df7968aceb19fcd9f28 a fno:Function ;
    dcterms:description """Adds a keyword to an already defined Raster Coverage.
coverage_name must identify an existing Raster Coverage.
keyword must not be already defined for the same Coverage.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_RegisterRasterCoverageKeyword" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_RegisterRasterCoverageKeyword( coverage_name String , keyword String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e3c44a0dca48459f8a2991362f387b42 a fno:Function ;
    dcterms:description "Compute a Delaunay triangulation based on points" ;
    fno:name "ST_Delaunay" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:e3d0c5da7a964b7483081136217dbed5 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments.

TRUE if the only Points in common between g1 and g2 MBRs lie in the union of the boundaries of g1 and g2""" ;
    fno:name "MbrTouches" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrTouches( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e3e0a6caca004ebd90a586e202acc2f5 a fno:Function ;
    dcterms:description """Resets the most recent error message raised by PostgreSQL.
Returns 1 on success and 0 on failure.

Only intended for internal usage by the VirtualPostgres extension module.""" ;
    fno:name "PostgreSQL_ResetLastError" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "PostgreSQL_ResetLastError() : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e3edc8d2f8f34f959b239f05d15bac9e a fno:Function ;
    dcterms:description """Checks the Spatial Metadata type, then returning:
-1 - on invalid args or if no ATTACHED-DB identified by db_prefix exists.
0 - if the geometry_columns or spatial_ref_sys table does not exists, or if their actual layout doesn't corresponds to any known implementation
1 - if both tables exist, and their layout is the one previously used by SpatiaLite legacy (older versions including 3.1.0 any earlier)
2 - if both tables exist, and their layout is the one used by FDO/OGR
3 - if both tables exist, and their layout is the one currently used by SpatiaLite (4.0.0 or any subsequent version)
4 - if the DB layout is the one defined by the OGC GPKG specification (GeoPackage)

The optional db_prefix argument specifies which one of the ATTACHED databases is intended to be checked; if unspecified or NULL then the MAIN database will be assumed by default.""" ;
    fno:name "CheckSpatialMetaData" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax """CheckSpatialMetaData( void ) : Integer

CheckSpatialMetaData( db_prefix String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e4ccdcd5fc7f4cc487af2aa1b6d212f3 a fno:Function ;
    dcterms:description """Will attempt to add a Linestring (or even a MultiLinestring) to an already existing Topology, possibly splitting existing Edges/Faces.
The optional argument tolerance if omitted will assume the corresponding value declared when creating the target Topology.

Will return a comma separated list of all IDs of the corresponding Edges on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_AddLineString" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_AddLineString( toponame Text , linestring Geometry ) : Integer

TopoGeo_AddLineString( toponame Text , linestring Geometry , tolerance Double precision ) : Text""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:e4d998e433584044b5c1653f880d848e a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a LINESTRING or MULTILINESTRING) will be returned.
The input Geometry is expected to represent a LINESTRING or a MULTILINESTRING.
The input Geometry can be an arbitrary collection of sparse line fragments: this function will then try to (possibly) reassemble them into one (or more) Linestring(s).

NULL will be returned if any error is encountered""" ;
    fno:name "LineMerge" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """LineMerge( geom Geometry ) : Geometry

ST_LineMerge( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e4fdb082b25c480580213d3b071dab5e a fno:Function ;
    dcterms:description "Return the nth point of a  LINESTRING" ;
    fno:name "ST_PointN" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:e53d5a3e56504b35aa5fabe4cfb03bb4 a fno:Function ;
    dcterms:description """returns a Geometry from a GoogleMaps encoded Polyline.
The optional arguments precision is intended to specify how many decimal digist should be preserved (default value: 5).
Note: the returned Geometry will always be a LINESTRING in the SRID=4326.

NULL will be returned on invalid arguments.""" ;
    fno:name "LineFromEncodedPolyline" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax """ST_LineFromEncodedPolyline( polyline TEXT ) : Geometry

ST_LineFromEncodedPolyline( polyline TEXT , precision Integer ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e579b1eb9d8147129f727fbb690d56e9 a fno:Function ;
    dcterms:description """Will return the Schema URI effectively used to validate an XmlBLOB.

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when the XmlBLOB isn't validated.""" ;
    fno:name "XB_GetSchemaURI" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetSchemaURI( xmlObject XmlBLOB ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e5831901d60d4b5f970997961dd24e0d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_PolygonFromText.htm> ;
    fno:name "ST_PolygonFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:e58740cf9d2e422c9da2d0b097b22dda a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments;

convenience predicate: TRUE if the intersection of g1 and g2 MBRs is not empty""" ;
    fno:name "MbrIntersects" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrIntersects( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e598dd4f208f4ae2897a42f3c1c7752c a fno:Function ;
    dcterms:description "Return the 3D perimeter of a (multi)polygon" ;
    fno:name "ST_3DPerimeter" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:e6020bdd3f7145d984892ecf6c8c9d0e a fno:Function ;
    dcterms:description """will return a DMS string (Degrees, Minutes and Seconds) using the given DD (Decimal Degrees) input coordinates
the optional argument decimal_digits, when explicitly specified, will determine how many decimal digits must be used for representig Seconds.Zero (or a negative value) intends that Seconds will be represented by an integer value (default setting).

NULL will be returned on invalid input.""" ;
    fno:name "DD to DMS" ;
    gsrdb:hasScope "SQL conversion functions from DD/DMS notations (longitude/latitude)" ;
    gsrdb:hasSyntax """LongLatToDMS( longitude Double precision , latitude Double precision ) : String

LongLatToDMS( longitude Double precision , latitude Double precision , decimal_digits Integer ) : String""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e61c8da4a68c4f1d801a34feeea185c2 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments.

TRUE if the intersection of g1 and g2 MBRs results in a value of the same dimension as g1 and g2 that is different from both g1 and g2""" ;
    fno:name "MbrOverlaps" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrOverlaps( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e62712bc483b4f9e90c9ac2555dcba82 a fno:Function ;
    dcterms:description "returns the EWKB [Extended Well Known Binary] representation (PostGIS compatibility)" ;
    fno:name "AsEWKB" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "AsEWKB( geom Geometry ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e679ce79a7d543b78f2399e3fdc82ef1 a fno:Function ;
    dcterms:description "return a geometric object obtained by translating coordinates according to shiftX and shiftY values" ;
    fno:name """ShiftCoords
ShiftCoordinates""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax """ShiftCoords( geom Geometry , shiftX Double precision , shiftY Double precision ) : Geometry

ShiftCoordinates( geom Geometry , shiftX Double precision , shiftY Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e68d8c26f22b45d7bffdb6f111952276 a fno:Function ;
    dcterms:description """Will attempt to add both node_from and nodes_to columns to the Spatial Table identified by db_prefix, spatial_table and geom_column. These two columns will be populated by inserting appropriate Node-IDs (of the INTEGER type) fully respecting the topological consistency of the network.
db_prefix could be NULL, and in this case the MAIN DB is implicitly assumed.
also geom_column could be NULL, and in this case the name of the Geometry column will be automatically detected if the Spatial Table has just a single Geometry.
geom_column must contain Geometries of the LINESTRING type.
both node_from and node_to columns should not exist.

1 (aka TRUE) will be returned on success, an exception will be raised on failure.""" ;
    fno:name "CreateRoutingNodes" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax "CreateRoutingNodes( db_prefix String , spatial_table String , geom_column String , node_from String , node_to String ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e6dde7b19277435ea4913b8bfc7bffa6 a fno:Function ;
    dcterms:description """returns a GoogleMaps encoded Polyline from a Geometry.
The optional arguments precision is intended to specify how many decimal digits should be preserved (default value: 5).
Note: the input Geometry must be a LINESTRING in some geographic SRID (coordinates expressed as longitude and latitude angles).

NULL will be returned on invalid arguments.""" ;
    fno:name "AsEncodedPolyline" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax """ST_AsEncodedPolyline( geom Geometry ) : TEXT

ST_AsEncodedPolyline( geom Geometry , precision Integer ) : TEXT""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e6ff80285d564b63aedde1240115646a a fno:Function ;
    dcterms:description """returns the natural logarithm of x; that is, the base-e logarithm of x
If x is less than or equal to 0, then NULL is returned""" ;
    fno:name """Ln
Log""" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax """Ln( x Double precision ) : Double precision

Log( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e710b8ea609340088c4dc4585e52e29c a fno:Function ;
    dcterms:description "Well Known Text to  POLYGON" ;
    fno:name "ST_PolyFromText" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:e71d18eeea884fde93858a56d139bc0c a fno:Function ;
    dcterms:description "Return the OGC SFS type code of a Geometry" ;
    fno:name "ST_GeometryTypeCode" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:e7614d532548405f8e64643c8d393339 a fno:Function ;
    dcterms:description """Will add a new Link connecting two NetNodes.

Will return the ID of the inserted Link on success; an exception will be raised on failure.""" ;
    fno:name "AddLink" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_AddLink( netname Text , startnode-id Integer , endnode-id Integer , linestring Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e79eb35eca85498c8d0d2af3118ca149 a fno:Function ;
    dcterms:description "Return the point of Geometry A closest to Geometry B" ;
    fno:name "ST_ClosestPoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:e81f1f447e654e95924a9dabc6a7f433 a fno:Function ;
    dcterms:description "construct a geometric object given its GML Representation" ;
    fno:name "GeomFromGML" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "GeomFromGML( gmlGeometry String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e84a21476de744a5bdbdd6ffee551967 a fno:Function ;
    dcterms:description """Returns a LineString whose endpoints define the minimum clearance of a geometry.
NULL is returned on failure, or if the geometry has no minimum clearance (as e.g. a POINT)

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSMinimumClearanceLine" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSMinimumClearanceLine( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e892ce6929fe46eaa2cdeb7e726eeb10 a fno:Function ;
    dcterms:description """Updates an already existing RL2 Map Configuration definition.
config is expected to be an XmlBLOB containing a valid RL2 Map Configuration.If CreateStylingTables() was invoked without specifying the relaxed option this XmlBLOB is expected to have successfully passed a formal XML Schema Validation.The updated Map Configuration will continue to be identified by its current unique Config ID but the Config Name will be automatically updated accordingly to XML.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on error.""" ;
    fno:name "RL2_ReloadMapConfiguration" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """RL2_ReloadMapConfiguration( config_id Integer , config BLOB ) : Integer

RL2_ReloadMapConfiguration( config_name Text , config BLOB ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e8c263f49c4e4f08b223aacdd0f20934 a fno:Function ;
    dcterms:description """This one simply is a convenience function accepting the same arguments of InitSpatialMetaData() (with identical meaning).
The intended scope is to fully initialize all metadata tables required by libspatialite 5.0.0 (and following versions). This function will internally call in a single pass:
InitSpatialMetaData()
InitAdvancedMetaData()
CreateRasterCoveragesTable()
CreateVectorCoveragesTables()
CreateStylingTables()
the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "InitSpatialMetaDataFull" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax """InitSpatialMetaDataFull( void ) : Integer

InitSpatialMetaDataFull( transaction Integer ) : Integer

InitSpatialMetaDataFull( mode String ) : Integer

InitSpatialMetaDataFull( transaction Integer , mode String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e8dcbbb35fc94d66a114de8291cfaaa4 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LineFromMultiPoint.htm> ;
    fno:name "ST_LineFromMultiPoint" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:e8e400bc4d3b483b92e3453324e8c262 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Polygon.htm> ;
    fno:name "ST_Polygon" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:e9244f8a78184af0aa0cb9d1c86cf473 a fno:Function ;
    dcterms:description """Will set the current Join Style. Accepted styles (case insensitive) are: ROUND, MITRE or MITER, BEVEL
Returns TRUE on success, FALSE on failure.""" ;
    fno:name "BufferOptions_SetJoinStyle" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "BufferOptions_SetJoinStyle( style Text ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e93d294876a84f06b3b9467737e6505a a fno:Function ;
    dcterms:description """Check if a Geometry corresponds to a valid Trajectory.
a Trajectory is assumed to be a LINESTRING supporting M-values growing from each vertex to the next.

NULL will be returned on invalid arguments.""" ;
    fno:name "IsValidTrajectory" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Linear Referencing" ;
    gsrdb:hasSyntax "ST_IsValidTrajectory( geom Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:e9653d405281431ebf1c67d639b4dac9 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsEWKB.htm> ;
    fno:name "ST_AsEWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:e984a5e76c114e35a280306b97520b8f a fno:Function ;
    dcterms:description """Will return a BLOB object of the Sql Procedure type encapsulating the SQL Body loaded from the given filepath.
If the optional second argument is explicitly specified the SQL Body will be automatically converted from the given charset encoding into UTF-8.

1 will be returned on success; an exception will be raised on failure or invalid arguments.

Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "SqlProc_FromFile" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_FromFile( filepath String ) : BLOB

SqlProc_FromFile( filepath String, charset_encoding String ) : BLOB""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:e9d3b97ebc1e4de3886915d6cc93749e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_RotateX.htm> ;
    fno:name "ST_RotateX" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ea2afb03114a415eab7b2673fefc9463 a fno:Function ;
    dcterms:description "returns the intput value possibly casted to the Double data-type; NULL if no conversion is possible." ;
    fno:name "CastToDouble" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "CastToDouble( value Generic ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ea2b7f46dcf547048e0f9fcc19e0a52f a fno:Function ;
    dcterms:description """will return a closed LINESTRING approximating the Ellipse defined by cx, cy and x_axis, y_axis.
The optional argument step if specified defines how many points will be interpolated on the ellipse; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeEllipse" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeEllipse( cx Double precision , cy Double precision , x_axis Double precision , y_axis Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ea48a23727194960a16d4b35f58c02a2 a fno:Function ;
    dcterms:description """returns a Geometry using the [XYZM] space dimension.
If the input Geometry already supports Z coordinates they'll be preserved as they are.
If the input Geometry does not support Z coordinates they'll be set to z_no_data (defaulting to 0.0 if z_no_data is not specified).
The same rule applies to M coordinates and m_no_data.""" ;
    fno:name "CastToXYZM" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Space-dimensions casting functions" ;
    gsrdb:hasSyntax """CastToXYZM( geom Geometry ) : geom Geometry

CastToXYZM( geom Geometry , z_no_data Double , m_no_data Double ) : geom Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ea82cd2639a84322a5f579b095f33afd a fno:Function ;
    dcterms:description "Return true if the Geometry is a rectangle" ;
    fno:name "ST_IsRectangle" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:eac7789ce06b4c09920b476f37937ede a fno:Function ;
    dcterms:description """returns a POINT-, LINESTRING- or POLYGON-type Geometry [if type-conversion is possible], or NULL in any other case

a POINT will be returned for a Geometry containing only a single POINT and no other elementary sub-geometry
a LINESTRING will be returned for a Geometry containing only a single LINESTRING and no other elementary sub-geometry
a POLYGON will be returned for a Geometry containing only a single POLYGON and no other elementary sub-geometry""" ;
    fno:name "CastToSingle" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL Geometry-type casting functions" ;
    gsrdb:hasSyntax "CastToSingle( geom Geometry ) : geom Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:eaf74461a18842e18f7f3166e99db917 a fno:Function ;
    dcterms:description "Just an alias-name for ST_ForcePolygonCW(). Note: this function in Spatialite has a different interpretation then in PostGIS." ;
    fno:name "ForceLHR" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_ForceLHR( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:eb0b9df5102045f7985de76fcd44fc3f a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MinimumBoundingCircle.htm> ;
    fno:name "ST_MinimumBoundingCircle" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:eb29d32bbc2044968489198af846d881 a fno:Function ;
    dcterms:description """return a geometric object obtained by translating any negative longitude by 360.

Only meaningful for geographic (longitude/latitude) coordinates.
Negative longitudes (-180/0) will be shifted by 360, thus allowing to represent longitudes in the 0/360 range and effectively crossing the International Date Line.""" ;
    fno:name "ST_Shift_Longitude" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for coordinate transformations" ;
    gsrdb:hasSyntax "ST_Shift_Longitude( geom Geometry ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:eb40ff0bc6234dec89f895e3e690fc9d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Estimated_Extent.htm> ;
    fno:name "ST_Estimated_Extent" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:ebcf7c7ed91e412b9d633a5483f87efa a fno:Function ;
    dcterms:description """returns the dimension number used by the geometric object as:
2, 3 or 4 respectively for XY, XYZ and XYZM (3 for XYM)""" ;
    fno:name "NDims" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax "ST_NDims( geom Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ebed12ba9bae4b5b81b37f01359d18d3 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_IsValidReason.htm> ;
    fno:name "ST_IsValidReason" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ec068f813583457a83d2e50104ed0415 a fno:Function ;
    dcterms:description """returns the value most recently obtained by sequence_nextval()
Will return NULL if sequence_nextval() has not yet been used.""" ;
    fno:name "sequence_lastval" ;
    gsrdb:hasScope "SQL functions manipulating Sequences" ;
    gsrdb:hasSyntax "sequence_lastval ( void ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ec06a061c2e147deab35ec4c1fab329c a fno:Function ;
    dcterms:description """Removes an already defined keyword from a Vector Coverage.
coverage_name and keyword must identify some previously defined keyword.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterVectorCoverageKeyword" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_UnregisterVectorCoverageKeyword( coverage_name String , keyword String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ec48cf178e864563bbece913bc29651d a fno:Function ;
    dcterms:description """Will export an internal Table as an external Shapefile:
table name of the table to be exported.
geom_column name of the Geometry column.
filename absolute or relative path leading to the Shapefile (omitting any .shp, .shx or .dbf suffix).
charset the character encoding adopted by the DBF member, as e.g. UTF-8 or CP1252
the optional argument geom_type is useful when exporting unregistered Geometries, and can be one between: POINT, LINESTRING, POLYGON or MULTIPOINT.
colname_case (optional argument) can be one between:
LOWER or LOWERCASE: all column names will be converted to lowercase (default option).
UPPER or UPPERCASE: all column names will be converted to uppercase.
SAME or SAMECASE: all column names will be left as they are.

Will return the total number of exported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ExportSHP" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ExportSHP( table Text , geom_column Text , filename Text , charset Text ) : Integer

ExportSHP( table Text , geom_column Text , filename Text , charset Text , [ geom_type Text [ , colname_case Text ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ec7e7fb12302436fa8515f8d4dd6da37 a fno:Function ;
    dcterms:description "Compute a ring buffer on one side" ;
    fno:name "ST_RingSideBuffer" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ecf6fad9c76444ae80a8dc4c72309d13 a fno:Function ;
    dcterms:description "Return true if a Geometry is empty" ;
    fno:name "ST_IsEmpty" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:ed1d19f57a4c41d5b64e6dca6d932911 a fno:Function ;
    dcterms:description """Will return the currently set pathname leading to the private PROJ's SQLite database.

NULL will be returned if there is no private PROJ's SQLite database currently connected.
Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).""" ;
    fno:name "PROJ_GetDatabasePath" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax "PROJ_GetDatabasePath( void ) : String" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ede1405dc3994afe86cd94f7f48a70c0 a fno:Function ;
    dcterms:description """Exactly the same as TopoNet_ToGeoTable() except in that all exported geometries will be simplified / generalized still maintaining full topological consistency.
tolerance represents the approximation radius required by the Douglas-Peuker simplification algorithm.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoNet_ToGeoTableGeneralize" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax """TopoNet_ToGeoTableGeneralize( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text , tolerance Double precision ) : Integer

TopoNet_ToGeoTableGeneralize( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, out-table Text , tolerance Double precision , with-spatial-index Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:ee069588a2fc4fb9bdb56ebafcaf28bf a fno:Function ;
    dcterms:description """Returns the currently set decimal precision.
A negative precision identifies the default setting.""" ;
    fno:name "GetDecimalPrecision" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "GetDecimalPrecision( void ) : integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ee0c924111624589bdef7e8c224b6e1d a fno:Function ;
    dcterms:description """Will remove from the given Topology all dangling Nodes.

Will return 1 on full success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_RemoveDanglingNodes" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "TopoGeo_RemoveDanglingNodes( toponame Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:ee47179a29804518bf565093ed124f22 a fno:Function ;
    dcterms:description """will return a POLYGON approximating the Circular Sector defined by cx, cy and radius; the arc's extremities will be defined by start, stop angles expressed in degrees.
The optional argument step if specified defines how many points will be interpolated on the circumference; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeCircularSector" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeCircularSector( cx Double precision , cy Double precision , radius Double precision , start Double precision , stop Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ee50656fe65b4b5db8237fa703926d5b a fno:Function ;
    dcterms:description "Potentially reverse a Geometry according to the z-values of its first and last coordinates" ;
    fno:name "ST_Reverse3DLine" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:ee54a5a4f0df4a70aebce239de700c87 a fno:Function ;
    dcterms:description """Updates the splite_metacatalog_statistics table by computing the statistic summary for the required table/column.
if the first argument transaction is set to TRUE the whole operation will be handled as a single Transaction (faster): the default setting is transaction=FALSE (slower, but safer).

the first form (using three arguments) will simply attempt to update the statistic summary for a single table/column as identified by their names: a matching row is expected to be found in splite_metacatalog.

the second form (using four arguments) allows to update the statistic summary for many table/columns in a single pass.
in this case master_table should identify an existing table: table_name and column_name should identify two columns belonging to this tables.
the statistic summary for every table/columns fetched from the master table will then be updated: any mismatching table/column will be simply ignored.

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "UpdateMetaCatalogStatistics" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting the MetaCatalog and related Statistics" ;
    gsrdb:hasSyntax """UpdateMetaCatalogStatistics( transaction Integer , table_name String , column_name String ) : Integer

UpdateMetaCatalogStatistics( transaction Integer , master_table String , table_name String , column_name String ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ee8c8bc32c8e40b1a50c2269c3bd81f6 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LineMerge.htm> ;
    fno:name "ST_LineMerge" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ee8fb221e7a546d4ac446cf701f0d4d2 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument.

TRUE if this geometric object is simple, as defined in the Geometry Model""" ;
    fno:name "IsSimple" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Geometry" ;
    gsrdb:hasSyntax """IsSimple( geom Geometry ) : Integer

ST_IsSimple( geom Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:eecc953041a14962badaa80486613826 a fno:Function ;
    dcterms:description """returns a new Geometry derived from the input Geometry; all repeated vertices found in Linestrings or Rings will be removed and the same applies to repeated points found in Multipoints.
This function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.
if the optional argument tolerance is defined all vertices/points presenting a distance less or equal to this value will be considered as repeated points.The default tolerance value is 0.0, this intending an exact coincidence; the same applies to any negative tolerance.
Linestring or Ring vertices are considered to be repeated only if they are consecutive.
Multipoint points are considered to be repeated independentely from their relative order.

Will return NULL on invalid arguments.""" ;
    fno:name "RemoveRepeatedPoints" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions attempting to repair malformed Geometries" ;
    gsrdb:hasSyntax """RemoveRepeatedPoints( geom Geometry ) : geom Geometry

RemoveRepeatedPoints( geom Geometry , tolerance Double ) : geom Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:eee391606c424d108291b3fdda43b06b a fno:Function ;
    dcterms:description "Tessellate a set of Polygon with adaptive triangles" ;
    fno:name "ST_Tessellate" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:eefec58349f34c85889b6df851de2ff8 a fno:Function ;
    dcterms:description """Will safely rename a Column belonging to a Geometry Table, including any SpatialIndex, triggers, metadata, statistics tables.
Will also work on Columns of ordinary (non-Spatial) Tables, GeoPackage and OGR/FDO Geometries.
db-prefix can be NULL, where the Table containing the Column to be renamed is expected to be located within the "MAIN" database.
The optional argument permissive determines if a retcode will be returned in the case of failure.The default setting, when not explicitly overridden, is FALSE, where an exception will then be raised.
Will not work on Virtual Tables or Views; Spatial Tables can rename their Column only if they are located in the MAIN database.
Any Views using a renamed Column will be adapted with the renamed Column-Name

Will return 1 (i.e. TRUE) on success.
An exception will be raised on invalid arguments or on failure, except when permissive has been explicitly set.
In this case any generic failure (as e.g. attempting to rename a non existing column) will simply return an error code without raising any exception; said in other words, enabling permissive is more or less equivalent to declare an IF EXISTS SQL clause and allows for a relaxed (non blocking) failure handling. When used with a SQLite version < than 3.25 this function will raise an exception.""" ;
    fno:name "RenameColumn" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """RenameColumn( db-prefix Text , table Text , old_colname Text , new_colname Text ) : Integer

RenameColumn( db-prefix Text , table Text , old_colname Text , new_colname Text , permissive Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ef0fa3d2179f47f480543d78925c56f8 a fno:Function ;
    dcterms:description """Removes an already defined keyword from a Raster Coverage.
coverage_name and keyword must identify some previously defined keyword.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterRasterCoverageKeyword" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax "SE_UnregisterRasterCoverageKeyword( coverage_name String , keyword String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:ef228dce645f4174a6f7c372d247afad a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_NPoints.htm> ;
    fno:name "ST_NPoints" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ef3aa5d0de4748f69a478f2442a03243 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_GeomCollFromText.htm> ;
    fno:name "ST_GeomCollFromText" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ef8fe18d34e04e8285b89f747a45d385 a fno:Function ;
    dcterms:description """Will return the SRID value [if any] corresponding to the CRS defined by the .PRJ member of the Shapefile.
Note: exactley as required by ImportSHP() filename must define an absolute or relative path leading to the Shapefile (omitting any .shp, .shx, .dbf or .prj suffix).

-1 will be returned if no CRS supported by PROJ.6 matches the .PRJ member of the Shapefile.
NULL will be returned on invalid path or if no .PRJ member supports the Shapefile.
Note: this SQL function will be available only when SpatiaLite is built on PROJ.6 (or any later version).
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "PROJ_GuessSridFromSHP" ;
    gsrdb:hasScope "SQL functions supporting new PROJ.6 API" ;
    gsrdb:hasSyntax "PROJ_GuessSridFromSHP( filename String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:efa72f56ac374182b05113ce0d023d2f a fno:Function ;
    dcterms:description """returns the File Extension from a relative or absolute Pathname.
Will return NULL for invalid input of for any path lacking a File Name or when no Extension is present.""" ;
    fno:name "FileExtFromPath" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "FileExtFromPath( TEXT ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:efc3aa7cdfe14e0986220a5edf6253e6 a fno:Function ;
    dcterms:description """Will return the Geometry (Bounding Box) defined within the XmlBLOB (if any).

NULL will be returned for any invalid input (not a valid XmlBLOB object), or when no Bounding Box is defined.

Supported only on ISO Metadata XML Documents.""" ;
    fno:name "XB_GetGeometry" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetGeometry( xmlObject XmlBLOB ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:eff925e928dd4ecbb02b08ce3862755e a fno:Function ;
    dcterms:description "Return true Geometries A and B are disjoint" ;
    fno:name "ST_Disjoint" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:effecff553b14fa1a0c58b770a32af8b a fno:Function ;
    dcterms:description """This function will add Geopackage Spatial Index support for the named table.

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgAddSpatialIndex" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgAddSpatialIndex( table_name String , geometry_column_name String ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f01870a8ae24442f952e054e06d0c1e0 a fno:Function ;
    dcterms:description """returns the current PROJ version as a text string
or NULL if PROJ is currently unsupported.

Due to historical reasons there are two alias names for the same functionality.
Note: proj4_version() is now deprecated and will be possibly removed in future versions.""" ;
    fno:name "proj_version" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax """proj_version( void ) : String

proj4_version( void ) : Sting""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f01c84e5f4334ea1b62fcb9b3db73446 a fno:Function ;
    dcterms:description """Unregisters a WMS server (and all related children).

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_UnRegisterGetCapabilities" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax "WMS_UnRegisterGetCapabilities( url Text ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f025a90bca8f4da7b3e5d11488ce6f4a a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid JPEG image""" ;
    fno:name "IsJpegBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsJpegBlob( image BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f04a286287954c1c9bc444bb38835075 a fno:Function ;
    dcterms:description "Transform a Geometry from one CRS to another" ;
    fno:name "ST_Transform" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:f07d984425ca4c92998d3b6bd665def6 a fno:Function ;
    dcterms:description """return a serialized text string corresponding to an Affine Transformation matrix.

will return NULL on invalid argument.""" ;
    fno:name "ATM_AsText" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting Affine Transformations and Ground Control Points" ;
    gsrdb:hasSyntax "ATM_AsText( matrix AffineMatrix ] ) : Text" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f080adacc0944fe6b103d96d84f58d23 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_MakePointM.htm> ;
    fno:name "ST_MakePointM" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:f108fcf4572c4409b56f3342220f7f4c a fno:Function ;
    dcterms:description """Removes an association between a Vector Style and a Vector Styled Layer.
coverage_name must identify an existing Vector Layer.
An already associated Style can be referenced either by its unique Stile ID or by its Name; anyway a reference by Name could eventually fail if the Name is ambiguous (duplicate).

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "SE_UnregisterVectorStyledLayer" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """SE_UnregisterVectorStyledLayer( coverage_name String , style_id Integer ) : Integer

SE_UnregisterVectorStyledLayer( coverage_name String , style_name Text ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f12beebf344c4e8dbdcbc3c8fbcfc196 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_LineToCurve.htm> ;
    fno:name "ST_LineToCurve" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:f131b73664424ca882ad012dda7003ef a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Locate_Between_Measures.htm> ;
    fno:name "ST_Locate_Between_Measures" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:f1517cb9899049cc9da096bcb993204d a fno:Function ;
    dcterms:description "Well Known Binary to  POLYGON" ;
    fno:name "ST_PolyFromWKB" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:f15e60a94eb7424b9c719d1ed442b5fa a fno:Function ;
    dcterms:description """Removes a geometry column from FDO/OGR Spatial MetaData tables
the column itself still continues to exist untouched as an ordinary column

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE""" ;
    fno:name "DiscardFDOGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions implementing FDO/OGR compatibility" ;
    gsrdb:hasSyntax "DiscardFDOGeometryColumn( table String , column String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f16cb8fb532541fa8f580ee055e1b394 a fno:Function ;
    dcterms:description """Will export an internal Table as an external KML file:
Mandatory aguments:
table name of the table to be exported.
geom_column name of the Geometry column.
filename absolute or relative path leading to the KML file.
Optional aguments:
precision number of decimal digits to be exported; 8 by default.
name_column name of the table's column containing KML names.
description_column name of the table's column containing KML descriptions.

Will return the total number of exported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ExportKML" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ExportKML( table Text , geo_column Text , filename Text ) : Integer

ExportKML( table Text , geo_column Text , filename Text [ , precision Integer [ , name_column Text [ , description Text ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f1d45f8b6f3a4e5d9fc55dcc78bab1a5 a fno:Function ;
    dcterms:description """Registers an alternative Reference System for the WMS Layer identified by getmap_url and layer_name
ref_sys: name of Reference System (e.g. 'EPSG:4326' or 'EPSG:32632').
minx, miny, maxx and maxy: the corresponding WMS Layer's Bounding Box (aka full extent).
is_default (optional arg): if the corresponding SRS will become the standard Reference System for the corresponding WMS Layer (FALSE if undefined).

Will return 1 on success; 0 on failure; -1 on invalid arguments.""" ;
    fno:name "WMS_RegisterRefSys" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_RegisterRefSys( getmap_url Text , layer_name Text , ref_sys Text , minx Double , miny Double , maxx Double , maxy Double ) : Integer

WMS_RegisterRefSys( getmap_url Text , layer_name Text , ref_sys Text , minx Double , miny Double , maxx Double , maxy Double , is_default Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f1fe88c684a94197af94faba008388b3 a fno:Function ;
    dcterms:description """Will change the SQL Body on the given Stored Procedure.

Returns TRUE on success, otherwise FALSE. An exception will be raised on invalid arguments.""" ;
    fno:name "StoredProc_UpdateSqlBody" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "StoredProc_UpdateSqlBody( name String , object BLOB ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f2af2bc31bc541d0bda23cbe5879b1d4 a fno:Function ;
    dcterms:description """Will import an external DBF file from a Zipfile into an internal Table. This function is almost the same as ImportDBF(), except in that the DBF file is expected to be stored within some Zipfile.
The only two arguments having a different meaning are:
zip_path: expected to be the full or relative pathname of some Zipfile.
filename name of the Shapefile within the Zipfile (including the .dbf suffix).

Will return the total number of imported rows.
NULL will be returned on invalid arguments.

Please note well: this SQL function opens the door to many potential security issues, and thus is always disabled by default.
Explicitly setting the environment variable SPATIALITE_SECURITY=relaxed is absolutely required in order to enable this function.""" ;
    fno:name "ImportZipDBF" ;
    gsrdb:hasScope "miscellaneous advanced SQL functions" ;
    gsrdb:hasSyntax """ImportZipDBF( zip_path Text , filename Text , table Text , charset Text ) : Integer

ImportZipDBF( zip_path Text , filename Text , table Text , charset Text [ , pk_column Text [ , text_dates Integer [ , colname_case Text ] ] ] ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f2c20407496c457c9a40080c5cb9d9de a fno:Function ;
    dcterms:description "Return the 3D length of a Linestring" ;
    fno:name "ST_3DLength" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:f32016b5cd954d22931792a84d583b4e a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL or invalid arguments.

TRUE if the intersection of g1 and g2 MBRs is the empty set""" ;
    fno:name "MbrDisjoint" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that test approximate spatial relationships via MBRs" ;
    gsrdb:hasSyntax "MbrDisjoint( geom1 Geometry , geom2 Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f33021ad299544b49ffad58c54b103ff a fno:Function ;
    dcterms:description """a Geometry (actually corresponding to a POINT or MULTIPOINT) will be returned.
The input Geometry is arbitrary: any POINT will remain unaffected, but any LINESTRING or RING will be dissolved into elementary Points corresponding to each Vertex.

NULL will be returned if any error is encountered""" ;
    fno:name "DissolvePoints" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """DissolvePoints( geom Geometry ) : Geometry

ST_DissolvePoints( geom Geometry ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f36b78ce90a343bd84415f0d3c823780 a fno:Function ;
    dcterms:description """return a set of equidistant points interpolated along a line; the returned geometry always corresponds to a MULTIPOINT supporting the M coordinate (representing the progressive distance for each interpolated Point).
Second argument represents the regular distance between interpolated points.
NULL is returned for invalid arguments""" ;
    fno:name "Line_Interpolate_Equidistant_Points" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Line_Interpolate_Equidistant_Points( line Curve , distance Double precision) : MultiPoint

ST_Line_Interpolate_Equidistant_Points( line Curve , distance Double precision ) : MultiPoint""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f394a19f53b247be880f9f4e72170c9c a fno:Function ;
    dcterms:description " (MULTI)POINT to  LINESTRING" ;
    fno:name "ST_MakeLine" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:f46277a4d3d548339004bf19bba2a03a a fno:Function ;
    dcterms:description """will return a POLYGON approximating the Circular Stripe delimited by two arcs sharing the same Centre [cx, cy] but having different radii [radius_1, radius_2]; the arc's extremities will be defined by start, stop angles expressed in degrees.
The optional argument step if specified defines how many points will be interpolated on the circumference; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeCircularStripe" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeCircularStripe( cx Double precision , cy Double precision , radius_1 Double precision , radius_2 Double precision , start Double precision , stop Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f4caa6ad37fb4eb4aa69fb05ae53ae10 a fno:Function ;
    dcterms:description "[x y] is assumed to be the center of a circle of given radius; then a Geometry will be returned representing the MBR for this circle" ;
    fno:name "BuildCircleMbr" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "BuildCircleMbr( x Double precision , y Double precision , radius Double precision [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f4cbcd45b6634083bdea6583407d7883 a fno:Function ;
    dcterms:description """returns the GeoJSON [Geographic JavaScript Object Notation] representation

if not explicitly specified precision is 15 decimal digits (default value).

options can assume the following values:
0 no options [default]
1 GeoJSON BoundingBox
2 GeoJSON CRS [short version]
3 BoundingBox + short CRS
4 GeoJSON CRS [long version]
5 BoundingBox + long CRS""" ;
    fno:name "AsGeoJSON" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions supporting exotic geometric formats" ;
    gsrdb:hasSyntax "AsGeoJSON( geom Geometry [ , precision Integer [ , options Integer ] ] ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f4d984ce9e17413ab9569b9519e9eadf a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Zmflag.htm> ;
    fno:name "ST_Zmflag" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:f4ebc83cdd844ef39953a60510a491b0 a fno:Function ;
    dcterms:description "meters / international yards" ;
    fno:name "International Yard" ;
    gsrdb:hasScope "SQL length/distance unit-conversion functions" ;
    gsrdb:hasSyntax """CvtToYd( x Double precision ) : Double precision

CvtFromYd( x Double precision ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f4f18fb6009f4bc2920b1e8672b86474 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with NULL arguments;

convenience predicate: TRUE if g1 completely covers g2""" ;
    fno:name "Covers" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that test spatial relationships" ;
    gsrdb:hasSyntax """Covers( geom1 Geometry , geom2 Geometry ) : Integer

ST_Covers( geom1 Geometry , geom2 Geometry ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f526f0ced0284766a5148894ac9b6d3b a fno:Function ;
    dcterms:description """Builds an RTree Spatial Index on a geometry column, creating any required trigger required in order to enforce full data coherency between the main table and Spatial Index

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE

-1 will be returned if any physical column named "rowid" (caseless) shadowing the real ROWID is detected.""" ;
    fno:name "CreateSpatialIndex" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "CreateSpatialIndex( table String , column String ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f60dc1c36ff147dd84a13abaceba8932 a fno:Function ;
    dcterms:description "[x1 y1] and [x2 y2] are assumed to be Points identifying a line segment; then a Geometry will be returned representing the MBR for this line segment" ;
    fno:name "BuildMbr" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "BuildMbr( x1 Double precision , y1 Double precision , x2 Double precision , y2 Double precision [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f65c5fb5c9dd4f76a36a2e6d5c72a5d2 a fno:Function ;
    dcterms:description """Updates Copyright and License infos associated to a WMS Layer.
getmap_url and layer_name must identify an existing WMS Layer.
copyright identifies the Copyright holder; if NULL the current value will be preserved.
the optional argument license must reference one the Data Licenses registered into the data_licenses table, as e.g. CC0 1.0 or CC BY 4.0.

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.""" ;
    fno:name "WMS_SetGetMapCopyright" ;
    gsrdb:hasScope "SQL functions supporting WMS datasources" ;
    gsrdb:hasSyntax """WMS_SetGetMapCopyright( getmap_url Text , layer_name String , copyright String ) : Integer

WMS_SetGetMapCopyright( getmap_url Text , layer_name String , copyright String , license String ): Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f6d4cb4f260c4b069d6b4326e7d8ac25 a fno:Function ;
    dcterms:description """Will return a new XmlBLOB by inserting a FileIdentifier value.
The input XmlBLOB is expected to be of the ISO Metadata type and must not containt an already defined FileIdentifier.

IdNameSpacePrefix and IdNameSpaceURI are expected to represent the namespace (if any) corresponding to the <fileIdentifier> tag (could be eventually NULL).
CsNameSpacePrefix and CsNameSpaceURI are expected to represent the namespace (if any) corresponding to the <CharacterString> tag (could be eventually NULL).

NULL will be returned for any invalid input.""" ;
    fno:name "XB_AddFileId" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_AddFileId( xmlObject XmlBLOB , fileId String , IdNameSpacePrefix String , IdNameSpaceURI String , CsNameSpacePrefix String , CsNameSpaceURI String ) : XmlBLOB" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f6e9c96bc02e4ca0a85b5385d0a9e52b a fno:Function ;
    dcterms:description "construct a geometric object given its Well-known text Representation" ;
    fno:name "GeomFromText" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """GeomFromText( wkt String [ , SRID Integer] ) : Geometry

ST_GeomFromText( wkt String [ , SRID Integer] ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f6fb8729ce4c4adaa9881baa4fb5b1db a fno:Function ;
    dcterms:description """Will move an isolated NetNode from a point to another.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "MoveIsoNetNode" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_MoveIsoNetNode( netname Text , node-id Integer , point Geometry ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f7134713d91a4c07a9474e6d821c08a9 a fno:Function ;
    dcterms:description """Will create a fully defined new TopoLayer starting from a reference GeoTable:
db-prefix can be NULL, and in this case the reference GeoTable is expected to be located within the "MAIN" database.
ref-column-name too can be NULL, and in this case the name of the column containing Geometries will be automatically retrieved; if "db"."table" does not contains any Geometry column, or if it contains two or more Geometries an exception will be raised.
the reference GeoTable must be properly registered and must match both SRID and dimensions declared by the target Topology.
this function accepts input Geometries of any class: Point, MultiPoint, Linestring, MultiLinestring, Polygon, MultiPolygon, GeometryCollection and Geometry.
if the optional boolean argument is-view is set to TRUE (any other value different from zero) then a View or a Table containing a unregistered Geometry column will be accepted (FALSE by default).In this case ref-column must be always explicitly defined, and must contain all Geometries matching both SRID and dimensions declared by the target Topology.

Will return 1 on success; an exception will be raised on failure.""" ;
    fno:name "TopoGeo_CreateTopoLayer" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """TopoGeo_CreateTopoLayer( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, topolayer-name Text ) : Integer

TopoGeo_CreateTopoLayer( toponame Text , db-prefix Text , ref-table-name Text , ref-column-name Text, topolayer-name Text , is-view Boolean ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:f7141ca51f2e4a5492d4e14954bef3d8 a fno:Function ;
    dcterms:description "construct a GeometryCollection" ;
    fno:name """GeomCollFromWKB
GeometryCollectionFromWKB""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """GeomCollFromWKB( wkbGeometryCollection Binary [ , SRID Integer] ) : GeometryCollection

ST_GeomCollFromWKB( wkbGeometryCollection Binary [ , SRID Integer] ) : GeometryCollection

GeometryCollectionFromWKB( wkbGeometryCollection Binary [ , SRID Integer] ) : GeometryCollection

ST_GeometryCollectionFromWKB( wkbGeometryCollection Binary [ , SRID Integer] ) : GeometryCollection""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f796a0d3acc44ae7ace03ec5852f8db8 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL argument;

return TRUE if c is closed, i.e., if StartPoint(c) = EndPoint(c)""" ;
    fno:name "IsClosed" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """IsClosed( c Curve ) : Integer

ST_IsClosed( c Curve ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f7c907ad9f53426fad13a265fade9e87 a fno:Function ;
    dcterms:description "construct a Linestring" ;
    fno:name """LineFromWKB
LineStringFromWKB""" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Binary Representation" ;
    gsrdb:hasSyntax """LineFromWKB( wkbLineString Binary [ , SRID Integer] ) : Linestring

ST_LineFromWKB( wkbLineString Binary [ , SRID Integer] ) : Linestring

LineStringFromText( wkbLineString Binary [ , SRID Integer] ) : Linestring

ST_LineStringFromText( wkbLineString Binary [ , SRID Integer] ) : Linestring""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f7ca6e2bcf3641c0a03d10a010a5ba03 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Mem_Size.htm> ;
    fno:name "ST_Mem_Size" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:f7dd417d6cc24de09b686d2112e34f23 a fno:Function ;
    dcterms:description """Creates a new geometry column updating the Spatial Metadata tables and creating any required trigger in order to enforce constraints

geom_type has to be one of the followings:
'POINT', 'POINTZ', 'POINTM', 'POINTZM'
'LINESTRING', 'LINESTRINGZ', 'LINESTRINGM', 'LINESTRINGZM'
'POLYGON', 'POLYGONZ', 'POLYGONM', 'POLYGONZM'
'MULTIPOINT', 'MULTIPOINTZ', 'MULTIPOINTM', 'MULTIPOINTZM'
'MULTILINESTRING', 'MULTILINESTRINGZ', 'MULTILINESTRINGM', 'MULTILINESTRINGZM'
'MULTIPOLYGON', 'MULTIPOLYGONZ', 'MULTIPOLYGONM', 'MULTIPOLYGONZM'
'GEOMETRYCOLLECTION', 'GEOMETRYCOLLECTIONZ', 'GEOMETRYCOLLECTIONZM', 'GEOMETRYCOLLECTIONZM'
'GEOMETRY', 'GEOMETRYZ', 'GEOMETRYM', 'GEOMETRYZM'
dimension has to be one of the followings:
'XY' or 2: 2D points, identified by X and Y coordinates
'XYM': 2D points, identified by X and Y coordinates. Each point stores an M-value (measure) as well
'XYZ' or 3: 3D points, identified by X, Y and Z coordinates
'XYZM' or 4: 3D points, identified by X, Y and Z coordinates. Each point stores an M-value (measure) as well
Please note: the dimension argument is optional; when specified, if specified, iy's expected to be consistent with the declared geom_type

the return type is Integer, with a return value of 1 for TRUE or 0 for FALSE

the optional 6th arg [not_null] is a non-standard extension required by the peculiar SQLite arch:
if set to 0 [false], then the Geometry column will accept NULL values as well. This is the default behaviour
if set to any <> 0 value [true], then the Geometry will be defined using a NOT NULL clause""" ;
    fno:name "AddGeometryColumn" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for Spatial-MetaData and Spatial-Index handling" ;
    gsrdb:hasSyntax "AddGeometryColumn( table String , column String , srid Integer , geom_type String [ , dimension String [ , not_null Integer ] ] ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f7fa46de4c644937b7053f11d176c9db a fno:Function ;
    dcterms:description """Will return the most recent XML parsing error (if any).

NULL will be returned if there is no pending parsing error.""" ;
    fno:name "XB_GetLastParseError" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting XmlBLOB" ;
    gsrdb:hasSyntax "XB_GetLastParseError( void ) : String" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f84597f0b6ac40289b089ba1dac996a4 a fno:Function ;
    dcterms:description """Construct a Polygon given an arbitrary collection of closed linestrings as a MultiLineString text representation.

see also: BuildArea(), Polygonize()""" ;
    fno:name "BdPolyFromText" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax """BdPolyFromText( wktMultilinestring String [ , SRID Integer] ) : Polygon

ST_BdPolyFromText( wktMultilinestring String [ , SRID Integer] ) : Polygon""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f8a46f7d9d3e4091a95d34be033cae6e a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_ZMax.htm> ;
    fno:name "ST_ZMax" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:f8d35a61df384f84ab601a9d6d10286b a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_YMin.htm> ;
    fno:name "ST_YMin" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "3" .

gsrdb:f9103395b68b45f384baf2be1d2e9927 a fno:Function ;
    dcterms:description """The return type is Integer, with a return value of 1 for TRUE, 0 for FALSE, and –1 for UNKNOWN when called with a NULL or non-BLOB argument.

TRUE if this BLOB object corresponds to a valid PDF document""" ;
    fno:name "IsPdfBlob" ;
    gsrdb:hasScope "SQL utility functions for BLOB objects" ;
    gsrdb:hasSyntax "IsPdfBlob( content BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:f976e040720a4097bbd076e66e3e4777 a fno:Function ;
    dcterms:description "Return the dimension of a Geometry" ;
    fno:name "ST_Dimension" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:f997fe2c668d4d53bfba2e14d312e737 a fno:Function ;
    dcterms:description """This function will inspect a BLOB then checking if it really corresponds to a GPKG own Geometry

the return type is Integer, with a return value of 1 for TRUE, 0 for FALSE""" ;
    fno:name "IsValidGPB" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "IsValidGPB( geom Blob ) : Integer" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:f9fb94ab97424df8b2e91c50300e817f a fno:Function ;
    dcterms:description "TRUE if the underlying library was built enabling LibXML2" ;
    fno:name "HasLibXML2" ;
    gsrdb:hasScope "SQL Version Info [and build options testing] functions" ;
    gsrdb:hasSyntax "HasLibXML2( void ) : Boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fa5ffbd11e7a4bb185ee270e993fb848 a fno:Function ;
    dcterms:description "Compute the furthest coordinate(s) contained in a Geometry starting from a  POINT" ;
    fno:name "ST_FurthestCoordinate" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:faa937a693f84bc6a6c44d275b036a49 a fno:Function ;
    dcterms:description """SQL/MM compliant: simply an alias name for ST_GeomFromText

Please note: SRID=0 is always assumed.""" ;
    fno:name "ST_WKTToSQL" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions for constructing a geometric object given its Well-known Text Representation" ;
    gsrdb:hasSyntax "ST_WKTToSQL( wkt String ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:faad8db8a8c14b75ba267fee6d73931e a fno:Function ;
    dcterms:description """Constructs the Largest Empty Circle for a set of obstacle geometries, up to a specified tolerance. The obstacles are point and line geometries.
The Largest Empty Circle is the largest circle which has its center in the convex hull of the obstacles (the boundary), and whose interior does not intersect with any obstacle.
The circle center is the point in the interior of the boundary which has the farthest distance from the obstacles (up to tolerance).
The circle is determined by the center point and a point lying on an obstacle indicating the circle radius.
The implementation uses a successive-approximation technique over a grid of square cells covering the area geometry. The grid is refined using a branch-and-bound algorithm. Point containment and distance are computed in a performant way by using spatial indexes.

Returns a two-point linestring, with one point at the center of the inscribed circle and the other on the boundary of the inscribed circle..
NULL is returned on failure.

This SQL function is only available when using GEOS 3.7.0 (or any subsequent version).""" ;
    fno:name "GEOSLargestEmptyCircle" ;
    gsrdb:hasRequiredModule "GEOS-advanced" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS advanced features]" ;
    gsrdb:hasSyntax "GEOSLargestEmptyCircle( geom Geometry , tolerance Double precision ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fab4354863904c0dbb9f17c974676968 a fno:Function ;
    dcterms:description """Will move an isolated Node from a point to another.

Will return a text message on success; an exception will be raised on failure.""" ;
    fno:name "MoveIsoNode" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax "ST_MoveIsoNode( toponame Text , node-id Integer , point Geometry ) : Text" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fadd1a0317d344d9a81a71c3975e598e a fno:Function ;
    dcterms:description """(Re)Creates once again all Triggers supporting SLD/SE Styled Layers tables.
if the optional argument relaxed is explicitly set as TRUE then a relaxed version of the validating Triggers will be installed (not checking for strict XSD schema validation).
if the optional argument transaction is explicitly set as TRUE then the whole operation will be atomically confined within a monolithic SQL transaction

the return type is Integer, with a return value of 1 for TRUE (success) or 0 for FALSE (failure): -1 will be returned on invalid arguments.

Please note: will implicitly invoke ReCreateRasterCoveragesTriggers() and ReCreateVectorCoveragesTriggers() so to update all Triggers on these tables too.""" ;
    fno:name "ReCreateStylingTriggers" ;
    gsrdb:hasRequiredModule "libxml2" ;
    gsrdb:hasScope "SQL functions supporting SLD/SE Styled Layers" ;
    gsrdb:hasSyntax """ReCreateStylingTriggers() : Integer

ReCreateStylingTriggers( relaxed Integer ) : Integer

ReCreateStylingTriggers( relaxed Integer , transaction Integer ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fae4dc5c61a54bb4b6169bac6ecf019b a fno:Function ;
    dcterms:description "Well Known Binary to  POINT" ;
    fno:name "ST_PointFromWKB" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:faff00fb6f854b1f94c6c0f8077c47ef a fno:Function ;
    dcterms:description """Will add a new isolated NetNode.

Will return the ID of the inserted NetNode on success; an exception will be raised on failure.""" ;
    fno:name "AddIsoNetNode" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_AddIsoNetNode( netname Text , point Geometry ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fb0d8372bd3340229de179cae16d088a a fno:Function ;
    dcterms:description """will return a LINESTRING approximating the Elliptic Arc defined by cx, cy and x_axis, y_axis; the arc's extremities will be defined by start, stop angles expressed in degrees.
The optional argument step if specified defines how many points will be interpolated on the ellipse; a point will be set every step degrees.
The implicit default setting corresponds to a point every 10 degrees.""" ;
    fno:name "MakeEllipticArc" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakeEllipticArc( cx Double precision , cy Double precision , x_axis Double precision , y_axis Double precision , start Double precision , stop Double precision [ , SRID Integer [ , step Double precision ] ] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fb4286bc5cf24e2bb9f471bf8852514c a fno:Function ;
    dcterms:description "Compute the slope of a triangle as a percentage" ;
    fno:name "ST_TriangleSlope" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:fb6e5f936fbb4a1d96cc83665285e02d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AddMeasure.htm> ;
    fno:name "ST_AddMeasure" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:fb97f695510c47a98557fa17703bff27 a fno:Function ;
    dcterms:description """Returns the total number of Variables declared by the given SQL Procedure object.

An exception will be raised on failure or invalid arguments.""" ;
    fno:name "SqlProc_NumVariables" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax "SqlProc_NumVariables( object BLOB ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fba4007e7cad486eb96670d0457d4c6f a fno:Function ;
    dcterms:description "returns the intput value possibly casted to the Integer data-type; NULL if no conversion is possible." ;
    fno:name "CastToInteger" ;
    gsrdb:hasScope "Generic SQL functions" ;
    gsrdb:hasSyntax "CastToInteger( value Generic ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fbad9484ad6546d090662c2083da0928 a fno:Function ;
    dcterms:description """Returns a new Geometry representing a modified geom1, so to "snap" vertices and segments to geom2 vertices; a snap distance tolerance is used to control where snapping is performed.
NULL is returned for invalid arguments""" ;
    fno:name "Snap" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [GEOS specific features]" ;
    gsrdb:hasSyntax """Snap( geom1 Geometry , geom2 Geometry , tolerance Double precision ) : Geometry

ST_Snap( geom1 Geometry , geom2 Geometry , tolerance Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fbe0e5160eb24b519613841f02d2dd8d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_AsHEXEWKB.htm> ;
    fno:name "ST_AsHEXEWKB" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:is3D true ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsCurves "1" ;
    gsrdb:supportsGeometry "1" .

gsrdb:fbfb7c3d647c4334a520e7c40c10baf8 a fno:Function ;
    dcterms:description """Will heal two Links by deleting the NetNode connecting them. Both the original Links will be deleted and will be replaced by a new Link preserving the same orientation of the first Link provided.

Will return the ID of the removed NetNode on success; an exception will be raised on failure.""" ;
    fno:name "NewLinkHeal" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Network" ;
    gsrdb:hasSyntax "ST_NewLinkHeal( netname Text , link1-id Integer , link2-id Integer ) : Integer" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fc1f75f7adee433599a91867ec9d8ce6 a fno:Function ;
    dcterms:description """Returns a properly formatted Variable with Value Text string.

An exception will be raised on failure or invalid argument.""" ;
    fno:name "SqlProc_VarValue" ;
    gsrdb:hasScope "SQL Procedures, Stored Procedures and Stored Variables related SQL functions" ;
    gsrdb:hasSyntax """SqlProc_VarValue( var_name String , var_value NULL ) : String

SqlProc_VarValue( var_name String , var_value Integer ) : String

SqlProc_VarValue( var_name String , var_value Double ) : String

SqlProc_VarValue( var_name String , var_value Text ) : String

SqlProc_VarValue( var_name String , var_value BLOB ) : String""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fc2b5f3435da4c129df1ac75a427f9dc a fno:Function ;
    dcterms:description "Simplify a Geometry preserving its topology" ;
    fno:name "ST_SimplifyPreserveTopology" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:fc660308c6b5453f8d7a3cbfa7e2d037 a fno:Function ;
    dcterms:description "Insert extra vertices along the line segments of a Geometry" ;
    fno:name "ST_Densify" ;
    gsrdb:inDatabase "H2GIS" .

gsrdb:fcb262704dab45a0abab0f12f4229b3d a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Line_Locate_Point.htm> ;
    fno:name "ST_Line_Locate_Point" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:fcb97ea79e9d4dbf97167ad5da2a8348 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Geometry_Right.htm> ;
    fno:name ">>" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:fcfa39f5d8f14ac6916b85234bdf5a39 a fno:Function ;
    dcterms:description """Will create all DBMS objects (tables, triggers, indices and alike) required in order to store a separate Topo-Geo.
toponame: the individual unique name of this Topo-Geo: all subordinated tables will use it as a prefix.
srid: the Spatial Reference System supporting this Topo-Geo (-1 by default).
has_z: if set to TRUE this Topo-Geo will support 3D - XYZ coordinates (FALSE by default).
tolerence: the standard tolerance to be applied to this Topo-Geo. (0.0 by default, i.e. no tolerance at all).
Will return 1 on success), 0 on failure, -1 on invalid args: an exception will be raised while passing a negative tolerance value.""" ;
    fno:name "CreateTopology" ;
    gsrdb:hasRequiredModule "RTTOPO" ;
    gsrdb:hasScope "SQL functions supporting Topology-Geometry" ;
    gsrdb:hasSyntax """CreateTopology( toponame Text ) : Integer

CreateTopology( toponame Text , srid Integer ) : Integer

CreateTopology( toponame Text , srid Integer , has_z Boolean ) : Integer

CreateTopology( toponame Text , srid Integer , has_z Boolean , tolerance Double precision ) : Integer""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "ISO13249-3" .

gsrdb:fd403af11efb4713b640357434db54ff a fno:Function ;
    dcterms:description "a Geometry will be returned representing the POINT Z defined by [x y z] coordinates" ;
    fno:name "MakePointZ" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax "MakePointZ( x Double precision , y Double precision , z Double precision , [ , SRID Integer] ) : Geometry" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fd445c0bb4f544948fd4d7bf46e7333f a fno:Function ;
    dcterms:description """return the length of c (measured in meters).
If the use_ellipsoid argument is set to TRUE the precise (but slower) length will be computed on the Ellipsoid, otherwise will be computed on the Great Circle (approximative, but faster).

This function only supports Long/Lat coordinates, and will return NULL for any planar CRS

Starting since v.4.0.0 this function will simply consider Linestrings and MultiLinestrings, ignoring any Polygon or MultiPolygon""" ;
    fno:name "" ;
    gsrdb:hasRequiredModule "GEOS" ;
    gsrdb:hasScope "SQL functions on type Curve [Linestring or Ring]" ;
    gsrdb:hasSyntax """GLength( c Curve , use_ellipsoid Boolean ) : Double precision

ST_Length( c Curve , use_ellipsoid Boolean ) : Double precision""" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:fd8086d74a6247779c5c9241867905c8 a fno:Function ;
    dcterms:description """This function will create a new (empty) Tiles table and the triggers for that table; It also adds in the matching entries into gpkg_contents and gpkg_tile_matrix_set.
This function assumes usual tile conventions, including that the tiles are power-of-two-zoom.

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgCreateTilesTable" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgCreateTilesTable( tile_table_name String , srid Integer , min_x Double precision , min_y Double precision , max_x Double precision , max_y Double precision ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fe07f76f778e4a18bef40357b1448907 a fno:Function ;
    dcterms:description """return a new Geometry corresponding to the input Geometry; all points and vertices will be snapped to the grid defined by its origin and size(s).
Removes all consecutive points falling on the same cell.
All collapsed geometries will be stripped from the returned Geometry.
NULL is returned on failure.""" ;
    fno:name "SnapToGrid" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL functions that implement spatial operators [RTTOPO features]" ;
    gsrdb:hasSyntax """SnapToGrid( geom Geometry , size Double precision ) : Geometry
SnapToGrid( geom Geometry , size_x Double precision , size_y Double precision ) : Geometry
SnapToGrid( geom Geometry , origin_x Double precision , origin_y Double precision , size_x Double precision , size_y Double precision ) : Geometry
SnapToGrid( geom Geometry , origin Geometry , size_x Double precision , size_y Double precision , size_z Double precision , size_m Double precision ) : Geometry

ST_SnapToGrid( geom Geometry , size Double precision ) : Geometry
ST_SnapToGrid( geom Geometry , size_x Double precision , size_y Double precision ) ) : Geometry
ST_SnapToGrid( geom Geometry , origin_x Double precision , origin_y Double precision , size_x Double precision , size_y Double precision ) ) : Geometry
ST_SnapToGrid( geom Geometry , origin Geometry , size_x Double precision , size_y Double precision , size_z Double precision , size_m Double precision ) : Geometry""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fe3dd423ef3342cd961eb9034f45214d a fno:Function ;
    dcterms:description """This function will add Geopackage geometry table triggers for the named table.

returns nothing on success, raises exception on error""" ;
    fno:name "gpkgAddGeometryTriggers" ;
    gsrdb:hasRequiredModule "GeoPackage" ;
    gsrdb:hasScope "SQL functions implementing OGC GeoPackage compatibility" ;
    gsrdb:hasSyntax "gpkgAddGeometryTriggers( table_name String , geometry_column_name String ) : void" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:fec37181e7f94bfcb64ef9c6686156d3 a fno:Function ;
    dcterms:description "Drape a geometry to a set of triangles" ;
    fno:name "ST_Drape" ;
    gsrdb:inDatabase "H2GIS" ;
    gsrdb:is3D true .

gsrdb:fecefe0698cf4f66924d2ece3b7ae705 a fno:Function ;
    rdfs:seeAlso <https://postgis.net/docs/manual-1.5/ST_Length2D_Spheroid.htm> ;
    fno:name "ST_Length2D_Spheroid" ;
    gsrdb:inDatabase "PostGIS" ;
    gsrdb:isSQLMM "0" ;
    gsrdb:supportsGeometry "1" .

gsrdb:ff1d451131de4f90bf734d640da009e8 a fno:Function ;
    dcterms:description "Returns TRUE if the Geopackage amphibious mode is currently enabled, otherwise FALSE" ;
    fno:name "GetGpkgAmphibiousMode" ;
    gsrdb:hasScope "Global settings per connection" ;
    gsrdb:hasSyntax "GetGpkgAmphibiousMode( void ) : boolean" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ff6d166993ac4015a20334f639fa69cc a fno:Function ;
    dcterms:description """returns the arc sine of x, that is, the value whose sine is x
returns NULL if x is not in the range -1 to 1""" ;
    fno:name "Asin" ;
    gsrdb:hasScope "SQL math functions" ;
    gsrdb:hasSyntax "Asin( x Double precision ) : Double precision" ;
    gsrdb:inDatabase "Spatialite" .

gsrdb:ffb6a5e954404ad0b71cadba2b970d69 a fno:Function ;
    dcterms:description """return the minimum M-coordinate value for geom as a double precision number.
if the optional argument nodata-value is set, then any NODATA value eventually found will be ignored.

NULL will be returned if geom isn't a valid Geometry or if geom has no M dimension.""" ;
    fno:name "MinM" ;
    gsrdb:hasRequiredModule "base" ;
    gsrdb:hasScope "SQL utility functions [non-standard] for geometric objects" ;
    gsrdb:hasSyntax """ST_MinM( geom Geometry) : Double precision

ST_MinM( geom Geometry , nodata-value Double ): Double precision""" ;
    gsrdb:inDatabase "Spatialite" ;
    gsrdb:isDefinedByOrg "OGC" .

gsrdb:hasRequiredModule a rdf:Property .

gsrdb:hasScope a rdf:Property .

gsrdb:hasSyntax a rdf:Property .

gsrdb:inDatabase a rdf:Property .

gsrdb:is3D a rdf:Property .

gsrdb:isDefinedByOrg a rdf:Property .

gsrdb:isSQLMM a rdf:Property .

gsrdb:supportsCurves a rdf:Property .

gsrdb:supportsGeography a rdf:Property .

gsrdb:supportsGeometry a rdf:Property .

