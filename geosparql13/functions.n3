@prefix cs: <http://www.opengis.net/def/function/geosparql> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix geof: <http://www.opengis.net/def/function/geosparql/> .
@prefix geofo: <http://www.opengis.net/def/function/output/geosparql/> .
@prefix geofp: <http://www.opengis.net/def/function/parameter/geosparql/> .
@prefix ogc: <http://www.opengis.net/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix policy: <http://www.opengis.net/def/metamodel/ogc-na/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix sdo: <https://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix spec11: <http://www.opengis.net/spec/geosparql/1.1/specification.html#> .
@prefix status: <http://www.opengis.net/def/status/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

geof:aggboundingBox a skos:Concept,
        sd:Aggregate ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the minimum bounding box of set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "bounding box"@en .

geof:aggboundingCircle a skos:Concept,
        sd:Aggregate ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the minimum bounding circle of set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "bounding circle"@en .

geof:asDGGSResolution a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-dggs-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent DGGS representation, formulated according to the specific DGGS literal indicated using the specificDggsDatatype parameter. The parameter resolution describes the resolution in the target DGGS."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asDGGS Resolution"@en ;
    fno:expects ( geofp:asDGGSResolution_param1 geofp:asDGGSResolution_param2 geofp:asDGGSResolution_param3 ) ;
    fno:returns ( geofo:asDGGSResolution_output ) .

geof:asEWKB a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/geometry-as-ewkb-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "Converts a given geometry to an equivalent EWKB representation preserving the coordinate reference system and geometry type, if possible."@en ;
    skos:prefLabel "asEWKB"@en ;
    fno:expects ( geof:asEWKB_param1 ) ;
    fno:returns ( geof:asEWKB_output ) .

geof:asGeocode a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-geocode-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent Geocode representation. The kind of Geocode to be converted to is defined in the second parameter of the function."@en ;
    skos:prefLabel "asGeocode"@en ;
    fno:expects ( geof:asGeocode_param1 ),
        ( geof:asGeocode_param2 ) ;
    fno:returns ( geof:asGeocode_output ) .

geof:centroid a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates a centroid of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "centroid"@en ;
    fno:expects ( geofp:centroid_param1 ) ;
    fno:returns ( geofo:centroid_output ) .

geof:common a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Common Query Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:relate ;
    skos:prefLabel "GeoSPARQL Common Query Functions"@en .

geof:eh a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Egenhofer Topological Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:ehContains,
        geof:ehCoveredBy,
        geof:ehCovers,
        geof:ehDisjoint,
        geof:ehEquals,
        geof:ehInside,
        geof:ehMeet,
        geof:ehOverlap ;
    skos:prefLabel "GeoSPARQL Egenhofer Topological Functions" .

geof:endPoint a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function which returns the last point of a geometry."@en ;
    skos:prefLabel "endPoint"@en ;
    fno:expects ( geofp:endPoint_param1 ) ;
    fno:returns ( geofo:endPoint_output ) .

geof:exteriorRing a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the exterior interior ring of a geometry."@en ;
    skos:prefLabel "exteriorRing"@en ;
    fno:expects ( geofp:exteriorRing_param1 ) ;
    fno:returns ( geofo:exteriorRing_output ) .

geof:extrude a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.3> ;
    policy:status status:experimental ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.3> ;
    skos:definition "A function that extrudes 2D geometry to 3D given the height as an argument. "@en ;
    skos:prefLabel "extrude"@en ;
    fno:expects ( geofp:extrude_param1 geofp:extrude_param2 ) ;
    fno:returns ( geofo:extrude_output ) .

geof:extrudeByLine a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.3> ;
    policy:status status:experimental ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.3> ;
    skos:definition "A function that extrudes 2D geometry to 3D given the linestring as an argument. "@en ;
    skos:prefLabel "extrude by line"@en ;
    fno:expects ( geofp:extrudeByLine_param1 geofp:extrudeByLine_param2 ) ;
    fno:returns ( geofo:extrudeByLine_output ) .

geof:extrudeInTime a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.3> ;
    policy:status status:experimental ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.3> ;
    skos:definition "A function that extrudes 2D geometry to 3D given the linestring, start dateTime and end dateTime as arguments. "@en ;
    skos:prefLabel "ExtrudeInTime"@en ;
    fno:expects ( geofp:extrudeInTime_param1 geofp:extrudeInTime_param2 geofp:extrudeInTime_param3 geofp:extrudeInTime_param4 ) ;
    fno:returns ( geofo:extrudeInTime_output ) .

geof:interiorRingN a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the nth interior ring of a geometry."@en ;
    skos:prefLabel "interiorRingN"@en ;
    fno:expects ( geofp:interiorRingN_param1 geofp:interiorRingN_param2 ) ;
    fno:returns ( geofo:interiorRingN_output ) .

geof:isClosed a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the input geometry is closed."@en ;
    skos:prefLabel "isClosed"@en ;
    fno:expects ( geofp:isClosed_param1 ) ;
    fno:returns ( geofo:isClosed_output ) .

geof:isCollection a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the literal of the geometry encodes a GeometryCollection."@en ;
    skos:prefLabel "isCollection"@en ;
    fno:expects ( geofp:isCollection_param1 ) ;
    fno:returns ( geofo:isCollection_output ) .

geof:isRing a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns true if the input geometry is a ring."@en ;
    skos:prefLabel "isRing"@en ;
    fno:expects ( geofp:isRing_param1 ) ;
    fno:returns ( geofo:isRing_output ) .

geof:m a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the m coordinate of a point geometry."@en ;
    skos:prefLabel "M"@en ;
    skos:scopeNote "M indicates the measurement dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:m_param1 ) ;
    fno:returns ( geofo:m_output ) .

geof:metricDistance a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the distance in meters between the two closest points of the input geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric distance"@en ;
    fno:expects ( geofp:metricDistance_param1 geofp:metricDistance_param2 ) ;
    fno:returns ( geofo:metricDistance_output ) .

geof:metricWithinDistance a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns true if the second goemetry is within the given metric distance of the first geometry."@en ;
    skos:example spec11:B.2.2.4 ;
    skos:prefLabel "metric within distance"@en ;
    fno:expects ( geofp:metricWithinDistance_param1 geofp:metricWithinDistance_param2 geofp:metricWithinDistance_param3 ) ;
    fno:returns ( geofo:metricWithinDistance_output ) .

geof:nonTopo a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Non-topological Query Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:,
        geof:area,
        geof:boundary,
        geof:boundingCircle,
        geof:buffer,
        geof:convexHull,
        geof:difference,
        geof:dimension,
        geof:distance,
        geof:easting,
        geof:envelope,
        geof:geometryN,
        geof:getSRID,
        geof:intersection,
        geof:isEmpty,
        geof:isSimple,
        geof:length,
        geof:maxX,
        geof:maxY,
        geof:maxZ,
        geof:metricArea,
        geof:metricBuffer,
        geof:metricLength,
        geof:metricPerimeter,
        geof:minX,
        geof:minY,
        geof:minZ,
        geof:northing,
        geof:numGeometries,
        geof:perimeter,
        geof:symDifference,
        geof:union ;
    skos:prefLabel "GeoSPARQL Non-topological Query Functions"@en .

geof:numInteriorRing a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the number of interior rings contained in the given geometry."@en ;
    skos:prefLabel "numInteriorRing"@en ;
    fno:expects ( geofp:numInteriorRing_param1 ) ;
    fno:returns ( geofo:numInteriorRing_output ) .

geof:numPatches a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the number of including polygons of a geometry."@en ;
    skos:prefLabel "numPatches"@en ;
    fno:expects ( geofp:numPatches_param1 ) ;
    fno:returns ( geofo:numPatches_output ) .

geof:numPoints a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the number of points in the given geometry."@en ;
    skos:prefLabel "numPoints"@en ;
    fno:expects ( geofp:numPoints_param1 ) ;
    fno:returns ( geofo:numPoints_output ) .

geof:patchN a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the nth polygon included in a geometry."@en ;
    skos:prefLabel "patchN"@en ;
    fno:expects ( geofp:patchN_param1 ) ;
    fno:returns ( geofo:patchN_output ) .

geof:pointN a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the nth point of a geometry."@en ;
    skos:prefLabel "pointN"@en ;
    fno:expects ( geofp:pointN_param1 geof:pointN_param2 ) ;
    fno:returns ( geofo:pointN_output ) .

geof:rcc a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL RCC8 Topological Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:rcc8dc,
        geof:rcc8ec,
        geof:rcc8eq,
        geof:rcc8ntpp,
        geof:rcc8ntppi,
        geof:rcc8po,
        geof:rcc8tpp,
        geof:rcc8tppi ;
    skos:prefLabel "GeoSPARQL RCC8 Topological Functions"@en .

geof:sa a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL aggregation functions"@en ;
    skos:inScheme cs: ;
    skos:member geof:aggBoundingBox,
        geof:aggBoundingCircle,
        geof:aggCentroid,
        geof:aggConcaveHull,
        geof:aggUnion ;
    skos:prefLabel "GeoSPARQL Spatial Aggregation Functions"@en .

geof:sf a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Simple Features Topological Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:sfContains,
        geof:sfCrosses,
        geof:sfDisjoint,
        geof:sfEquals,
        geof:sfIntersects,
        geof:sfOverlaps,
        geof:sfTouches,
        geof:sfWithin ;
    skos:prefLabel "GeoSPARQL Simple Features Functions"@en .

geof:simplify a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that simplifies a given geometry using the Douglas-Peucker algorithm."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "simplify"@en ;
    fno:expects ( geofp:simplify_param1 geofp:simplify_param2 ) ;
    fno:returns ( geofo:simplify_output ) .

geof:startPoint a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function which returns the first point of a geometry."@en ;
    skos:prefLabel "startPoint"@en ;
    fno:expects ( geofp:startPoint_param1 ) ;
    fno:returns ( geofo:startPoint_output ) .

geof:transform a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that converts a given geometry to a spatial reference system defined by an IRI. The function raises an error if a transformation is not mathematically possible."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "transform"@en ;
    fno:expects ( geofp:transform_param1 geofp:transform_param2 ) ;
    fno:returns ( geofo:transform_output ) .

geof:transformCRS84 a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that converts a given geometry to the CRS84 coordinate reference system. The function raises an error if a transformation is not mathematically possible."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "transformCRS84"@en ;
    fno:expects ( geofp:transformCRS84_param1 geofp:transformCRS84_param2 ) ;
    fno:returns ( geofo:transformCRS84_output ) .

geof:withinDistance a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.2/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns true if the second geometry is within the given distance of the first geometry."@en ;
    skos:example spec11:B.2.2.4 ;
    skos:prefLabel "within distance"@en ;
    fno:expects ( geofp:withinDistance_param1 geofp:withinDistance_param2 geofp:withinDistance_param3 geofp:withinDistance_param4 ) ;
    fno:returns ( geofo:withinDistance_output ) .

geof:x a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the x coordinate of a point geometry."@en ;
    skos:prefLabel "X"@en ;
    skos:scopeNote "X indicates the first dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:x_param1 ) ;
    fno:returns ( geofo:x_output ) .

geof:y a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the y coordinate of a point geometry."@en ;
    skos:prefLabel "Y"@en ;
    skos:scopeNote "Y indicates the second dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:y_param1 ) ;
    fno:returns ( geofo:y_output ) .

geof:z a sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.2> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.2> ;
    skos:definition "A query function that returns the z coordinate of a point geometry."@en ;
    skos:prefLabel "Z"@en ;
    skos:scopeNote "Z indicates the third dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:z_param1 ) ;
    fno:returns ( geofo:z_output ) .

geofo:asGeocode_output a fno:Output ;
    fno:required true ;
    fno:type geo:geocodeLiteral .

geofo:boundingCircle_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:ehCoveredBy_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofp:asGeocode_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:asGeocode_param2 a fno:Parameter ;
    skos:prefLabel "geocode"@en ;
    fno:required true ;
    fno:type rdfs:Resource .

geofp:boundingCircle_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:pointN_param2 a fno:Parameter ;
    skos:prefLabel "n"@en ;
    fno:required true ;
    fno:type xsd:integer .

geofp:rcc8dc_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:aggConcaveHull a skos:Concept,
        sd:Aggregate ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the concave hull of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "concave hull"@en .

geof:aggUnion a skos:Concept,
        sd:Aggregate ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the union of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "aggregate union"@en .

geof:asDGGS a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-dggs-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent DGGS representation, formulated according to the specific DGGS literal indicated using the specificDggsDatatype parameter."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asDGGS"@en ;
    fno:expects ( geofp:asDGGS_param1 geofp:asDGGS_param2 ) ;
    fno:returns ( geofo:asDGGS_output ) .

geof:asEWKB_output a fno:Output ;
    fno:required true ;
    fno:type geo:ewkbLiteral .

geof:asEWKB_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:asGML a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-gml-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent GML representation defined by a gmlProfile version string preserving the coordinate reference system."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asGML"@en ;
    fno:expects ( geofp:asGML_param1 geofp:asGML_param2 ) ;
    fno:returns ( geofo:asGML_output ) .

geof:asGeoJSON a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Timo Homburg" ;
    dcterms:creator "OGC GeoSPARQL 2.0 Standard Working Group" ;
    dcterms:date "2021-05-20"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-geojson-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent GeoJSON representation. Coordinates are converted to the CRS84 coordinate system, the only valid coordinate system to be used in a GeoJSON literal."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asGeoJSON"@en ;
    fno:expects ( geofp:asGeoJSON_param1 ) ;
    fno:returns ( geofo:asGeoJSON_output ) .

geof:asKML a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-kml-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent KML representation. Coordinates are converted to the CRS84 coordinate system, the only valid coordinate system to be used in a KML literal."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asKML"@en ;
    fno:expects ( geofp:asKML_param1 ) ;
    fno:returns ( geofo:asKML_output ) .

geof:asWKT a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-wkt-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent WKT representation preserving the coordinate reference system and geometry type, if possible."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asWKT"@en ;
    fno:expects ( geofp:asWKT_param1 ) ;
    fno:returns ( geofo:asWKT_output ) .

geof:concaveHull a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that calculates the concave hull of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "concave hull"@en ;
    fno:expects ( geofp:concaveHull_param1 ) ;
    fno:returns ( geofo:concaveHull_output ) .

geof:easting a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.3> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.3> ;
    skos:definition "A query function that returns the easting of a point geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "easting"@en ;
    skos:scopeNote "The easting is returned in the unit defined by the geometries' coordinate reference system"@en ;
    fno:expects ( geofp:easting_param1 ) ;
    fno:returns ( geofo:easting_output ) .

geof:geometryN a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the the nth geometry if the given geometry literal contains a GeometryCollection."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "geometryN"@en ;
    fno:expects ( geofp:geometryN_param1 geofp:geometryN_param2 ) ;
    fno:returns ( geofo:geometryN_output ) .

geof:northing a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.3> ;
    policy:status status:valid ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.3> ;
    skos:definition "A query function that returns the northing of a point geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "northing"@en ;
    skos:scopeNote "The northing is returned in the unit defined by the geometries' coordinate reference system"@en ;
    fno:expects ( geofp:northing_param1 ) ;
    fno:returns ( geofo:northing_output ) .

geof:numGeometries a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the number of geometries if the given geometry literal contains a GeometryCollection."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "numGeometries"@en ;
    fno:expects ( geofp:numGeometries_param1 ) ;
    fno:returns ( geofo:numGeometries_output ) .

geofo:area_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:integer .

geofo:asDGGSResolution_output a fno:Output ;
    fno:required true ;
    fno:type xsd:string .

geofo:asDGGS_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral .

geofo:asGML_output a fno:Output ;
    fno:required true ;
    fno:type geo:gmlLiteral .

geofo:asGeoJSON_output a fno:Output ;
    fno:required true ;
    fno:type geo:geoJSONLiteral .

geofo:asKML_output a fno:Output ;
    fno:required true ;
    fno:type geo:kmlLiteral .

geofo:asWKT_output a fno:Output ;
    fno:required true ;
    fno:type geo:wktLiteral .

geofo:boundary_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:buffer_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:centroid_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:concaveHull_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:convexHull_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:difference_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:dimension_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:integer .

geofo:distance_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:easting_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:ehContains_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehCovers_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehDisjoint_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehEquals_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehInside_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehMeet_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehOverlap_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:endPoint_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:envelope_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:exteriorRing_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:extrudeByLine_output a fno:Output ;
    fno:required true ;
    fno:type geo:Feature .

geofo:extrudeInTime_output a fno:Output ;
    fno:required true ;
    fno:type geo:Feature .

geofo:extrude_output a fno:Output ;
    fno:required true ;
    fno:type geo:Feature .

geofo:geometryN_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:getSRID_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:anyURI .

geofo:interiorRingN_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:intersection_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:isClosed_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:isCollection_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:isEmpty_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:isRing_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:isSimple_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:length_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:m_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:maxX_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:maxY_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:maxZ_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:metricArea_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:integer .

geofo:metricBuffer_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:metricDistance_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:metricLength_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:metricWithinDistance_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:minX_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:minY_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:minZ_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:northing_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:double .

geofo:numGeometries_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geofo:numInteriorRing_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geofo:numPatches_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geofo:numPoints_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geofo:patchN_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geofo:pointN_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:rcc8ec_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:rcc8eq_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:rcc8ntpp_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:rcc8ntppi_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:rcc8po_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:rcc8tpp_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:rcc8tppi_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:relate_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfContains_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfCrosses_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfDisjoint_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfEquals_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfIntersects_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfOverlaps_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfTouches_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfWithin_output a fno:Parameter ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:simplify_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:startPoint_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:symDifference_output a fno:Parameter ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:transformCRS84_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:transform_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:union_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofo:withinDistance_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:x_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:y_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:z_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofp:area_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:area_param2 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:asDGGSResolution_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:asDGGSResolution_param2 a fno:Parameter ;
    skos:prefLabel "specificDggsDatatype"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:asDGGSResolution_param3 a fno:Parameter ;
    skos:prefLabel "resolution"@en ;
    fno:required true ;
    fno:type xsd:string .

geofp:asDGGS_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:asDGGS_param2 a fno:Parameter ;
    skos:prefLabel "specificDggsDatatype"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:asGML_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:asGML_param2 a fno:Parameter ;
    skos:prefLabel "gmlProfile"@en ;
    fno:required true ;
    fno:type xsd:string .

geofp:asGeoJSON_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:asKML_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:asWKT_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:boundary_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:buffer_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:buffer_param2 a fno:Parameter ;
    skos:prefLabel "radius"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:buffer_param3 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:centroid_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:concaveHull_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:convexHull_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:difference_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:difference_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:dimension_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:distance_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:distance_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:distance_param3 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:easting_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehContains_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehContains_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehCoveredBy_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehCoveredBy_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehCovers_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehCovers_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehDisjoint_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehDisjoint_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehEquals_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehEquals_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehInside_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehInside_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehMeet_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehMeet_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehOverlap_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:ehOverlap_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:endPoint_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:envelope_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:exteriorRing_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:extrudeByLine_param1 a fno:Parameter ;
    skos:prefLabel "geometry"@en ;
    fno:required true ;
    fno:type ogc:geomLiteral .

geofp:extrudeByLine_param2 a fno:Parameter ;
    skos:prefLabel "line segment"@en ;
    fno:required true ;
    fno:type ogc:geomLiteral .

geofp:extrudeInTime_param1 a fno:Parameter ;
    skos:prefLabel "geometry"@en ;
    fno:required true ;
    fno:type ogc:geomLiteral .

geofp:extrudeInTime_param2 a fno:Parameter ;
    skos:prefLabel "line segment"@en ;
    fno:required true ;
    fno:type ogc:geomLiteral .

geofp:extrudeInTime_param3 a fno:Parameter ;
    skos:prefLabel "start"@en ;
    fno:required true ;
    fno:type xsd:dateTime .

geofp:extrudeInTime_param4 a fno:Parameter ;
    skos:prefLabel "end"@en ;
    fno:required true ;
    fno:type xsd:dateTime .

geofp:extrude_param1 a fno:Parameter ;
    skos:prefLabel "geometry"@en ;
    fno:required true ;
    fno:type ogc:geomLiteral .

geofp:extrude_param2 a fno:Parameter ;
    skos:prefLabel "height"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:geometryN_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:geometryN_param2 a fno:Parameter ;
    skos:prefLabel "geomindex"@en ;
    fno:required true ;
    fno:type xsd:int .

geofp:getSRID_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:interiorRingN_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:interiorRingN_param2 a fno:Parameter ;
    skos:prefLabel "n"@en ;
    fno:required true ;
    fno:type xsd:integer .

geofp:intersection_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:intersection_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:isClosed_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:isCollection_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:isEmpty_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:isRing_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:isSimple_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:length_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral,
        xsd:anyURI .

geofp:m_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:maxX_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:maxY_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:maxZ_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricArea_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricBuffer_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricBuffer_param2 a fno:Parameter ;
    skos:prefLabel "radius"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:metricDistance_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricDistance_param2 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricLength_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricWithinDistance_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricWithinDistance_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:metricWithinDistance_param3 a fno:Parameter ;
    skos:prefLabel "distance"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:minX_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:minY_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:minZ_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:northing_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:numGeometries_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:numInteriorRing_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:numPatches_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:numPoints_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:patchN_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:pointN_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8dc_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8dc_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8ec_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8ec_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8eq_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8eq_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8ntpp_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8ntpp_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8ntppi_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8ntppi_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8po_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8po_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8tpp_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8tpp_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8tppi_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:rcc8tppi_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:relate_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:relate_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:relate_param3 a fno:Parameter ;
    skos:prefLabel "pattern-matrix"@en ;
    fno:required true ;
    fno:type xsd:string .

geofp:sfContains_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfContains_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfCrosses_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfCrosses_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfDisjoint_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfDisjoint_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfEquals_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfEquals_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfIntersects_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfIntersects_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfOverlaps_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfOverlaps_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfTouches_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfTouches_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfWithin_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:sfWithin_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:simplify_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:simplify_param2 a fno:Parameter ;
    skos:prefLabel "tolerance"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:startPoint_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:symDifference_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:symDifference_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:transformCRS84_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:transform_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:transform_param2 a fno:Parameter ;
    skos:prefLabel "srsIRI"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:union_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:union_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:withinDistance_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:withinDistance_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:withinDistance_param3 a fno:Parameter ;
    skos:prefLabel "distance"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:withinDistance_param4 a fno:Parameter ;
    skos:prefLabel "unit"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:x_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:y_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:z_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:ewkbLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:area a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the area of a geometry in square meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "area"@en ;
    fno:expects ( geofp:area_param1 geofp:area_param2 ) ;
    fno:returns ( geofo:area_output ) .

geof:boundary a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the boundary of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "boundary"@en ;
    fno:expects ( geofp:boundary_param1 ) ;
    fno:returns ( geofo:boundary_output ) .

geof:boundingCircle a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that calculates the minimum bounding circle of set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "bounding circle"@en .

geof:buffer a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a buffer around the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "buffer"@en ;
    fno:expects ( geofp:buffer_param1 geofp:buffer_param2 geofp:buffer_param3 ) ;
    fno:returns ( geofo:buffer_output ) .

geof:convexHull a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the convex hull of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "convex hull"@en ;
    fno:expects ( geofp:convexHull_param1 ) ;
    fno:returns ( geofo:convexHull_output ) .

geof:difference a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of the first geometry but not the second geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "difference"@en ;
    fno:expects ( geofp:difference_param1 geofp:difference_param2 ) ;
    fno:returns ( geofo:difference_output ) .

geof:dimension a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the dimension of a geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "dimension"@en ;
    fno:expects ( geofp:dimension_param1 ) ;
    fno:returns ( geofo:dimension_output ) .

geof:distance a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the distance between the two closest points of the input geometries."@en ;
    skos:example spec11:B.2.2.4 ;
    skos:inScheme cs: ;
    skos:prefLabel "distance"@en ;
    fno:expects ( geofp:distance_param1 geofp:distance_param2 geofp:distance_param3 ) ;
    fno:returns ( geofo:distance_output ) .

geof:ehContains a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument. 
      
DE-9IM: T*TFF*FF*"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "contains"@en ;
    fno:expects ( geofp:ehContains_param1 geofp:ehContains_param2 ) ;
    fno:returns ( geofo:ehContains_output ) .

geof:ehCoveredBy a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially covered by the second geometry argument.

DE-9IM: TFF*TFT**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "covered by"@en ;
    fno:expects ( geofp:ehCoveredBy_param1 geofp:ehCoveredBy_param2 ) ;
    fno:returns ( geofo:ehConveredBy_output ) .

geof:ehCovers a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially covers the second geometry argument.

DE-9IM: T*TFT*FF*"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "covers"@en ;
    fno:expects ( geofp:ehCovers_param1 geofp:ehCovers_param2 ) ;
    fno:returns ( geofo:ehCovers_output ) .

geof:ehDisjoint a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 

DE-9IM: FF*FF****"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "disjoint"@en ;
    fno:expects ( geofp:ehDisjoint_param1 geofp:ehDisjoint_param2 ) ;
    fno:returns ( geofo:ehDisjoint_output ) .

geof:ehEquals a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are equal. 

DE-9IM: TFFFTFFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geofp:ehEquals_param1 geofp:ehEquals_param2 ) ;
    fno:returns ( geofo:ehEquals_output ) .

geof:ehInside a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially inside the second geometry argument.

DE-9IM: TFF*FFT**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "inside"@en ;
    fno:expects ( geofp:ehInside_param1 geofp:ehInside_param2 ) ;
    fno:returns ( geofo:ehInside_output ) .

geof:ehMeet a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries meet.

DE-9IM: FT******* ^ F**T***** ^ F***T****"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "meet"@en ;
    fno:expects ( geofp:ehMeet_param1 geofp:ehMeet_param2 ) ;
    fno:returns ( geofo:ehMeet_output ) .

geof:ehOverlap a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries overlap.

DE-9IM: T*T***T**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "overlap"@en ;
    fno:expects ( geofp:ehOverlap_param1 geofp:ehOverlap_param2 ) ;
    fno:returns ( geofo:ehOverlap_output ) .

geof:envelope a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum bounding rectangle of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "envelope"@en ;
    fno:expects ( geofp:envelope_param1 ) ;
    fno:returns ( geofo:envelope_output ) .

geof:getSRID a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/srid-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the spatial reference system URI of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "getSRID"@en ;
    fno:expects ( geofp:getSRID_param1 ) ;
    fno:returns ( geofo:getSRID_output ) .

geof:intersection a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of both input geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "intersection"@en ;
    fno:expects ( geofp:intersection_param1 geofp:intersection_param2 ) ;
    fno:returns ( geofo:intersection_output ) .

geof:isEmpty a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the input geometry is empty."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "isEmpty"@en ;
    fno:expects ( geofp:isEmpty_param1 ) ;
    fno:returns ( geofo:isEmpty_output ) .

geof:isSimple a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the input geometry is a simple geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "isSimple"@en ;
    fno:expects ( geofp:isSimple_param1 ) ;
    fno:returns ( geofo:isSimple_output ) .

geof:length a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the length of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "length"@en ;
    fno:expects ( geofp:length_param1 geofp:length_param2 ) ;
    fno:returns ( geofo:length_output ) .

geof:maxX a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the maximum x coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "maxX"@en ;
    skos:scopeNote "X indicates the first dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:maxX_param1 ) ;
    fno:returns ( geofo:maxX_output ) .

geof:maxY a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the maximum y coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "maxY"@en ;
    skos:scopeNote "Y indicates the second dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:maxY_param1 ) ;
    fno:returns ( geofo:maxY_output ) .

geof:maxZ a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the maximum z coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "maxZ"@en ;
    skos:scopeNote "Z indicates the third dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:maxZ_param1 ) ;
    fno:returns ( geofo:maxZ_output ) .

geof:metricArea a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the area of a geometry in squaremeters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric area"@en ;
    fno:expects ( geofp:metricArea_param1 ) ;
    fno:returns ( geofo:metricArea_output ) .

geof:metricBuffer a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2022-04-20"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a buffer around the input geometry, using a distance in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric buffer"@en ;
    fno:expects ( geofp:metricBuffer_param1 geofp:metricBuffer_param2 ) ;
    fno:returns ( geofo:metricBuffer_output ) .

geof:metricLength a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the length of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric length"@en ;
    fno:expects ( geofp:metricLength_param1 ) ;
    fno:returns ( geofo:metricLength_output ) .

geof:metricPerimeter a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the perimeter of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric perimeter"@en ;
    fno:expects ( geofp:metricPerimeter_param1 ),
        ( geofp:metricPerimeter_param1 ) ;
    fno:returns ( geofo:metricPerimeter_output ),
        ( geofo:metricPerimeter_output ) .

geof:minX a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum x coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "minX"@en ;
    skos:scopeNote "X indicates the first dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:minX_param1 ) ;
    fno:returns ( geofo:minX_output ) .

geof:minY a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum y coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "minY"@en ;
    skos:scopeNote "Y indicates the second dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:minY_param1 ) ;
    fno:returns ( geofo:minY_output ) .

geof:minZ a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum z coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "minZ"@en ;
    skos:scopeNote "Z indicates the third dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geofp:minZ_param1 ) ;
    fno:returns ( geofo:minZ_output ) .

geof:perimeter a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the perimeter of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "perimeter"@en ;
    fno:expects ( geofp:perimeter_param1 geofp:perimeter_param2 ),
        ( geofp:perimeter_param1 geofp:perimeter_param2 ) ;
    fno:returns ( geofo:perimeter_output ),
        ( geofo:perimeter_output ) .

geof:rcc8dc a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 

DE-9IM: FFTFFTTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "disconnected"@en ;
    fno:expects ( geofp:rcc8dc_param1 geofp:rcc8dc_param2 ) ;
    fno:returns ( geofo:rcc8dc_output ) .

geof:rcc8ec a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries meet. 

DE-9IM: FFTFTTTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "externally connected"@en ;
    fno:expects ( geofp:rcc8ec_param1 geofp:rcc8ec_param2 ) ;
    fno:returns ( geofo:rcc8ec_output ) .

geof:rcc8eq a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are equal. 
      
DE-9IM: TFFFTFFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geofp:rcc8eq_param1 geofp:rcc8eq_param2 ) ;
    fno:returns ( geofo:rcc8eq_output ) .

geof:rcc8ntpp a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially inside the second geometry argument.

DE-9IM: TFFTFFTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "non-tangential proper part"@en ;
    fno:expects ( geofp:rcc8ntpp_param1 geofp:rcc8ntpp_param2 ) ;
    fno:returns ( geofo:rcc8ntpp_output ) .

geof:rcc8ntppi a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument.

DE-9IM: TTTFFTFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "non-tangential proper part inverse"@en ;
    fno:expects ( geofp:rcc8ntppi_param1 geofp:rcc8ntppi_param2 ) ;
    fno:returns ( geofo:rcc8ntppi_output ) .

geof:rcc8po a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries overlap.

DE-9IM: TTTTTTTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "partially overlapping"@en ;
    fno:expects ( geofp:rcc8po_param1 geofp:rcc8po_param2 ) ;
    fno:returns ( geofo:rcc8po_output ) .

geof:rcc8tpp a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially covered by the second geometry argument.

DE-9IM: TFFTTFTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "tangential proper part"@en ;
    fno:expects ( geofp:rcc8tpp_param1 geofp:rcc8tpp_param2 ) ;
    fno:returns ( geofo:rcc8tpp_output ) .

geof:rcc8tppi a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially covers the second geometry argument.

DE-9IM: TTTFTTFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "tangential proper part inverse"@en ;
    fno:expects ( geofp:rcc8tppi_param1 geofp:rcc8tppi_param2 ) ;
    fno:returns ( geofo:rcc8tppi_output ) .

geof:relate a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/relate-query-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the spatial relationship between the two input geometries corresponds to one with acceptable values for the specified DE-9IM pattern matrix."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "relate"@en ;
    fno:expects ( geofp:relate_param1 geofp:relate_param2 geofp:relate_param3 ) ;
    fno:returns ( geofo:relate_output ) .

geof:sfContains a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument.

DE-9IM: T*****FF*"""@en ;
    skos:example spec11:B.2.2.1 ;
    skos:inScheme cs: ;
    skos:prefLabel "contains"@en ;
    fno:expects ( geofp:sfContains_param1 geofp:sfContains_param2 ) ;
    fno:returns ( geofo:sfContains_output ) .

geof:sfCrosses a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially crosses the second geometry argument.

DE-9IM: T*T***T**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "crosses"@en ;
    fno:expects ( geofp:sfCrosses_param1 geofp:sfCrosses_param2 ) ;
    fno:returns ( geofo:sfCrosses_output ) .

geof:sfDisjoint a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 
      
DE-9IM: FF*FF****"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "disjoint"@en ;
    fno:expects ( geofp:sfDisjoint_param1 geofp:sfDisjoint_param2 ) ;
    fno:returns ( geofo:sfDisjoint_output ) .

geof:sfEquals a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are equal. 

DE-9IM: TFFFTFFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geofp:sfEquals_param1 geofp:sfEquals_param2 ) ;
    fno:returns ( geofo:sfEquals_output ) .

geof:sfIntersects a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries intersect.

DE-9IM: T******** ^ *T******* ^ ***T***** ^ ****T**** """@en ;
    skos:inScheme cs: ;
    skos:prefLabel "intersects"@en ;
    fno:expects ( geofp:sfIntersects_param1 geofp:sfIntersects_param2 ) ;
    fno:returns ( geofo:sfIntersects_output ) .

geof:sfOverlaps a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially overlaps the second geometry argument.

DE-9IM: T*T***T** """@en ;
    skos:inScheme cs: ;
    skos:prefLabel "overlaps"@en ;
    fno:expects ( geofp:sfOverlaps_param1 geofp:sfOverlaps_param2 ) ;
    fno:returns ( geofo:sfOverlaps_output ) .

geof:sfTouches a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries touch.

DE-9IM: FT******* ^ F**T***** ^ F***T****"""@en ;
    skos:example spec11:B.2.2.3 ;
    skos:inScheme cs: ;
    skos:prefLabel "touches"@en ;
    fno:expects ( geofp:sfTouches_param1 geofp:sfTouches_param2 ) ;
    fno:returns ( geofo:sfTouches_output ) .

geof:sfWithin a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially within the second geometry argument. 

DE-9IM: T*F**F***"""@en ;
    skos:example spec11:B.2.2.2 ;
    skos:inScheme cs: ;
    skos:prefLabel "within"@en ;
    fno:expects ( geofp:sfWithin_param1 geofp:sfWithin_param2 ) ;
    fno:returns ( geofo:sfWithin_output ) .

geof:symDifference a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of only one input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "symmetric difference"@en ;
    fno:expects ( geofp:symDifference_param1 geofp:symDifference_param2 ) ;
    fno:returns ( geofo:symDifference_output ) .

geof:union a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of at least one input geometry."@en ;
    skos:example spec11:B.2.2.3 ;
    skos:inScheme cs: ;
    skos:prefLabel "union"@en ;
    fno:expects ( geofp:union_param1 geofp:union_param2 ) ;
    fno:returns ( geofo:union_output ) .

geofo:metricPerimeter_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:perimeter_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofp:metricPerimeter_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:perimeter_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:geocodeLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geofp:perimeter_param2 a fno:Parameter ;
    skos:prefLabel "unit"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

cs: a skos:ConceptScheme ;
    dcterms:created "2021-06-16"^^xsd:date ;
    dcterms:creator [ a sdo:Organization ;
            sdo:name "OGC GeoSPARQL Standards Working Group" ;
            sdo:url "https://www.ogc.org"^^xsd:anyURI ] ;
    dcterms:license "https://www.ogc.org/license"^^xsd:anyURI ;
    dcterms:modified "2023-11-30"^^xsd:date ;
    dcterms:publisher [ a sdo:Organization ;
            sdo:name "Open Geospatial Consortium" ;
            sdo:url "https://www.ogc.org"^^xsd:anyURI ] ;
    dcterms:rights "(c) 2023 Open Geospatial Consortium" ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    owl:versionIRI geof:1.1 ;
    skos:definition "All the GeoSPARQL Functions defined within the GeoSPARQL 1.3 specification"@en ;
    skos:hasTopConcept geof:,
        geof:area,
        geof:asDGGS,
        geof:asGML,
        geof:asGeoJSON,
        geof:asKML,
        geof:asWKT,
        geof:boundary,
        geof:boundingCircle,
        geof:buffer,
        geof:concaveHull,
        geof:convexHull,
        geof:difference,
        geof:dimension,
        geof:distance,
        geof:ehContains,
        geof:ehCoveredBy,
        geof:ehCovers,
        geof:ehDisjoint,
        geof:ehEquals,
        geof:ehInside,
        geof:ehMeet,
        geof:ehOverlap,
        geof:envelope,
        geof:getSRID,
        geof:intersection,
        geof:isEmpty,
        geof:isSimple,
        geof:length,
        geof:maxX,
        geof:maxY,
        geof:maxZ,
        geof:metricArea,
        geof:metricBuffer,
        geof:metricLength,
        geof:metricPerimeter,
        geof:minX,
        geof:minY,
        geof:minZ,
        geof:perimeter,
        geof:rcc8dc,
        geof:rcc8ec,
        geof:rcc8eq,
        geof:rcc8ntpp,
        geof:rcc8ntppi,
        geof:rcc8po,
        geof:rcc8tpp,
        geof:rcc8tppi,
        geof:relate,
        geof:sfContains,
        geof:sfCrosses,
        geof:sfDisjoint,
        geof:sfEquals,
        geof:sfIntersects,
        geof:sfOverlaps,
        geof:sfTouches,
        geof:sfWithin,
        geof:symDifference,
        geof:union ;
    skos:historyNote "This vocabulary was generated for GeoSPARQL 1.1 using some content that was already specified for GeoSPARQL 1.0 but which was expanded on" ;
    skos:prefLabel "GeoSPARQL 1.1 Functions"@en .

