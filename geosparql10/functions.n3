@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix geof: <http://www.opengis.net/def/function/geosparql/> .
@prefix geofo: <http://www.opengis.net/def/function/output/geosparql/> .
@prefix geofp: <http://www.opengis.net/def/function/parameter/geosparql/> .
@prefix ogc: <http://www.opengis.net/> .
@prefix policy: <http://www.opengis.net/def/metamodel/ogc-na/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix status: <http://www.opengis.net/def/status/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

geof: a skos:Collection,
        skos:ConceptScheme ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:member geof:boundary,
        geof:buffer,
        geof:convexHull,
        geof:difference,
        geof:distance,
        geof:ehContains,
        geof:ehCoveredBy,
        geof:ehCovers,
        geof:ehDisjoint,
        geof:ehEquals,
        geof:ehInside,
        geof:ehMeet,
        geof:ehOverlap,
        geof:envelope,
        geof:getSRID,
        geof:intersection,
        geof:rcc8dc,
        geof:rcc8ec,
        geof:rcc8eq,
        geof:rcc8ntpp,
        geof:rcc8ntppi,
        geof:rcc8po,
        geof:rcc8tpp,
        geof:rcc8tppi,
        geof:relate,
        geof:sfContains,
        geof:sfCrosses,
        geof:sfDisjoint,
        geof:sfEquals,
        geof:sfIntersects,
        geof:sfOverlaps,
        geof:sfTouches,
        geof:sfWithin,
        geof:symDifference,
        geof:union ;
    skos:prefLabel "GeoSPARQL Functions" .

geofo:ehCoveredBy_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:boundary a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns the boundary of the input geometry."@en ;
    skos:prefLabel "boundary"@en ;
    fno:expects ( geofp:boundary_param1 ) ;
    fno:returns ( geofo:boundary_output ) .

geof:buffer a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns a buffer around the input geometry."@en ;
    skos:prefLabel "buffer"@en ;
    fno:expects ( geofp:buffer_param1 geofp:buffer_param2 geofp:buffer_param3 ) ;
    fno:returns ( geofo:buffer_output ) .

geof:convexHull a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns the convex hull of the input geometry."@en ;
    skos:prefLabel "convex hull"@en ;
    fno:expects ( geofp:convexHull_param1 ) ;
    fno:returns ( geofo:convexHull_output ) .

geof:difference a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of the first geometry but not the second geometry."@en ;
    skos:prefLabel "difference"@en ;
    fno:expects ( geofp:difference_param1 geofp:difference_param2 ) ;
    fno:returns ( geofo:difference_output ) .

geof:distance a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns the distance between the two closest points of the input geometries."@en ;
    skos:prefLabel "distance"@en ;
    fno:expects ( geofp:distance_param1 geofp:distance_param2 geofp:distance_param3 ) ;
    fno:returns ( geofo:distance_output ) .

geof:ehContains a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument. 
      
DE-9IM: T*TFF*FF*"""@en ;
    skos:prefLabel "contains"@en ;
    fno:expects ( geofp:ehContains_param1 geofp:ehContains_param2 ) ;
    fno:returns ( geofo:ehContains_output ) .

geof:ehCoveredBy a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially covered by the second geometry argument.

DE-9IM: TFF*TFT**"""@en ;
    skos:prefLabel "covered by"@en ;
    fno:expects ( geofp:ehCoveredBy_param1 geofp:ehCoveredBy_param2 ) ;
    fno:returns ( geofo:ehConveredBy_output ) .

geof:ehCovers a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially covers the second geometry argument.

DE-9IM: T*TFT*FF*"""@en ;
    skos:prefLabel "covers"@en ;
    fno:expects ( geofp:ehCovers_param1 geofp:ehCovers_param2 ) ;
    fno:returns ( geofo:ehCovers_output ) .

geof:ehDisjoint a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 

DE-9IM: FF*FF****"""@en ;
    skos:prefLabel "disjoint"@en ;
    fno:expects ( geofp:ehDisjoint_param1 geofp:ehDisjoint_param2 ) ;
    fno:returns ( geofo:ehDisjoint_output ) .

geof:ehEquals a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries are equal. 

DE-9IM: TFFFTFFFT"""@en ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geofp:ehEquals_param1 geofp:ehEquals_param2 ) ;
    fno:returns ( geofo:ehEquals_output ) .

geof:ehInside a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially inside the second geometry argument.

DE-9IM: TFF*FFT**"""@en ;
    skos:prefLabel "inside"@en ;
    fno:expects ( geofp:ehInside_param1 geofp:ehInside_param2 ) ;
    fno:returns ( geofo:ehInside_output ) .

geof:ehMeet a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries meet.

DE-9IM: FT******* ^ F**T***** ^ F***T****"""@en ;
    skos:prefLabel "meet"@en ;
    fno:expects ( geofp:ehMeet_param1 geofp:ehMeet_param2 ) ;
    fno:returns ( geofo:ehMeet_output ) .

geof:ehOverlap a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries overlap.

DE-9IM: T*T***T**"""@en ;
    skos:prefLabel "overlap"@en ;
    fno:expects ( geofp:ehOverlap_param1 geofp:ehOverlap_param2 ) ;
    fno:returns ( geofo:ehOverlap_output ) .

geof:envelope a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns the minimum bounding rectangle of the input geometry."@en ;
    skos:prefLabel "envelope"@en ;
    fno:expects ( geofp:envelope_param1 ) ;
    fno:returns ( geofo:envelope_output ) .

geof:getSRID a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns the spatial reference system URI of the input geometry."@en ;
    skos:prefLabel "getSRID"@en ;
    fno:expects ( geofp:getSRID_param1 ) ;
    fno:returns ( geofo:getSRID_output ) .

geof:intersection a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of both input geometries."@en ;
    skos:prefLabel "intersection"@en ;
    fno:expects ( geofp:intersection_param1 geofp:intersection_param2 ) ;
    fno:returns ( geofo:intersection_output ) .

geof:rcc8dc a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 

DE-9IM: FFTFFTTTT"""@en ;
    skos:prefLabel "disconnected"@en ;
    fno:expects ( geof:rcc8dc_param1 geof:rcc8dc_param2 ) ;
    fno:returns ( geof:rcc8dc_output ) .

geof:rcc8dc_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8dc_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8dc_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8ec a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries meet. 

DE-9IM: FFTFTTTTT"""@en ;
    skos:prefLabel "externally connected"@en ;
    fno:expects ( geof:rcc8ec_param1 geof:rcc8ec_param2 ) ;
    fno:returns ( geof:rcc8ec_output ) .

geof:rcc8ec_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8ec_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8ec_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8eq a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries are equal. 
      
DE-9IM: TFFFTFFFT"""@en ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geof:rcc8eq_param1 geof:rcc8eq_param2 ) ;
    fno:returns ( geof:rcc8eq_output ) .

geof:rcc8eq_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8eq_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8eq_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8ntpp a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially inside the second geometry argument.

DE-9IM: TFFTFFTTT"""@en ;
    skos:prefLabel "non-tangential proper part"@en ;
    fno:expects ( geof:rcc8ntpp_param1 geof:rcc8ntpp_param2 ) ;
    fno:returns ( geof:rcc8ntpp_output ) .

geof:rcc8ntpp_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8ntpp_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8ntpp_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8ntppi a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument.

DE-9IM: TTTFFTFFT"""@en ;
    skos:prefLabel "non-tangential proper part inverse"@en ;
    fno:expects ( geof:rcc8ntppi_param1 geof:rcc8ntppi_param2 ) ;
    fno:returns ( geof:rcc8ntppi_output ) .

geof:rcc8ntppi_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8ntppi_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8ntppi_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8po a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries overlap.

DE-9IM: TTTTTTTTT"""@en ;
    skos:prefLabel "partially overlapping"@en ;
    fno:expects ( geof:rcc8po_param1 geof:rcc8po_param2 ) ;
    fno:returns ( geof:rcc8po_output ) .

geof:rcc8po_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8po_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8po_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8tpp a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially covered by the second geometry argument.

DE-9IM: TFFTTFTTT"""@en ;
    skos:prefLabel "tangential proper part"@en ;
    fno:expects ( geof:rcc8tpp_param1 geof:rcc8tpp_param2 ) ;
    fno:returns ( geof:rcc8tpp_output ) .

geof:rcc8tpp_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8tpp_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8tpp_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8tppi a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially covers the second geometry argument.

DE-9IM: TTTFTTFFT"""@en ;
    skos:prefLabel "tangential proper part inverse"@en ;
    fno:expects ( geof:rcc8tppi_param1 geof:rcc8tppi_param2 ) ;
    fno:returns ( geof:rcc8tppi_output ) .

geof:rcc8tppi_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8tppi_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:rcc8tppi_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geof:relate a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns true if the spatial relationship between the two input geometries corresponds to one with acceptable values for the specified DE-9IM pattern matrix."@en ;
    skos:prefLabel "relate"@en ;
    fno:expects ( geofp:relate_param1 geofp:relate_param2 geofp:relate_param3 ) ;
    fno:returns ( geofo:relate_output ) .

geof:sfContains a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument.

DE-9IM: T*****FF*"""@en ;
    skos:prefLabel "contains"@en ;
    fno:expects ( geofp:sfContains_param1 geofp:sfContains_param2 ) ;
    fno:returns ( geofo:sfContains_output ) .

geof:sfCrosses a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially crosses the second geometry argument.

DE-9IM: T*T***T**"""@en ;
    skos:prefLabel "crosses"@en ;
    fno:expects ( geofp:sfCrosses_param1 geofp:sfCrosses_param2 ) ;
    fno:returns ( geofo:sfCrosses_output ) .

geof:sfDisjoint a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 
      
DE-9IM: FF*FF****"""@en ;
    skos:prefLabel "disjoint"@en ;
    fno:expects ( geofp:sfDisjoint_param1 geofp:sfDisjoint_param2 ) ;
    fno:returns ( geofo:sfDisjoint_output ) .

geof:sfEquals a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries are equal. 

DE-9IM: TFFFTFFFT"""@en ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geofp:sfEquals_param1 geofp:sfEquals_param2 ) ;
    fno:returns ( geofo:sfEquals_output ) .

geof:sfIntersects a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries intersect.

DE-9IM: T******** ^ *T******* ^ ***T***** ^ ****T**** """@en ;
    skos:prefLabel "intersects"@en ;
    fno:expects ( geofp:sfIntersects_param1 geofp:sfIntersects_param2 ) ;
    fno:returns ( geofo:sfIntersects_output ) .

geof:sfOverlaps a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument spatially overlaps the second geometry argument.

DE-9IM: T*T***T** """@en ;
    skos:prefLabel "overlaps"@en ;
    fno:expects ( geofp:sfOverlaps_param1 geofp:sfOverlaps_param2 ) ;
    fno:returns ( geofo:sfOverlaps_output ) .

geof:sfTouches a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the input geometries touch.

DE-9IM: FT******* ^ F**T***** ^ F***T****"""@en ;
    skos:prefLabel "touches"@en ;
    fno:expects ( geofp:sfTouches_param1 geofp:sfTouches_param2 ) ;
    fno:returns ( geofo:sfTouches_output ) .

geof:sfWithin a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially within the second geometry argument. 

DE-9IM: T*F**F***"""@en ;
    skos:prefLabel "within"@en ;
    fno:expects ( geofp:sfWithin_param1 geofp:sfWithin_param2 ) ;
    fno:returns ( geofo:sfWithin_output ) .

geof:symDifference a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of only one input geometry."@en ;
    skos:prefLabel "symmetric difference"@en ;
    fno:expects ( geofp:symDifference_param1 geofp:symDifference_param2 ) ;
    fno:returns ( geofo:symDifference_output ) .

geof:union a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Matthew Perry" ;
    dcterms:creator "OGC GeoSPARQL 1.0 Standard Working Group" ;
    dcterms:date "2011-06-16"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.0> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.0> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.0> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of at least one input geometry."@en ;
    skos:prefLabel "union"@en ;
    fno:expects ( geofp:union_param1 geofp:union_param2 ) ;
    fno:returns ( geofo:union_output ) .

geofo:boundary_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:buffer_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:convexHull_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:difference_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:distance_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geofo:ehContains_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehCovers_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehDisjoint_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehEquals_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehInside_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehMeet_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:ehOverlap_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:envelope_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:getSRID_output a fno:Output ;
    fno:required true ;
    fno:type xsd:anyURI .

geofo:intersection_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:relate_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfContains_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfCrosses_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfDisjoint_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfEquals_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfIntersects_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfOverlaps_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfTouches_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:sfWithin_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geofo:symDifference_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofo:union_output a fno:Output ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:boundary_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:buffer_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:buffer_param2 a fno:Parameter ;
    skos:prefLabel "radius"@en ;
    fno:required true ;
    fno:type xsd:double .

geofp:buffer_param3 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:convexHull_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:difference_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:difference_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:distance_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:distance_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:distance_param3 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geofp:ehContains_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehContains_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehCoveredBy_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehCoveredBy_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehCovers_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehCovers_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehDisjoint_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehDisjoint_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehEquals_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehEquals_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehInside_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehInside_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehMeet_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehMeet_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehOverlap_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:ehOverlap_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:envelope_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:getSRID_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:intersection_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:intersection_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:relate_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:relate_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:relate_param3 a fno:Parameter ;
    skos:prefLabel "pattern-matrix"@en ;
    fno:required true ;
    fno:type xsd:string .

geofp:sfContains_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfContains_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfCrosses_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfCrosses_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfDisjoint_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfDisjoint_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfEquals_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfEquals_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfIntersects_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfIntersects_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfOverlaps_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfOverlaps_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfTouches_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfTouches_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfWithin_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:sfWithin_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:symDifference_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:symDifference_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:union_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

geofp:union_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type ogc:gmlLiteral,
        ogc:wktLiteral .

