@prefix cs: <http://www.opengis.net/def/function/geosparql> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix geof: <http://www.opengis.net/def/function/geosparql/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix policy: <http://www.opengis.net/def/metamodel/ogc-na/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix sdo: <https://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix spec11: <http://www.opengis.net/spec/geosparql/1.1/specification.html#> .
@prefix status: <http://www.opengis.net/def/status/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

geof:aggboundingBox a skos:Concept,
        sd:Aggregate ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the minimum bounding box of set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "bounding box"@en .

geof:aggboundingCircle a skos:Concept,
        sd:Aggregate ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the minimum bounding circle of set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "bounding circle"@en .

geof:boundingCircle_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:boundingCircle_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:centroid a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates a centroid of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "centroid"@en ;
    fno:expects ( geof:centroid_param1 ) ;
    fno:returns ( geof:centroid_output ) .

geof:common a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Common Query Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:relate ;
    skos:prefLabel "GeoSPARQL Common Query Functions"@en .

geof:eh a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Egenhofer Topological Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:ehContains,
        geof:ehCoveredBy,
        geof:ehCovers,
        geof:ehDisjoint,
        geof:ehEquals,
        geof:ehInside,
        geof:ehMeet,
        geof:ehOverlap ;
    skos:prefLabel "GeoSPARQL Egenhofer Topological Functions" .

geof:ehCoveredBy_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:nonTopo a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Non-topological Query Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:area,
        geof:boundary,
        geof:boundingCircle,
        geof:buffer,
        geof:convexHull,
        geof:difference,
        geof:dimension,
        geof:distance,
        geof:envelope,
        geof:geometryN,
        geof:getSRID,
        geof:intersection,
        geof:isEmpty,
        geof:isSimple,
        geof:length,
        geof:maxX,
        geof:maxY,
        geof:maxZ,
        geof:metricArea,
        geof:metricBuffer,
        geof:metricDistance,
        geof:metricLength,
        geof:metricPerimeter,
        geof:minX,
        geof:minY,
        geof:minZ,
        geof:numGeometries,
        geof:perimeter,
        geof:symDifference,
        geof:union ;
    skos:prefLabel "GeoSPARQL Non-topological Query Functions"@en .

geof:rcc a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL RCC8 Topological Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:rcc8dc,
        geof:rcc8ec,
        geof:rcc8eq,
        geof:rcc8ntpp,
        geof:rcc8ntppi,
        geof:rcc8po,
        geof:rcc8tpp,
        geof:rcc8tppi ;
    skos:prefLabel "GeoSPARQL RCC8 Topological Functions"@en .

geof:sa a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL aggregation functions"@en ;
    skos:inScheme cs: ;
    skos:member geof:aggBoundingBox,
        geof:aggBoundingCircle,
        geof:aggCentroid,
        geof:aggConcaveHull,
        geof:aggUnion ;
    skos:prefLabel "GeoSPARQL Spatial Aggregation Functions"@en .

geof:sf a skos:Collection ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:isDefinedBy cs: ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "All the GeoSPARQL Simple Features Topological Functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:inScheme cs: ;
    skos:member geof:sfContains,
        geof:sfCrosses,
        geof:sfDisjoint,
        geof:sfEquals,
        geof:sfIntersects,
        geof:sfOverlaps,
        geof:sfTouches,
        geof:sfWithin ;
    skos:prefLabel "GeoSPARQL Simple Features Functions"@en .

geof:transform a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that converts a given geometry to a spatial reference system defined by an IRI. The function raises an error if a transformation is not mathematically possible."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "transform"@en ;
    fno:expects ( geof:transform_param1 geof:transform_param2 ) ;
    fno:returns ( geof:transform_output ) .

geof:aggConcaveHull a skos:Concept,
        sd:Aggregate ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the concave hull of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "concave hull"@en .

geof:aggUnion a skos:Concept,
        sd:Aggregate ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A spatial aggregate function that calculates the union of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "aggregate union"@en .

geof:area_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geof:area_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:area_param2 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:asDGGS a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-dggs-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent DGGS representation, formulated according to the specific DGGS literal indicated using the specificDggsDatatype parameter."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asDGGS"@en ;
    fno:expects ( geof:asDGGS_param1 geof:asDGGS_param2 ) ;
    fno:returns ( geof:asDGGS_output ) .

geof:asDGGS_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral .

geof:asDGGS_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:asDGGS_param2 a fno:Parameter ;
    skos:prefLabel "specificDggsDatatype"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:asGML a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-gml-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent GML representation defined by a gmlProfile version string preserving the coordinate reference system."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asGML"@en ;
    fno:expects ( geof:asGML_param1 geof:asGML_param2 ) ;
    fno:returns ( geof:asGML_output ) .

geof:asGML_output a fno:Output ;
    fno:required true ;
    fno:type geo:gmlLiteral .

geof:asGML_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:asGML_param2 a fno:Parameter ;
    skos:prefLabel "gmlProfile"@en ;
    fno:required true ;
    fno:type xsd:string .

geof:asGeoJSON a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:contributor "Timo Homburg" ;
    dcterms:creator "OGC GeoSPARQL 2.0 Standard Working Group" ;
    dcterms:date "2021-05-20"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-geojson-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent GeoJSON representation. Coordinates are converted to the CRS84 coordinate system, the only valid coordinate system to be used in a GeoJSON literal."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asGeoJSON"@en ;
    fno:expects ( geof:asGeoJSON_param1 ) ;
    fno:returns ( geof:asGeoJSON_output ) .

geof:asGeoJSON_output a fno:Output ;
    fno:required true ;
    fno:type geo:geoJSONLiteral .

geof:asGeoJSON_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:asKML a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-kml-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent KML representation. Coordinates are converted to the CRS84 coordinate system, the only valid coordinate system to be used in a KML literal."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asKML"@en ;
    fno:expects ( geof:asKML_param1 ) ;
    fno:returns ( geof:asKML_output ) .

geof:asKML_output a fno:Output ;
    fno:required true ;
    fno:type geo:kmlLiteral .

geof:asKML_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:asWKT a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/geometry-as-wkt-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Converts a given geometry to an equivalent WKT representation preserving the coordinate reference system and geometry type, if possible."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "asWKT"@en ;
    fno:expects ( geof:asWKT_param1 ) ;
    fno:returns ( geof:asWKT_output ) .

geof:asWKT_output a fno:Output ;
    fno:required true ;
    fno:type geo:wktLiteral .

geof:asWKT_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:boundary_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:boundary_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:buffer_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:buffer_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:buffer_param2 a fno:Parameter ;
    skos:prefLabel "radius"@en ;
    fno:required true ;
    fno:type xsd:double .

geof:buffer_param3 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:centroid_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:centroid_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:concaveHull a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that calculates the concave hull of a set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "concave hull"@en ;
    fno:expects ( geof:concaveHull_param1 ) ;
    fno:returns ( geof:concaveHull_output ) .

geof:concaveHull_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:concaveHull_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:convexHull_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:convexHull_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:difference_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:difference_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:difference_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:dimension_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geof:dimension_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:distance_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:distance_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:distance_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:distance_param3 a fno:Parameter ;
    skos:prefLabel "units"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:ehContains_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehContains_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehContains_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehCoveredBy_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehCoveredBy_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehCovers_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehCovers_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehCovers_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehDisjoint_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehDisjoint_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehDisjoint_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehEquals_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehEquals_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehEquals_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehInside_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehInside_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehInside_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehMeet_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehMeet_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehMeet_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehOverlap_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:ehOverlap_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:ehOverlap_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:envelope_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:envelope_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:geometryN a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the the nth geometry if the given geometry literal contains a GeometryCollection."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "geometryN"@en ;
    fno:expects ( geof:geometryN_param1 geof:geometryN_param2 ) ;
    fno:returns ( geof:geometryN_output ) .

geof:geometryN_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:geometryN_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:geometryN_param2 a fno:Parameter ;
    skos:prefLabel "geomindex"@en ;
    fno:required true ;
    fno:type xsd:int .

geof:getSRID_output a fno:Output ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:getSRID_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:intersection_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:intersection_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:intersection_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:isEmpty_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:isEmpty_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:isSimple_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:isSimple_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:length_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:length_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral,
        xsd:anyURI .

geof:maxX_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:maxX_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:maxY_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:maxY_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:maxZ_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:maxZ_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricArea_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geof:metricArea_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricBuffer_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricBuffer_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricBuffer_param2 a fno:Parameter ;
    skos:prefLabel "radius"@en ;
    fno:required true ;
    fno:type xsd:double .

geof:metricDistance_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:metricDistance_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricDistance_param2 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricLength_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:metricLength_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:metricPerimeter_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:metricPerimeter_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:minX_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:minX_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:minY_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:minY_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:minZ_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:minZ_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:numGeometries a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the number of geometries if the given geometry literal contains a GeometryCollection."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "numGeometries"@en ;
    fno:expects ( geof:numGeometries_param1 ) ;
    fno:returns ( geof:numGeometries_output ) .

geof:numGeometries_output a fno:Output ;
    fno:required true ;
    fno:type xsd:integer .

geof:numGeometries_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:perimeter_output a fno:Output ;
    fno:required true ;
    fno:type xsd:double .

geof:perimeter_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:perimeter_param2 a fno:Parameter ;
    skos:prefLabel "unit"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:rcc8dc_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8dc_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8dc_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8ec_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8ec_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8ec_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8eq_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8eq_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8eq_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8ntpp_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8ntpp_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8ntpp_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8ntppi_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8ntppi_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8ntppi_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8po_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8po_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8po_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8tpp_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8tpp_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8tpp_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8tppi_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:rcc8tppi_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:rcc8tppi_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:relate_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:relate_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:relate_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:relate_param3 a fno:Parameter ;
    skos:prefLabel "pattern-matrix"@en ;
    fno:required true ;
    fno:type xsd:string .

geof:sfContains_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfContains_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfContains_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfCrosses_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfCrosses_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfCrosses_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfDisjoint_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfDisjoint_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfDisjoint_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfEquals_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfEquals_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfEquals_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfIntersects_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfIntersects_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfIntersects_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfOverlaps_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfOverlaps_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfOverlaps_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfTouches_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfTouches_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfTouches_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfWithin_output a fno:Output ;
    fno:required true ;
    fno:type xsd:boolean .

geof:sfWithin_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:sfWithin_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:symDifference_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:symDifference_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:symDifference_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:transform_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:transform_param1 a fno:Parameter ;
    skos:prefLabel "geom"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:transform_param2 a fno:Parameter ;
    skos:prefLabel "srsIRI"@en ;
    fno:required true ;
    fno:type xsd:anyURI .

geof:union_output a fno:Output ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:union_param1 a fno:Parameter ;
    skos:prefLabel "geom1"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:union_param2 a fno:Parameter ;
    skos:prefLabel "geom2"@en ;
    fno:required true ;
    fno:type geo:dggsLiteral,
        geo:geoJSONLiteral,
        geo:gmlLiteral,
        geo:kmlLiteral,
        geo:wktLiteral .

geof:area a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the area of a geometry in square meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "area"@en ;
    fno:expects ( geof:area_param1 geof:area_param2 ) ;
    fno:returns ( geof:area_output ) .

geof:boundary a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the boundary of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "boundary"@en ;
    fno:expects ( geof:boundary_param1 ) ;
    fno:returns ( geof:boundary_output ) .

geof:boundingCircle a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2021-02-25"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that calculates the minimum bounding circle of set of geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "bounding circle"@en .

geof:buffer a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a buffer around the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "buffer"@en ;
    fno:expects ( geof:buffer_param1 geof:buffer_param2 geof:buffer_param3 ) ;
    fno:returns ( geof:buffer_output ) .

geof:convexHull a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the convex hull of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "convex hull"@en ;
    fno:expects ( geof:convexHull_param1 ) ;
    fno:returns ( geof:convexHull_output ) .

geof:difference a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of the first geometry but not the second geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "difference"@en ;
    fno:expects ( geof:difference_param1 geof:difference_param2 ) ;
    fno:returns ( geof:difference_output ) .

geof:dimension a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the dimension of a geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "area"@en ;
    fno:expects ( geof:dimension_param1 ) ;
    fno:returns ( geof:dimension_output ) .

geof:distance a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the distance between the two closest points of the input geometries."@en ;
    skos:example spec11:B.2.2.4 ;
    skos:inScheme cs: ;
    skos:prefLabel "distance"@en ;
    fno:expects ( geof:distance_param1 geof:distance_param2 geof:distance_param3 ) ;
    fno:returns ( geof:distance_output ) .

geof:ehContains a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument. 
      
DE-9IM: T*TFF*FF*"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "contains"@en ;
    fno:expects ( geof:ehContains_param1 geof:ehContains_param2 ) ;
    fno:returns ( geof:ehContains_output ) .

geof:ehCoveredBy a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially covered by the second geometry argument.

DE-9IM: TFF*TFT**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "covered by"@en ;
    fno:expects ( geof:ehCoveredBy_param1 geof:ehCoveredBy_param2 ) ;
    fno:returns ( geof:ehConveredBy_output ) .

geof:ehCovers a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially covers the second geometry argument.

DE-9IM: T*TFT*FF*"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "covers"@en ;
    fno:expects ( geof:ehCovers_param1 geof:ehCovers_param2 ) ;
    fno:returns ( geof:ehCovers_output ) .

geof:ehDisjoint a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 

DE-9IM: FF*FF****"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "disjoint"@en ;
    fno:expects ( geof:ehDisjoint_param1 geof:ehDisjoint_param2 ) ;
    fno:returns ( geof:ehDisjoint_output ) .

geof:ehEquals a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are equal. 

DE-9IM: TFFFTFFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geof:ehEquals_param1 geof:ehEquals_param2 ) ;
    fno:returns ( geof:ehEquals_output ) .

geof:ehInside a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially inside the second geometry argument.

DE-9IM: TFF*FFT**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "inside"@en ;
    fno:expects ( geof:ehInside_param1 geof:ehInside_param2 ) ;
    fno:returns ( geof:ehInside_output ) .

geof:ehMeet a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries meet.

DE-9IM: FT******* ^ F**T***** ^ F***T****"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "meet"@en ;
    fno:expects ( geof:ehMeet_param1 geof:ehMeet_param2 ) ;
    fno:returns ( geof:ehMeet_output ) .

geof:ehOverlap a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/eh-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries overlap.

DE-9IM: T*T***T**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "overlap"@en ;
    fno:expects ( geof:ehOverlap_param1 geof:ehOverlap_param2 ) ;
    fno:returns ( geof:ehOverlap_output ) .

geof:envelope a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum bounding rectangle of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "envelope"@en ;
    fno:expects ( geof:envelope_param1 ) ;
    fno:returns ( geof:envelope_output ) .

geof:getSRID a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/srid-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the spatial reference system URI of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "getSRID"@en ;
    fno:expects ( geof:getSRID_param1 ) ;
    fno:returns ( geof:getSRID_output ) .

geof:intersection a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of both input geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "intersection"@en ;
    fno:expects ( geof:intersection_param1 geof:intersection_param2 ) ;
    fno:returns ( geof:intersection_output ) .

geof:isEmpty a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the input geometry is empty."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "isEmpty"@en ;
    fno:expects ( geof:isEmpty_param1 ) ;
    fno:returns ( geof:isEmpty_output ) .

geof:isSimple a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the input geometry is a simple geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "isSimple"@en ;
    fno:expects ( geof:isSimple_param1 ) ;
    fno:returns ( geof:isSimple_output ) .

geof:length a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the length of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "length"@en ;
    fno:expects ( geof:length_param1 geof:length_param2 ) ;
    fno:returns ( geof:length_output ) .

geof:maxX a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the maximum x coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "maxX"@en ;
    skos:scopeNote "X indicates the first dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geof:maxX_param1 ) ;
    fno:returns ( geof:maxX_output ) .

geof:maxY a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the maximum y coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "maxY"@en ;
    skos:scopeNote "Y indicates the second dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geof:maxY_param1 ) ;
    fno:returns ( geof:maxY_output ) .

geof:maxZ a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the maximum z coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "maxZ"@en ;
    skos:scopeNote "Z indicates the third dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geof:maxZ_param1 ) ;
    fno:returns ( geof:maxZ_output ) .

geof:metricArea a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the area of a geometry in squaremeters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric area"@en ;
    fno:expects ( geof:metricArea_param1 ) ;
    fno:returns ( geof:metricArea_output ) .

geof:metricBuffer a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:date "2022-04-20"^^xsd:date ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a buffer around the input geometry, using a distance in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric buffer"@en ;
    fno:expects ( geof:metricBuffer_param1 geof:metricBuffer_param2 ) ;
    fno:returns ( geof:metricBuffer_output ) .

geof:metricDistance a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the distance in meters between the two closest points of the input geometries."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric distance"@en ;
    fno:expects ( geof:metricDistance_param1 geof:metricDistance_param2 ) ;
    fno:returns ( geof:metricDistance_output ) .

geof:metricLength a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the length of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric length"@en ;
    fno:expects ( geof:metricLength_param1 ) ;
    fno:returns ( geof:metricLength_output ) .

geof:metricPerimeter a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the perimeter of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "metric perimeter"@en ;
    fno:expects ( geof:metricPerimeter_param1 ) ;
    fno:returns ( geof:metricPerimeter_output ) .

geof:minX a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum x coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "minX"@en ;
    skos:scopeNote "X indicates the first dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geof:minX_param1 ) ;
    fno:returns ( geof:minX_output ) .

geof:minY a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum y coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "minY"@en ;
    skos:scopeNote "Y indicates the second dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geof:minY_param1 ) ;
    fno:returns ( geof:minY_output ) .

geof:minZ a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/sa-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns the minimum z coordinate of the input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "minZ"@en ;
    skos:scopeNote "Z indicates the third dimension as indicated by the spatial reference system"@en ;
    fno:expects ( geof:minZ_param1 ) ;
    fno:returns ( geof:minZ_output ) .

geof:perimeter a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "Returns the perimeter of a geometry in meters."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "perimeter"@en ;
    fno:expects ( geof:perimeter_param1 geof:perimeter_param2 ) ;
    fno:returns ( geof:perimeter_output ) .

geof:rcc8dc a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 

DE-9IM: FFTFFTTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "disconnected"@en ;
    fno:expects ( geof:rcc8dc_param1 geof:rcc8dc_param2 ) ;
    fno:returns ( geof:rcc8dc_output ) .

geof:rcc8ec a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries meet. 

DE-9IM: FFTFTTTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "externally connected"@en ;
    fno:expects ( geof:rcc8ec_param1 geof:rcc8ec_param2 ) ;
    fno:returns ( geof:rcc8ec_output ) .

geof:rcc8eq a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are equal. 
      
DE-9IM: TFFFTFFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geof:rcc8eq_param1 geof:rcc8eq_param2 ) ;
    fno:returns ( geof:rcc8eq_output ) .

geof:rcc8ntpp a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially inside the second geometry argument.

DE-9IM: TFFTFFTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "non-tangential proper part"@en ;
    fno:expects ( geof:rcc8ntpp_param1 geof:rcc8ntpp_param2 ) ;
    fno:returns ( geof:rcc8ntpp_output ) .

geof:rcc8ntppi a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument.

DE-9IM: TTTFFTFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "non-tangential proper part inverse"@en ;
    fno:expects ( geof:rcc8ntppi_param1 geof:rcc8ntppi_param2 ) ;
    fno:returns ( geof:rcc8ntppi_output ) .

geof:rcc8po a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries overlap.

DE-9IM: TTTTTTTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "partially overlapping"@en ;
    fno:expects ( geof:rcc8po_param1 geof:rcc8po_param2 ) ;
    fno:returns ( geof:rcc8po_output ) .

geof:rcc8tpp a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially covered by the second geometry argument.

DE-9IM: TFFTTFTTT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "tangential proper part"@en ;
    fno:expects ( geof:rcc8tpp_param1 geof:rcc8tpp_param2 ) ;
    fno:returns ( geof:rcc8tpp_output ) .

geof:rcc8tppi a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/rcc8-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially covers the second geometry argument.

DE-9IM: TTTFTTFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "tangential proper part inverse"@en ;
    fno:expects ( geof:rcc8tppi_param1 geof:rcc8tppi_param2 ) ;
    fno:returns ( geof:rcc8tppi_output ) .

geof:relate a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/relate-query-function> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns true if the spatial relationship between the two input geometries corresponds to one with acceptable values for the specified DE-9IM pattern matrix."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "relate"@en ;
    fno:expects ( geof:relate_param1 geof:relate_param2 geof:relate_param3 ) ;
    fno:returns ( geof:relate_output ) .

geof:sfContains a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially contains the second geometry argument.

DE-9IM: T*****FF*"""@en ;
    skos:example spec11:B.2.2.1 ;
    skos:inScheme cs: ;
    skos:prefLabel "contains"@en ;
    fno:expects ( geof:sfContains_param1 geof:sfContains_param2 ) ;
    fno:returns ( geof:sfContains_output ) .

geof:sfCrosses a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially crosses the second geometry argument.

DE-9IM: T*T***T**"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "crosses"@en ;
    fno:expects ( geof:sfCrosses_param1 geof:sfCrosses_param2 ) ;
    fno:returns ( geof:sfCrosses_output ) .

geof:sfDisjoint a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are disjoint. 
      
DE-9IM: FF*FF****"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "disjoint"@en ;
    fno:expects ( geof:sfDisjoint_param1 geof:sfDisjoint_param2 ) ;
    fno:returns ( geof:sfDisjoint_output ) .

geof:sfEquals a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries are equal. 

DE-9IM: TFFFTFFFT"""@en ;
    skos:inScheme cs: ;
    skos:prefLabel "equals"@en ;
    fno:expects ( geof:sfEquals_param1 geof:sfEquals_param2 ) ;
    fno:returns ( geof:sfEquals_output ) .

geof:sfIntersects a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries intersect.

DE-9IM: T******** ^ *T******* ^ ***T***** ^ ****T**** """@en ;
    skos:inScheme cs: ;
    skos:prefLabel "intersects"@en ;
    fno:expects ( geof:sfIntersects_param1 geof:sfIntersects_param2 ) ;
    fno:returns ( geof:sfIntersects_output ) .

geof:sfOverlaps a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument spatially overlaps the second geometry argument.

DE-9IM: T*T***T** """@en ;
    skos:inScheme cs: ;
    skos:prefLabel "overlaps"@en ;
    fno:expects ( geof:sfOverlaps_param1 geof:sfOverlaps_param2 ) ;
    fno:returns ( geof:sfOverlaps_output ) .

geof:sfTouches a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the input geometries touch.

DE-9IM: FT******* ^ F**T***** ^ F***T****"""@en ;
    skos:example spec11:B.2.2.3 ;
    skos:inScheme cs: ;
    skos:prefLabel "touches"@en ;
    fno:expects ( geof:sfTouches_param1 geof:sfTouches_param2 ) ;
    fno:returns ( geof:sfTouches_output ) .

geof:sfWithin a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-topology-extension/sf-query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition """A query function that returns true if the first geometry argument is spatially within the second geometry argument. 

DE-9IM: T*F**F***"""@en ;
    skos:example spec11:B.2.2.2 ;
    skos:inScheme cs: ;
    skos:prefLabel "within"@en ;
    fno:expects ( geof:sfWithin_param1 geof:sfWithin_param2 ) ;
    fno:returns ( geof:sfWithin_output ) .

geof:symDifference a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of only one input geometry."@en ;
    skos:inScheme cs: ;
    skos:prefLabel "symmetric difference"@en ;
    fno:expects ( geof:symDifference_param1 geof:symDifference_param2 ) ;
    fno:returns ( geof:symDifference_output ) .

geof:union a skos:Concept,
        sd:Function,
        fno:Function ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    policy:status status:valid ;
    rdfs:isDefinedBy <http://www.opengis.net/spec/geosparql/1.1/req/geometry-extension/query-functions> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    skos:definition "A query function that returns a geometry consisting of all points that are part of at least one input geometry."@en ;
    skos:example spec11:B.2.2.3 ;
    skos:inScheme cs: ;
    skos:prefLabel "union"@en ;
    fno:expects ( geof:union_param1 geof:union_param2 ) ;
    fno:returns ( geof:union_output ) .

cs: a skos:ConceptScheme ;
    dcterms:created "2021-06-16"^^xsd:date ;
    dcterms:creator [ a sdo:Organization ;
            sdo:name "OGC GeoSPARQL Standards Working Group" ;
            sdo:url "https://www.ogc.org"^^xsd:anyURI ] ;
    dcterms:license "https://www.ogc.org/license"^^xsd:anyURI ;
    dcterms:modified "2023-11-30"^^xsd:date ;
    dcterms:publisher [ a sdo:Organization ;
            sdo:name "Open Geospatial Consortium" ;
            sdo:url "https://www.ogc.org"^^xsd:anyURI ] ;
    dcterms:rights "(c) 2023 Open Geospatial Consortium" ;
    dcterms:source <http://www.opengis.net/doc/geosparql/1.1> ;
    rdfs:seeAlso <http://www.opengis.net/doc/geosparql/1.1> ;
    owl:versionIRI geof:1.1 ;
    skos:definition "A vocabulary of the functions defined within the GeoSPARQL 1.1 specification"@en ;
    skos:hasTopConcept geof:area,
        geof:asDGGS,
        geof:asGML,
        geof:asGeoJSON,
        geof:asKML,
        geof:asWKT,
        geof:boundary,
        geof:boundingCircle,
        geof:buffer,
        geof:concaveHull,
        geof:convexHull,
        geof:difference,
        geof:dimension,
        geof:distance,
        geof:ehContains,
        geof:ehCoveredBy,
        geof:ehCovers,
        geof:ehDisjoint,
        geof:ehEquals,
        geof:ehInside,
        geof:ehMeet,
        geof:ehOverlap,
        geof:envelope,
        geof:getSRID,
        geof:intersection,
        geof:isEmpty,
        geof:isSimple,
        geof:length,
        geof:maxX,
        geof:maxY,
        geof:maxZ,
        geof:metricArea,
        geof:metricBuffer,
        geof:metricDistance,
        geof:metricLength,
        geof:metricPerimeter,
        geof:minX,
        geof:minY,
        geof:minZ,
        geof:perimeter,
        geof:rcc8dc,
        geof:rcc8ec,
        geof:rcc8eq,
        geof:rcc8ntpp,
        geof:rcc8ntppi,
        geof:rcc8po,
        geof:rcc8tpp,
        geof:rcc8tppi,
        geof:relate,
        geof:sfContains,
        geof:sfCrosses,
        geof:sfDisjoint,
        geof:sfEquals,
        geof:sfIntersects,
        geof:sfOverlaps,
        geof:sfTouches,
        geof:sfWithin,
        geof:symDifference,
        geof:union ;
    skos:historyNote "This vocabulary was generated for GeoSPARQL 1.1 using some content that was already specified for GeoSPARQL 1.0 but which was expanded on" ;
    skos:prefLabel "GeoSPARQL 1.1 Functions"@en .

