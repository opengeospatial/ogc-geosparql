@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sdo: <https://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://www.opengis.net/def/geosparql/validator/> .


<http://www.opengis.net/def/geosparql/validator>
	a owl:Ontology ;
  	dcterms:title "GeoSPARQL RDF Shapes Validator"@de ;
	dcterms:description """Diese [Shapes Constraint Language (SHACL)](https://www.w3.org/TR/shacl/) Datei definiert Beschränkungen für RDF Daten. Es kann zur Verifizierung der Konformität zum GeoSPARQL Standard verwendet werden.
	
Für GeoSPARQL 1.1, ist dieser Validator nicht normativ, sondern nur informativ, er wird aber wahrscheinlich die Grundlage für zukünftige, normative Validatoren sein."""@de ;
	dcterms:publisher [
		a sdo:Organization ;
		sdo:name "Open Geospatial Consortium" ;
		sdo:url "https://www.ogc.org"^^xsd:anyURI ;
	] ;
	dcterms:creator "OGC GeoSPARQL Standards Working Group" ;
	dcterms:created "2021-06-13"^^xsd:date ;
	dcterms:modified "2021-08-12"^^xsd:date ;
    dcterms:license "https://www.ogc.org/license"^^xsd:anyURI ;
	dcterms:rights "(c) 2021 Open Geospatial Consortium" ; 	
	owl:versionInfo "OGC GeoSPARQL 1.1" ;
	owl:versionIRI <http://www.opengis.net/def/geosparql/validator/1.1> ;
.

#################################################
# Shape 1 (1a-1e)
#################################################

<S1-hasGeometry-hasSerialization>
    a sh:NodeShape ;
	sh:targetObjectsOf geo:hasGeometry ;
	sh:property <S1-a-hasGeometry-hasSerialization-sub> , <S1-b-hasGeometry-hasSerialization-sub> , <S1-c-hasGeometry-hasSerialization-sub> , <S1-d-hasGeometry-hasSerialization-sub> , <S1-e-hasGeometry-hasSerialization-sub> ;
.
<S1-hasDefaultGeometry-hasSerialization>
    a sh:NodeShape ;
	sh:targetObjectsOf geo:hasDefaultGeometry ;
	sh:property <S1-a-hasGeometry-hasSerialization-sub> ,  <S1-c-hasGeometry-hasSerialization-sub> , <S1-d-hasGeometry-hasSerialization-sub> , <S1-e-hasGeometry-hasSerialization-sub> ;
.
<S1-cefaultGeometry-hasSerialization>
    a sh:NodeShape ;
	sh:targetObjectsOf geo:defaultGeometry ;
	sh:property <S1-a-hasGeometry-hasSerialization-sub> ,  <S1-b-hasGeometry-hasSerialization-sub> , <S1-c-hasGeometry-hasSerialization-sub> , <S1-d-hasGeometry-hasSerialization-sub> , <S1-e-hasGeometry-hasSerialization-sub> ;
.

<S1-a-hasGeometry-hasSerialization-sub>
	a sh:PropertyShape ;
	sh:path [ 
		sh:alternativePath (
			geo:hasSerialization
			geo:asGML
			geo:asWKT
			geo:asGeoJSON
			geo:asKML
			geo:asDGGS
		) 
	] ;
	sh:minCount 1 ;
	sh:message "Jeder Knoten mit einer eingehenden geo:hasGeometry oder einer Spezialisierung davon, sollte mindestens eine ausgehende Relation haben, die entweder geo:hasSerialization oder eine Spezialisierung davon ist."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasGeometry mit einer ausgegenden geo:asWKT Beziehung
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasGeometry ohne eine ausgehende geo:hasSerialization oder eine speziellere Variante
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [] ;
		.
		""" ,
		"""
		# Ein gültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasDefaultGeometry, mit einer ausgehenden geo:asWKT Beziehung
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasDefaultGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasDefaultGeometry, ohne eine ausgehende geo:hasSerialization Beziehung oder eine speziellere Variante
    @prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasDefaultGeometry [] ;
		.
		""" ;
.

<S1-b-hasGeometry-hasSerialization-sub>
	a sh:PropertyShape ;
	sh:path geo:asWKT ;
	sh:maxCount 1 ;
	sh:message "Jeder Knoten mit einer eingehenden geo:hasGeometry oder einer Spezialisierung davon kann maximal eine ausgehende geo:asWKT-Beziehung haben."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasGeometry mit einer ausgehenden geo:asWKT Beziehung
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein gültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasGeometry mit einer ausgehenden geo:asWKT Beziehung. RDF behandelt beide Einträge als ein Tripel, da sie identisch sind.
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Eine in einen Geometry Blank node eingehende Beziehung geo:hasGeometry mit zwei ausgehenden geo:asWKT Beziehungen
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
				geo:asWKT "POINT (153.08 -27.32)"^^geo:wktLiteral ;
			] ;
		.
		""" ;
.

<S1-c-hasGeometry-hasSerialization-sub>
	a sh:PropertyShape ;
	sh:path geo:asGML ;
	sh:maxCount 1 ;
	sh:message "Jeder Knoten mit einer eingehenden geo:hasGeometry oder einer Spezialisierung davon kann maximal eine ausgehende geo:asGML-Beziehung aufweisen."@de ;
.

<S1-d-hasGeometry-hasSerialization-sub>
	a sh:PropertyShape ;
	sh:path geo:asGeoJSON ;
	sh:maxCount 1 ;
	sh:message "Jeder Knoten mit einer eingehenden geo:hasGeometry oder einer Spezialisierung davon kann maximal eine ausgehende geo:asGeoJSON-Beziehung aufweisen."@de ;
.

<S1-e-hasGeometry-hasSerialization-sub>
	a sh:PropertyShape ;
	sh:path geo:asKML ;
	sh:maxCount 1 ;
	sh:message "Jeder Knoten mit einer eingehenden geo:hasGeometry oder einer Spezialisierung davon kann maximal eine ausgehende geo:asKML-Beziehung aufweisen."@de ;
.

#################################################
# Shape 3 + 3b + 3c
#################################################

<S3-hasGeometry-hasGeometry>
    a sh:NodeShape ;
	sh:targetObjectsOf geo:hasGeometry ;
	sh:property <S3-hasGeometry-hasGeometry-sub> ;
.
<S3-b-hasDefaultGeometry-hasGeometry>
    a sh:NodeShape ;
	sh:targetObjectsOf geo:hasDefaultGeometry ;
	sh:property <S3-hasGeometry-hasGeometry-sub> ;
.
<S3-c-defaultGeometry-hasGeometry>
    a sh:NodeShape ;
	sh:targetObjectsOf geo:defaultGeometry ;
	sh:property <S3-hasGeometry-hasGeometry-sub> ;
.

<S3-hasGeometry-hasGeometry-sub>
	a sh:PropertyShape ;
	sh:path [ 
		sh:alternativePath (
			geo:hasGeometry
			geo:hasDefaultGeometry
			geo:defaultGeometry
		)
	] ;
	sh:maxCount 0 ;
	sh:message "Ein Knoten, der eine eingehende geo:hasGeometry-Eigenschaft oder eine Spezialisierung davon hat, kann nicht gleichzeitig eine ausgehende geo:hasGeometry-Eigenschaft oder eine Spezialisierung davon haben (ein geo:Feature kann nicht gleichzeitig eine geo:Geometry sein)"@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Die Ressourceninstanz <resource-x-geom1> hat eine eingehende Eigenschaft geo:hasGeometry und keine ausgehende Eigenschaft geo:hasGeometry oder eine Spezialisierung davon
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<resource-x> geo:hasGeometry <resource-x-geom1> .
		<resource-x-geom1> geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral .
		""" ,
		"""
		# Ein ungültiges Beispiel: Die Resourceninstanz <resource-x> hat sowohl eine ausgehende als auch eine eingehende geo:hasGeometry-Eigenschaft (d.h. sie ist gleichzeitig ein geo:Feature und eine geo:Geometry)
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<resource-y>
			geo:hasGeometry <resource-x> ;
		.
		<resource-x>
			geo:asWKT "POINT (153.084232 -27.322734)"^^geo:wktLiteral ;
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.		
		""" ,
		"""
		# Ein gültiges Beispiel: Die Ressourceninstanz <resource-x-geom1> hat eine eingehende Eigenschaft geo:hasDefaultGeometry und keine ausgehende Eigenschaft geo:hasGeometry oder eine Spezialisierung davon
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<resource-x> geo:hasDefaultGeometry <resource-x-geom1> .
		<resource-x-geom1> geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral .
		""" ,
		"""
		# Ein ungültiges Beispiel: Die Resourceninstanz <resource-x> hat eine eingehende Eigenschaft geo:hasDefaultGeometry und eine ausgehende Eigenschaft geo:hasGeometry (d.h. sie ist gleichzeitig ein geo:Feature und eine geo:Geometry)
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<resource-y>
			geo:hasDefaultGeometry <resource-x> ;
		.
		<resource-x>
			geo:asWKT "POINT (153.084232 -27.322734)"^^geo:wktLiteral ;
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.		
		""" ;
.

#################################################
# Shape 4
#################################################

<S4-hasSerialization-literal>
	a sh:NodeShape ;
	sh:targetObjectsOf
		geo:hasSerialization ,
		geo:asGML ,
		geo:asWKT ,
		geo:asGeoJSON ,
		geo:asKML ,
		geo:asDGGS ;
	sh:nodeKind sh:Literal ;
	sh:message "Das Ziel einer geo:hasSerialization-Eigenschaft, oder eine Spezialisierung davon, sollte ein RDF-Literal sein."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Das Ziel einer geo:asWKT-Eigenschaft ist ein RDF-Literal
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Das Ziel einer geo:asWKT-Eigenschaft ist kein RDF-Literal
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-y>
			geo:hasGeometry [
				geo:asWKT <geometry-serialization-node> ;
			] ;
		.		
		""" ;
.

#################################################
# Shape 5-6-7-8
#################################################

<S5-asWKT-wktLiteral>
	a sh:NodeShape ;
	sh:targetObjectsOf geo:asWKT ;
	sh:datatype geo:wktLiteral ;
	sh:message "Das Ziel einer geo:asWKT-Eigenschaft sollte ein RDF-Literal mit dem Datentyp geo:wktLiteral sein."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Das Ziel einer geo:asWKT-Eigenschaft ist ein RDF-Literal mit dem Datentyp geo:wktLiteral
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Das Ziel einer geo:asWKT-Eigenschaft ist kein RDF-Literal
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-y>
			geo:hasGeometry [
				geo:asWKT <geometry-serialization-node> ;
			] ;
		.		
		""" ,
		"""
		# Ein ungültiges Beispiel: Das Ziel einer geo:asWKT-Eigenschaft ist ein RDF-Literal, aber mit dem falschen Datentyp (xsd:string)
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-z>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)" ;
			] ;
		.		
		""" ;
.

<S6-asGML-gmlLiteral>
	a sh:NodeShape ;
	sh:targetObjectsOf geo:asGML ;
	sh:datatype geo:gmlLiteral ;
	sh:message "Das Ziel einer geo:asGML-Eigenschaft sollte ein RDF-Literal mit dem Datentyp geo:gmlLiteral sein."@de ;
.

<S7-asGeoJSON-geoJSONLiteral>
	a sh:NodeShape ;
	sh:targetObjectsOf geo:asGeoJSON ;
	sh:datatype geo:geoJSONLiteral ;
	sh:message "Das Ziel einer geo:asGML-Eigenschaft sollte ein RDF-Literal mit dem Datentyp geo:gmlLiteral sein."@de ;
.

<S8-asKML-kmlLiteral>
	a sh:NodeShape ;
	sh:targetObjectsOf geo:asKML ;
	sh:datatype geo:kmlLiteral ;
	sh:message "Das Ziel einer geo:asKML-Eigenschaft sollte ein RDF-Literal mit dem Datentyp geo:kmlLiteral sein."@de ;
.

#################################################
# Shape 9-10-11-12-13-14 (14a-14d)
#################################################
# each metadata property on geo:Geometry can exist only once

<S9-many-coordinateDimension-one>
	a sh:NodeShape ;
	sh:property <S9-many-coordinateDimension-one-sub> ;
	sh:targetSubjectsOf geo:coordinateDimension ;
.
	
<S9-many-coordinateDimension-one-sub>
	a sh:PropertyShape ;
	sh:path geo:coordinateDimension ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende geo:coordinateDimension-Eigenschaft haben."@de ;
	skos:example
		"""
		# Ein gültiges Beispiel: Das Subjekt einer geo:coordinateDimension-Eigenschaft hat keine anderen Eigenschaften mit demselben Namen
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		
		<feature-x>
			geo:hasGeometry [
				geo:coordinateDimension 2 ;
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:dggsLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Das Subjekt einer geo:coordinateDimension-Eigenschaft hat auch eine andere Eigenschaft mit demselben Eigenschaftsnamen, aber einem anderen Wert
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		
		<feature-y>
			geo:hasGeometry [
				geo:coordinateDimension 2 , 3 ;
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:dggsLiteral ;
			] ;
		.
		""" ;
.	
	
<S10-many-dimension-one>
	a sh:NodeShape ;
	sh:property <S10-many-dimension-one-sub> ;
	sh:targetSubjectsOf geo:dimension ;
.
	
<S10-many-dimension-one-sub>
	a sh:PropertyShape ;
	sh:path geo:dimension ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende geo:dimension-Eigenschaft haben."@de ;
.	

<S11-many-isEmpty-one>
	a sh:NodeShape ;
	sh:property <S11-many-isEmpty-one-sub> ;
	sh:targetSubjectsOf geo:isEmpty ;
.
	
<S11-many-isEmpty-one-sub>
	a sh:PropertyShape ;
	sh:path geo:isEmpty ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry Knoten sollte maximal eine ausgehende geo:isEmpty Eigenschaft haben."@de ;
.	

<S12-many-isSimple-one>
	a sh:NodeShape ;
	sh:property <S12-many-isSimple-one-sub> ;
	sh:targetSubjectsOf geo:isSimple ;
.
	
<S12-many-isSimple-one-sub>
	a sh:PropertyShape ;
	sh:path geo:isSimple ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry Knoten sollte maximal eine ausgehende geo:isSimple Eigenschaft haben."@de ;
.	

<S13-many-spatialDimension-one>
	a sh:NodeShape ;
	sh:property <S13-many-spatialDimension-one-sub> ;
	sh:targetSubjectsOf geo:spatialDimension ;
.
	
<S13-many-spatialDimension-one-sub>
	a sh:PropertyShape ;
	sh:path geo:spatialDimension ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende geo:spatialDimension-Eigenschaft haben."@de ;
.	


<S14a-many-hasSpatialResolution-one>
	a sh:NodeShape ;
	sh:property <S14a-many-hasSpatialResolution-one-sub> ;
	sh:targetSubjectsOf geo:hasSpatialResolution ;
.
	
<S14a-many-hasSpatialResolution-one-sub>
	a sh:PropertyShape ;
	sh:path geo:hasSpatialResolution ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende geo:hasSpatialResolution-Eigenschaft haben."@de ;
.	

<S14b-many-hasSpatialAccuracy-one>
	a sh:NodeShape ;
	sh:property <S14b-many-hasSpatialAccuracy-one-sub> ;
	sh:targetSubjectsOf geo:hasSpatialAccuracy ;
.
	
<S14b-many-hasSpatialAccuracy-one-sub>
	a sh:PropertyShape ;
	sh:path geo:hasSpatialAccuracy ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende geo:hasSpatialAccuracy-Eigenschaft haben."@de ;
.	

<S14c-many-hasMetricSpatialAccuracy-one>
	a sh:NodeShape ;
	sh:property <S14c-many-hasMetricSpatialAccuracy-one-sub> ;
	sh:targetSubjectsOf geo:hasMetricSpatialAccuracy ;
.
	
<S14c-many-hasMetricSpatialAccuracy-one-sub>
	a sh:PropertyShape ;
	sh:path geo:hasMetricSpatialAccuracy ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende Eigenschaft geo:hasMetricSpatialAccuracy haben."@de ;
.

<S14d-many-hasMetricSpatialResolution-one>
	a sh:NodeShape ;
	sh:property <S14d-many-hasMetricSpatialResolution-one-sub> ;
	sh:targetSubjectsOf geo:hasMetricSpatialResolution ;
.
	
<S14d-many-hasMetricSpatialResolution-one-sub>
	a sh:PropertyShape ;
	sh:path geo:hasMetricSpatialResolution ;
	sh:maxCount 1 ;
	sh:message "Ein geo:Geometry-Knoten sollte maximal eine ausgehende geo:hasMetricSpatialResolution-Eigenschaft haben."@de ;
.	

#################################################
# Shape 15-16-17-18-19
#################################################
# regex to check if content of WKT/GeoJSON/KML/GML literals complies with the basic patterns of such geometries, if possible (check start and/or end to find e.g. copy/paste errors with GeoSPARQL properties and datatypes, not to check if the content of a literal is fully compliant to the geometry format specification)

<S15-wkt-content>
	a sh:NodeShape ;
	sh:property <S15-wkt-content-sub-start> ; # the example in the SHACL spec (https://www.w3.org/TR/shacl/#constraints) refers to two property shapes: one for the start and one for the end
	sh:targetSubjectsOf geo:asWKT ;
.

<S15-wkt-content-sub-start>
	a sh:PropertyShape ;
	sh:path geo:asWKT ;
	sh:pattern "^\\s*$|^\\s*(P|C|S|L|T|<)" ;  # starts with P, C, S, L, T, or < for Point, TIN etc. or IRI
	sh:message "Der Inhalt eines RDF-Literals mit einer eingehenden geo:asWKT-Relation muss einer gültigen WKT-Zeichenkette entsprechen, wie sie in der offiziellen Spezifikation definiert ist (Simple Features Access)."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Das RDF-Literal mit einem eingehenden geo:asWKT hat einen gültigen WKT-String als Inhalt
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "POINT (153.084230 -27.322738)"^^geo:wktLiteral ;
			] ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Das RDF-Literal mit einer eingehenden geo:asWKT Beziehung hat keinen gültigen WKT-String als Inhalt, sondern einen GeoJSON-String
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x>
			geo:hasGeometry [
				geo:asWKT "{ \"type\": \"Point\", \"coordinates\": [149.06017784, -35.23612321] }"^^geo:wktLiteral ;
			] ;
		.
		""" ;
.

<S16-gml-content>
	a sh:NodeShape ;
	sh:property <S16-gml-content-sub-start> ; # the example in the SHACL spec (https://www.w3.org/TR/shacl/#constraints) refers to two property shapes: one for the start and one for the end
	sh:targetSubjectsOf geo:asGML ;
.

<S16-gml-content-sub-start>
	a sh:PropertyShape ;
	sh:path geo:asGML ;
	sh:pattern "^\\s*$|^\\s*(<)(.+)(>)\\s*$" ;  # starts with < ends with >
	sh:message "Der Inhalt eines RDF-Literals mit einer eingehenden geo:asGML-Relation muss einem wohlgeformten GML-Geometrie-XML-String entsprechen, wie er in der offiziellen Spezifikation definiert ist."@de ;
.

<S17-geojson-content>
	a sh:NodeShape ;
	sh:property <S18-geojson-content-sub-start> ; # the example in the SHACL spec (https://www.w3.org/TR/shacl/#constraints) refers to two property shapes: one for the start and one for the end
	sh:targetSubjectsOf geo:asGeoJSON ;
.

<S17-geojson-content-sub-start>
	a sh:PropertyShape ;
	sh:path geo:asGeoJSON ;
	sh:pattern "^\\s*$|^\\s*({)(.*)(})\\s*$" ;  # starts with { ends with }
	sh:message "Der Inhalt eines RDF-Literals mit einer eingehenden geo:asGeoJSON-Relation muss einem wohlgeformten GeoJSON-Geometrie-String entsprechen, wie er in seiner offiziellen Spezifikation definiert ist."@de ;
.

<S18-kml-content>
	a sh:NodeShape ;
	sh:property <S19-kml-content-sub-start> ; # the example in the SHACL spec (https://www.w3.org/TR/shacl/#constraints) refers to two property shapes: one for the start and one for the end
	sh:targetSubjectsOf geo:asKML ;
.

<S18-kml-content-sub-start>
	a sh:PropertyShape ;
	sh:path geo:asKML ;
	sh:pattern "^\\s*$|^\\s*(<)(.+)(>)\\s*$" ;  # starts with < ends with >
	sh:message "Der Inhalt eines RDF-Literals mit einer eingehenden geo:asKML-Relation muss einem wohlgeformten KML-Geometrie-XML-String entsprechen, wie er in der offiziellen Spezifikation definiert ist."@de ;
.

#################################################
# Shape 20
#################################################

<S20-dimension-coordinateDimension>
	a sh:NodeShape ;
	sh:property <S20-dimension-coordinateDimension-sub> ;
	sh:targetSubjectsOf geo:dimension ;
.

<S20-dimension-coordinateDimension-sub>
	a sh:PropertyShape ;
	sh:path geo:coordinateDimension ;
	sh:sparql [
		sh:message "Wenn sowohl die Eigenschaften geo:dimension als auch geo:coordinateDimension angegeben werden, sollte der Wert von geo:dimension kleiner oder gleich dem Wert von geo:coordinateDimension sein"@de ;
		sh:select """
			PREFIX geo: <http://www.opengis.net/ont/geosparql#>
			SELECT $this
			WHERE {
				$this geo:dimension ?dim ;
					geo:coordinateDimension ?coordDim .
				FILTER ( ?dim > ?coordDim )
			}
		""" ;
	] ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Die Eigenschaft geo:dimension hat den Wert 2 und die Eigenschaft geo:coordinateDimension den Wert 2
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x> geo:hasGeometry <feature-x-geom1> .
		<feature-x-geom1> geo:dimension 2 ;
			geo:coordinateDimension 2 ;
		.
		""" ,
		"""
		# Ein gültiges Beispiel: Die Eigenschaft geo:dimension hat den Wert 2 und es gibt keine Eigenschaft geo:coordinateDimension
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x> geo:hasGeometry <feature-x-geom1> .
		<feature-x-geom1> geo:dimension 2 ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Die Eigenschaft geo:dimension hat den Wert 3 und die Eigenschaft geo:coordinateDimension den Wert 2
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .

		<feature-x> geo:hasGeometry <feature-x-geom1> .
		<feature-x-geom1> geo:dimension 3 ;
			geo:coordinateDimension 2 ;
		.
		""" ;
.


#################################################
# Shape 21 - geo:FeatureCollection
#################################################

<S21-FeatureCollectionClass-member-feature>
	a sh:NodeShape ;
	sh:property <S21-FeatureCollectionClass-minOneMember-feature-sub> , <S21-FeatureCollectionClass-member-onlyFeature-sub> ;
	sh:targetClass geo:FeatureCollection ;
.

<S21-FeatureCollectionClass-minOneMember-feature-sub>
	a sh:PropertyShape ;
	sh:path rdfs:member ;
	sh:minCount 1 ;
	sh:message "Eine Instanz von geo:FeatureCollection sollte mindestens eine ausgehende rdfs:member-Beziehung aufweisen."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Der geo:FeatureCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<featureCollection-x> 
		    a geo:FeatureCollection ;
		    rdfs:member <feature-x> ;
		.
		
		<feature-x>
		    a geo:Feature ;
		    geo:hasGeometry <feature-x-geom1> ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Der geo:FeatureCollection-Instanzknoten hat keine ausgehenden rdfs:member-Beziehungen
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<featureCollection-x> a geo:FeatureCollection .
		""" ;
.

<S21-FeatureCollectionClass-member-onlyFeature-sub>
	a sh:PropertyShape ;
	sh:path rdfs:member ;
	sh:sparql [
		sh:message "Eine Instanz von geo:FeatureCollection sollte nur ausgehende rdfs:member haben, die zu geo:Feature-Instanzen verbunden sind."@de ;
		sh:select """
			PREFIX geo: <http://www.opengis.net/ont/geosparql#>
			PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
			SELECT $this
			WHERE {
				$this rdfs:member ?feature .
				FILTER NOT EXISTS {
					?feature geo:hasGeometry ?geometry .
				}
			}
		""" ;
	] ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Der geo:FeatureCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung zu einem geo:Feature-Knoten
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<featureCollection-x>
		    a geo:FeatureCollection ;
		    rdfs:member <feature-x>
		.
		
		<feature-x>
		    a geo:Feature ;
		    geo:hasGeometry <feature-x-geom1> ;
		.
		""" ,
		"""
		# Ein ungültiges Beispiel: Der geo:FeatureCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung zu einem geo:Feature-Knoten und eine weitere zu einem geo:Geometry-Knoten
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<featureCollection-x> 
		    a geo:FeatureCollection ;
		    rdfs:member <featureCollection-x> , <geometry-x> ;
		.
		
		<feature-x> geo:hasGeometry <feature-x-geom1> .
		
		<geometry-x> a geo:Geometry .			
		""" ;
.

#################################################
# Shape 22 - geo:GeometryCollection
#################################################

<S22-GeometryCollectionClass-member-geometry>
	a sh:NodeShape ;
	sh:property <S22-GeometryCollectionClass-minOneMember-geometry-sub> , <S22-GeometryCollectionClass-member-onlyGeometry-sub> ;
	sh:targetClass geo:GeometryCollection ;
.

<S22-GeometryCollectionClass-minOneMember-geometry-sub>
	a sh:PropertyShape ;
	sh:path rdfs:member ;
	sh:minCount 1 ;
	sh:message "Eine Instanz von geo:GeometryCollection sollte mindestens eine ausgehende rdfs:member-Beziehung haben."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Der geo:GeometryCollection-Instanzknoten hat eine eingehende rdfs:member-Beziehung
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<geometryCollection-x> 
		    a geo:GeometryCollection ;
		    rdfs:member <geometry-x> ;
		.
				
		<feature-x> geo:hasGeometry <geometry-x> .
		""" ,
		"""
		# Ein ungültiges Beispiel: Der geo:GeometryCollection-Instanzknoten hat keine ausgehenden rdfs:member-Beziehungen
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<geometryCollection-x> a geo:GeometryCollection .
		""" ;
.

<S22-GeometryCollectionClass-member-onlyGeometry-sub>
	a sh:PropertyShape ;
	sh:path rdfs:member ;
	sh:sparql [
		sh:message "Eine Instanz von geo:GeometryCollection sollte nur ausgehende rdfs:member-Beziehungen zu geo:Geometry-Instanzen haben."@de ;
		sh:select """
			PREFIX geo: <http://www.opengis.net/ont/geosparql#>
			PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
			SELECT $this
			WHERE {
				$this rdfs:member ?geometry .
				FILTER NOT EXISTS {
					?feature geo:hasGeometry ?geometry .
				}
			}
		""" ;
	] ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Der geo:GeometryCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung zu einem geo:Geometry-Knoten
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<geometryCollection-x> 
		    a geo:GeometryCollection ;
		    rdfs:member <geometry-x> ;
		.		
		
		<feature-x> geo:hasGeometry <geometry-x> .
		""" ,
		"""
		# Ein ungültiges Beispiel: Der geo:GeometryCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung zu einem geo:Geometry-Knoten und eine zu einem Nicht-geo:Geometry-Knoten (einem geo:Feature)
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<geometryCollection-x> 
		    a geo:GeometryCollection ;
		    rdfs:member <geometry-x> , <feature-x> ;
		.
		
		<feature-x> geo:hasGeometry <geometry-x> .
		""" ;
.

#################################################
# Shape 23 - geo:SpatialObjectCollection
#################################################

<S23-SpatialObjectCollection-member-spatialObject>
	a sh:NodeShape ;
	sh:property <S23-SpatialObjectCollection-minOneMember-spatialObject-sub> , <S23-SpatialObjectCollection-member-onlySpatialObject-sub> ;
	sh:targetClass geo:SpatialObjectCollection ;
.

<S23-SpatialObjectCollection-minOneMember-spatialObject-sub>
	a sh:PropertyShape ;
	sh:path rdfs:member ;
	sh:minCount 1 ;
	sh:message "Eine Instanz von geo:SpatialObjectCollection sollte mindestens eine ausgehende rdfs:member Beziehung aufweisen."@de ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Der Instanzknoten geo:SpatialObjectCollection hat eine ausgehende rdfs:member-Beziehung
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<spatialObjectCollection-x>
		    a geo:SpatialObjectCollection ;
		    rdfs:member <feature-x>
		.
		
		<feature-x> geo:hasGeometry <geometry-x> .
		""" ,
		"""
		# Ein ungültiges Beispiel: Der Instanzknoten geo:SpatialObjectCollection hat keine eingehenden rdfs:member-Beziehungen
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<spatialObjectCollection-x>
		    a geo:SpatialObjectCollection ;
		.
		""" ;
.

<S23-SpatialObjectCollection-member-onlySpatialObject-sub>
	a sh:PropertyShape ;
	sh:path rdfs:member ;
	sh:sparql [
		sh:message "Eine Instanz von geo:SpatialObjectCollection sollte nur ausgehende rdfs:member-Beziehungen aufweisen, die zu geo:SpatialObject-Instanzen oder deren Unterklassen verbunden sind."@de ;
		sh:select """
			PREFIX geo: <http://www.opengis.net/ont/geosparql#>
			PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
			SELECT $this
			WHERE {
				$this rdfs:member ?spatialObject .
				FILTER NOT EXISTS {
					?spatialObject geo:hasGeometry|^geo:hasGeometry ?geometryOrFeature .
				}
			}
		""" ;
	] ;
	skos:example 
		"""
		# Ein gültiges Beispiel: Der geo:SpatialObjectCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung zu einem geo:Geometry-Knoten und eine zu einem geo:Feature-Knoten
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<spatialObjectCollection-x>
		    a geo:SpatialObjectCollection ;
		    rdfs:member <geometry-x> , <feature-y> ;
		.
		
		<feature-x> geo:hasGeometry <geometry-x> .
		<feature-y> geo:hasGeometry <geometry-y> .
		""" ,
		"""
		# Ein ungültiges Beispiel: Der geo:SpatialObjectCollection-Instanzknoten hat eine ausgehende rdfs:member-Beziehung zu einem geo:Geometry-Knoten, eine ausgehende rdfs:member-Beziehung zu einem geo:Feature-Knoten und eine dritte ausgehende rdfs:member-Beziehung von einem Knoten eines anderen Typs (z. B. Thing)
		@prefix ex: <http://example.com/> .
		@prefix geo: <http://www.opengis.net/ont/geosparql#> .
		@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

		<spatialObjectCollection-x>
		    a geo:SpatialObjectCollection ;
		    rdfs:member <geometry-x> , <feature-y> , <thing-x> ;
		.
		
		<thing-x> a ex:Thing .		
		<feature-x> geo:hasGeometry <geometry-x> .
		<feature-y> geo:hasGeometry <geometry-y> .
		""" ;
.
